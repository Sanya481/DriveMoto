{"version":3,"file":"script.min.js","mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,2BAA2B;AACxE,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxCgD;AAChD;AACsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;;;;;;;;;;;ACjiBAAiB,aAAa;AAC9B,iBAAiB,QAAQ;AACzB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,wBAAwB;AACtE;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;;;;;;;;;;;ACnGA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,8BAA8B;AACjG;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;ACnJA;AACA;AACA;AACA,sGAAsG;AACtG,CAAC,EAAE,SAAI,wBAAwB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,aAAa,kDAAkD;AAC/D,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA,UAAU;AACV;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,2DAA2D;AAC3D;AACA,oDAAoD;AACpD;AACA,wEAAwE;AACxE;AACA,0GAA0G;AAC1G;AACA,2EAA2E;AAC3E;AACA,6EAA6E;AAC7E;AACA,+DAA+D;AAC/D;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,uCAAuC;AACvyBAAyB,0CAA0C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG;AAClG;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,+BAA+B,yCAAyC;AACxE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,yCAAyC;AACzC,+CAA+C;AAC/C;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,WAAW;AACX;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,wBAAwB;AAC3E;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,aAAa;AACzF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,yBAAyB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,oCAAoC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,aAAa;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,gBAAgB,EAAE,GAAG,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,0EAA0E,cAAc;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA,cAAc,kDAAkD;AAChE,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+FAA+F,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mIAAmI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,aAAa;AAC1E;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4EAA4E,aAAa;AACzF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,qBAAqB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,8CAA8C,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpiFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA,SAAS,GAAG;AACZ;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA,qEAAqE,WAAW;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4EAA4E,aAAa;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,+EAA+E,eAAe;AAC9F;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,+FAA+F,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,aAAa;AAC9D;AACA,CAAC;AACD;;;;;;;;;;;;AC77IA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,68DAA68D;AAC99D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,EAAE,WAAW,EAAE,WAAW,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,4CAA4C;AAC5C;AACA;AACA,wBAAwB;AACxB,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0BAA0B;AAClD;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxpC;AACA;AACA,OAAO,OAAO;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpsCAAsC,eAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,uBAAuB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uBAAuB;AACzyBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD;AACrD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC/mCD;AACA;AACA;AACA,6GAA6G;AAC7G,CAAC,EAAE,SAAI,wBAAwB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,4CAA4C;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,4CAA4C;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+BAA+B;AAC3D;AACA;AACA;AACA;AACA;AACA,gCAAgC,mCAAmC;AACniBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8CAA8C;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C,sCAAsC,yCAAyC;AAC/E,kCAAkC,qCAAqC;AACvE,mCAAmC,sCAAsC;AACzE,qBAAqB,uBAAuB;AAC5C,uBAAuB,yBAAyB;AAChD,yBAAyB,2BAA2B;AACpD,oBAAoB,uBAAuB;AAC3C,uBAAuB,0BAA0B;AACjD,iCAAiC,oCAAoC;AACrE,qBAAqB,uBAAuB;AAC5C,2BAA2B,8BAA8B;AACzD,sBAAsB,yBAAyB;AAC/C,qBAAqB,wBAAwB;AAC7C,uBAAuB,0BAA0B;AACjD,yBAAyB,2BAA2B;AACpD,0BAA0B,6BAA6B;AACvD,sBAAsB,yBAAyB;AAC/C,wBAAwB,2BAA2B;AACnD,+BAA+B,iCAAiC;AAChE,+BAA+B,kCAAkC;AACjE,yBAAyB,2BAA2B;AACpD,0BAA0B,4BAA4B;AACtD,gCAAgC,mCAAmC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,gBAAgB;AAChG;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+BAA+B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA,CAAC;;;;;;;;;;;;AC7sED;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,MAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI,wBAAwB;AAChE;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,gBAAgB;AACxD,yCAAyC,iBAAiB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,IAAI;;;;;;;;;;;;;;;ACriBJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,CAAC,SAAI,iBAAiB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,UAAU;AACzC;AACA,qEAAqE;AACrE;AACA;AACA,KAAK;AACL;;AAEA;AACA,YAAY;;AAEZ,yBAAyB;;AAEzB,4BAA4B;;AAE5B;AACA,eAAe;;AAEf;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB,yBAAyB;;AAEzB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uBAAuB;;AAEvB,oBAAoB;;AAEpB,aAAa;;AAEb;;AAEA,KAAK;AACL;AACA;AACA,KAAK;;AAEL,yBAAyB;;AAEzB,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL,cAAc;;AAEd,aAAa;;AAEb,cAAc;;AAEd,mBAAmB;;AAEnB,qBAAqB;;AAErB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,gBAAgB;AACpC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,gBAAgB;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,kCAAkC;AAC1D;AACA;AACA,QAAQ;AACR;AACA,QAAQ;;AAER,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC,2EAA2E,SAAS;AACpF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0EAA0E;AAC1E,6CAA6C;;AAE7C,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;;AAEA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,QAAQ;AACR;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;;AAEA,sBAAsB,iBAAiB;AACvC;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,4CAA4C,QAAQ;AACpD;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;;AAEA,sBAAsB,iBAAiB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR,kBAAkB,gBAAgB;AAClC,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,gBAAgB;AACpC;;AAEA,sBAAsB,iBAAiB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,0BAA0B,qBAAqB;AAC/C;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA,gDAAgD,QAAQ;AACxD;AACA;AACA,QAAQ;AACR,oBAAoB,qBAAqB;AACzC;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C;;AAE1C;AACA;AACA,QAAQ;;AAER;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C;;AAE9C;AACA;AACA,QAAQ;;AAER;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB;;AAExB,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB;;AAExB,oBAAoB,iBAAiB;AACrC,uCAAuC;;AAEvC;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;;AAEA,sBAAsB,kBAAkB;AACxC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;;AAEzB,oBAAoB,iBAAiB;AACrC;;AAEA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,QAAQ,WAAW;AACnB;;AAEA;AACA;AACA,QAAQ,WAAW;AACnB;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ,4DAA4D;AACpE;;;AAGA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,sEAAsE;AACtE,4EAA4E;AAC5E;AACA;;AAEA;AACA;AACA,sEAAsE;AACtE,4EAA4E;AAC5E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;;AAEA;AACA;;AAEA,wDAAwD,iBAAiB;AACzE;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA,UAAU,WAAW;AACrB;;AAEA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qBAAqB;;AAE7D;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC;;AAEA,kEAAkE,YAAY,GAAG,aAAa;AAC9F;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wBAAwB,6BAA6B;AACrD;AACA;AACA,QAAQ;;;AAGR;AACA;AACA,OAAO,GAAG;;AAEV;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,2CAA2C,yBAAyB;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA,KAAK;;AAEL,oBAAoB,kBAAkB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA,qDAAqD;;AAErD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,2DAA2D,UAAU;AACrE;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB,yCAAyC;AAC3D,OAAO;AACP;;AAEA;AACA;AACA,yCAAyC,yCAAyC;AAClF,OAAO;AACP;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA,sBAAsB,qBAAqB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP,kBAAkB,aAAa;AAC/B,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,6EAA6E,aAAa;AAC1F,4EAA4E,kEAAkE;AAC9I;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR,oBAAoB,4CAA4C;AAChE;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;;;AAGN,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA,MAAM;;;AAGN,yEAAyE,UAAU;AACnF;;AAEA;AACA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uDAAuD;;AAEvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,0BAA0B,yBAAyB,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,kCAAkC,EAAE,gCAAgC,EAAE,+BAA+B;AAC5M;;AAEA;AACA,+CAA+C,kBAAkB,4BAA4B,YAAY;AACzG,MAAM;AACN;AACA,MAAM;;;AAGN;;AAEA;AACA;AACA;AACA,gCAAgC,kBAAkB,QAAQ,2BAA2B,6BAA6B,UAAU;AAC5H,QAAQ;AACR,gCAAgC,kBAAkB,GAAG,2BAA2B,4BAA4B,UAAU;AACtH;AACA,MAAM;;;AAGN,4CAA4C,kBAAkB;;AAE9D;AACA;AACA;AACA,MAAM;;;AAGN,4CAA4C,kBAAkB;;AAE9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,kBAAkB,QAAQ,2BAA2B,6BAA6B,0CAA0C;AAC5J,QAAQ;AACR,gCAAgC,kBAAkB,GAAG,2BAA2B,4BAA4B,0CAA0C;AACtJ;;AAEA;AACA,gCAAgC,kBAAkB,QAAQ,2BAA2B,6BAA6B,0CAA0C;AAC5J,QAAQ;AACR,gCAAgC,kBAAkB,GAAG,2BAA2B,4BAA4B,0CAA0C;AACtJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;;AAEA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN,0CAA0C,EAAE,MAAM,EAAE,MAAM,EAAE;AAC5D;;AAEA;AACA,sDAAsD;;AAEtD;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;AACA,iFAAiF,kFAAkF,+BAA+B;;AAElM;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA,oDAAoD,mDAAmD;AACvG;;AAEA,6BAA6B,KAAK;;AAElC;AACA;AACA,2CAA2C,KAAK;AAChD;AACA;;AAEA,0CAA0C,KAAK;;AAE/C;AACA,0CAA0C,KAAK;AAC/C,QAAQ;AACR,0CAA0C,KAAK;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iGAAiG,aAAa;AAC9G;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;;AAEA;AACA,8FAA8F,MAAM;AACpG,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4CAA4C;;AAE5C,sCAAsC;;AAEtC;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD,sDAAsD,0BAA0B;;AAErI;AACA,4CAA4C;;AAE5C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB;;AAExB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA,wBAAwB;;AAExB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,kBAAkB,4BAA4B,UAAU,UAAU,2BAA2B;AAC9I;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA,+CAA+C,kBAAkB,4BAA4B,UAAU,UAAU,2BAA2B;AAC5I;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU;;AAEhB;AACA,2BAA2B,kBAAkB,GAAG,2BAA2B;AAC3E,wCAAwC,kBAAkB;;AAE1D;AACA;;AAEA;AACA,wBAAwB,oBAAoB;AAC5C,yEAAyE,mBAAmB,EAAE,uBAAuB;AACrH;AACA;;AAEA,wCAAwC,kBAAkB;AAC1D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL,oBAAoB,yBAAyB;AAC7C;AACA;;AAEA,2CAA2C,QAAQ;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,4BAA4B,kBAAkB,GAAG,2BAA2B,IAAI,kBAAkB,GAAG,uBAAuB;AAC5H;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD;;AAEhD;;AAEA;AACA;AACA;;AAEA,wFAAwF,sBAAsB;AAC9G,gEAAgE;;AAEhE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA,wDAAwD;;AAExD;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN,kDAAkD;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,MAAM;;;AAGN;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;;;AAGN;AACA;;AAEA,oBAAoB,uBAAuB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mFAAmF;AACnF;;AAEA;AACA,sFAAsF;AACtF;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,4CAA4C;;AAE5C;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA,MAAM,UAAU;;AAEhB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,sFAAsF;;AAEtF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,8BAA8B,OAAO,8BAA8B;AAC5F;AACA,MAAM;AACN,sBAAsB,8BAA8B;;AAEpD;AACA,wBAAwB,8BAA8B;AACtD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA,QAAQ;;AAER;AACA,6CAA6C,MAAM;AACnD;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU;;AAEhB;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO,GAAG;;AAEV,oCAAoC,+BAA+B;;AAEnE,+BAA+B;AAC/B,uCAAuC;AACvC,qCAAqC,WAAW;;AAEhD;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,QAAQ;;;AAGR,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,8BAA8B;;AAE9B;AACA;AACA,QAAQ;;;AAGR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,wCAAwC,mBAAmB;AAC3D;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,wCAAwC,QAAQ;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gCAAgC,qCAAqC,EAAE,iBAAiB,eAAe,qCAAqC,EAAE,aAAa;AAC3J;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,+DAA+D;AAClF;;AAEA;AACA;AACA,4EAA4E;;AAE5E;;AAEA;AACA;;AAEA;AACA,SAAS;;;AAGT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA,QAAQ;;;AAGR,2BAA2B;;AAE3B;AACA;AACA,QAAQ;;;AAGR,2BAA2B;;AAE3B;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA,QAAQ;AACR;AACA,QAAQ;;;AAGR,6BAA6B;;AAE7B,iCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;;AAEA,oCAAoC;;AAEpC,kCAAkC;;AAElC,6BAA6B;;AAE7B;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,gHAAgH,yBAAyB,6BAA6B,MAAM,IAAI,MAAM;AACtL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,OAAO;AAClD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,SAAS;AACxC;AACA;;AAEA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,yBAAyB;AAC5D,QAAQ;AACR,mCAAmC,iBAAiB;AACpD;AACA,uCAAuC,yBAAyB,4BAA4B,EAAE;AAC9F;AACA;AACA;;AAEA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,qEAAqE,OAAO;AAC5E;AACA;;AAEA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,QAAQ;AACvD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,qCAAqC;AACrE;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,qEAAqE,mBAAmB;AACxF;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B;;AAE5B,mCAAmC,yBAAyB,wCAAwC,+BAA+B;AACnI;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,wBAAwB;AAChD;;AAEA;AACA,4DAA4D;;AAE5D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA,QAAQ;AACR;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;;AAGA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;;;AAGR,oDAAoD;;AAEpD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD;;AAEhD;AACA;AACA;;AAEA;AACA;AACA,8FAA8F;AAC9F,UAAU,6EAA6E;AACvF,QAAQ;AACR;AACA;;AAEA;AACA,yCAAyC;;AAEzC;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA,qCAAqC;AACrC;;AAEA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;;;AAGA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM,aAAa;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,YAAY;;;AAGZ,qDAAqD;;AAErD,4GAA4G;;AAE5G;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD,gBAAgB;;AAEhE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,eAAe;AACf,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,IAAI;AAC5B,8BAA8B,IAAI;AAClC,0BAA0B,IAAI;AAC9B,yBAAyB,IAAI;AAC7B,uBAAuB,IAAI;AAC3B,wBAAwB,IAAI;AAC5B,iCAAiC,IAAI;AACrC,qCAAqC,IAAI;AACzC,2BAA2B,IAAI;AAC/B,sBAAsB,IAAI;AAC1B,4BAA4B,IAAI;AAChC,0BAA0B,IAAI;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR,wCAAwC,kBAAkB,GAAG,SAAS,2BAA2B,kBAAkB,GAAG,SAAS,GAAG,SAAS;AAC3I;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iEAAiE,6CAA6C;;AAE9G;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yGAAyG,yBAAyB,EAAE,OAAO;;AAE3I;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,yBAAyB;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,gBAAgB;AACrD,wCAAwC,yBAAyB;AACjE;;AAEA;AACA;AACA,wDAAwD,QAAQ;AAChE,6DAA6D,yBAAyB;AACtF;;AAEA,uFAAuF,yBAAyB;AAChH,gBAAgB;AAChB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qEAAqE,cAAc;AACnF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA,wGAAwG,OAAO,WAAW,OAAO;AACjI;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,qBAAqB;AAC7C;AACA;AACA,YAAY;AACZ,kCAAkC,sBAAsB,SAAS,mBAAmB,MAAM,qBAAqB;AAC/G;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,2CAA2C,oBAAoB,qCAAqC,kBAAkB;AACtH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,2CAA2C,4BAA4B;AACvE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,qBAAqB,EAAE,YAAY;AAC3D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,yCAAyC,OAAO;AAChD,oCAAoC,QAAQ;AAC5C,QAAQ;AACR,8CAA8C,OAAO;AACrD,qCAAqC,QAAQ;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,oCAAoC,SAAS;AAC7C,QAAQ;AACR,qCAAqC,SAAS;AAC9C;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,kCAAkC;;AAEnE;AACA,mCAAmC,kCAAkC;AACrE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,eAAe,uCAAuC;AACtD,QAAQ;AACR,eAAe,yBAAyB;AACxC;;AAEA;AACA,eAAe,2BAA2B;AAC1C,QAAQ;AACR,eAAe,aAAa;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,EAAE,IAAI,EAAE;AAC7C,QAAQ;AACR;AACA,qCAAqC,EAAE,IAAI,EAAE,eAAe,aAAa;AACzE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mDAAmD,yBAAyB;AAC5E;AACA,qDAAqD,sBAAsB;AAC3E,2DAA2D,sBAAsB;AACjF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6DAA6D,WAAW;AACxE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6FAA6F,WAAW;AACxG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,eAAe,MAAM,eAAe;AACxF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;;AAE/D;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,eAAe,MAAM,eAAe;AACrH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD,yBAAyB;AAC9E;;AAEA;AACA;AACA,8DAA8D,+BAA+B;AAC7F,YAAY;AACZ;AACA;AACA;;AAEA,qDAAqD,sBAAsB;AAC3E,2DAA2D,sBAAsB;AACjF;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,wBAAwB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,oEAAoE,WAAW,MAAM,WAAW;AAChG,6EAA6E,WAAW;AACxF;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D,+BAA+B;AAC3F,UAAU;AACV;AACA;;AAEA,qDAAqD,sBAAsB;AAC3E,2DAA2D,sBAAsB;AACjF;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,wBAAwB;AAC9D;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,gDAAgD;;AAEhD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;;AAGR,wDAAwD,kCAAkC;AAC1F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,gDAAgD;;AAEhD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;;AAGR,yDAAyD,kCAAkC;AAC3F;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kEAAkE,yBAAyB,4BAA4B,MAAM;AAC7H,wCAAwC,oBAAoB,QAAQ,mBAAmB,SAAS,oBAAoB;;AAEpH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD,WAAW;AAChE;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,sBAAsB;;AAElD;AACA;;AAEA;AACA,4FAA4F,mBAAmB,UAAU,kCAAkC;AAC3J;AACA,cAAc;AACd,qEAAqE,kCAAkC,4BAA4B,mBAAmB;AACtJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,wBAAwB,4BAA4B,MAAM;AAChG;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,gCAAgC,+BAA+B;AAC/D;AACA;AACA,SAAS;AACT,QAAQ;AACR,kCAAkC,iCAAiC;AACnE;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6EAA6E;;AAE7E,oDAAoD,cAAc;AAClE;AACA,YAAY;;;AAGZ,iCAAiC,iBAAiB;AAClD;AACA;AACA,UAAU;AACV,oDAAoD,4BAA4B;AAChF;AACA,oDAAoD,4BAA4B;AAChF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,sBAAsB,wBAAwB;AAC9C;;AAEA;AACA,0DAA0D;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD,8BAA8B,QAAQ,IAAI,cAAc;AACxD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4EAA4E,EAAE,OAAO,EAAE;AACvF;AACA;;AAEA,6BAA6B,2CAA2C;AACxE;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;;AAErC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA,mEAAmE,oBAAoB;AACvF;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qEAAqE,EAAE,OAAO,EAAE,8BAA8B,EAAE,cAAc,EAAE;AAChI;AACA,OAAO,GAAG;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,qCAAqC;AAC1E,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,KAAK,GAAG,IAAI,GAAG,MAAM;AACxC,QAAQ;AACR,mBAAmB,IAAI,GAAG,MAAM;AAChC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,uDAAuD,YAAY;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,wDAAwD,yBAAyB,cAAc,QAAQ;AACvG;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oDAAoD,uDAAuD;AAC3G;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uDAAuD,YAAY;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;;AAEA,oEAAoE;AACpE;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B;;AAE5B;AACA;AACA;;AAEA,8FAA8F,aAAa;AAC3G,8FAA8F,aAAa;AAC3G,uEAAuE,oEAAoE,uFAAuF;AAClO;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR,mDAAmD;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA,YAAY;;;AAGZ,kHAAkH,iBAAiB;AACnI,kHAAkH,iBAAiB;;AAEnI;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;;AAEZ;AACA;AACA,QAAQ;;;AAGR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,sBAAsB;AAC9C,wEAAwE,qBAAqB;AAC7F;AACA,QAAQ;AACR,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,UAAU;AACV;;AAEA,0BAA0B,qBAAqB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,UAAU;;;AAGV;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,WAAW;AACX,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ,sBAAsB;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,gFAAgF,aAAa;AAC7F;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,yCAAyC,kCAAkC;AAC3E,OAAO;;AAEP;AACA;AACA;;AAEA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,mBAAmB;AACzC;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA,8CAA8C,kBAAkB;AAChE;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,mBAAmB;AACzC;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA,oBAAoB,yBAAyB;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA,8CAA8C,kBAAkB;AAChE;;AAEA;AACA;;AAEA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,0BAA0B;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,gCAAgC,qCAAqC,EAAE,OAAO;;AAE9E;AACA,kCAAkC,qCAAqC;AACvE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,0BAA0B;AAClD;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,QAAQ;AACR;;AAEA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,2BAA2B,GAAG,MAAM,GAAG;AAChD;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,YAAY;AACnC,WAAW;AACX,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,mBAAmB;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,+BAA+B,eAAe,8BAA8B,mBAAmB,GAAG,MAAM,GAAG,MAAM,GAAG;;AAEzJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gEAAgE,8BAA8B;AAC9F;AACA;;AAEA;AACA,+DAA+D,kCAAkC;AACjG;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,eAAe;AAC/D,wCAAwC,eAAe;AACvD,OAAO;;AAEP;AACA;AACA,sDAAsD,sCAAsC,MAAM,iBAAiB,yCAAyC,mBAAmB;AAC/K,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,6CAA6C,OAAO,OAAO,OAAO,qBAAqB,0BAA0B,MAAM,2BAA2B;AAClJ;AACA;;AAEA;AACA,gDAAgD,QAAQ,cAAc,0CAA0C,eAAe,2CAA2C;AAC1K;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA,8CAA8C,WAAW,KAAK,OAAO;AACrE;AACA,kDAAkD,YAAY;;AAE9D;AACA,sDAAsD,WAAW,KAAK,OAAO;AAC7E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,sBAAsB,mBAAmB;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC,GAAG,MAAM,GAAG,mBAAmB,QAAQ,eAAe,QAAQ;AACvG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC,8CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA,oEAAoE;;AAEpE;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;AACA,yEAAyE;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,WAAW,KAAK,WAAW,KAAK,WAAW,eAAe,QAAQ,eAAe,QAAQ,aAAa,MAAM;AAC1J;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,MAAM;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA,sDAAsD,OAAO;AAC7D;;AAEA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;;;AAGV;AACA,6BAA6B,MAAM,QAAQ,0CAA0C,IAAI,gCAAgC;AACzH,SAAS,GAAG;;AAEZ;AACA;AACA,SAAS;AACT;AACA;AACA,wCAAwC,KAAK,eAAe,KAAK,eAAe,KAAK;AACrF,4DAA4D,qDAAqD,cAAc,qDAAqD;AACpL;AACA,yCAAyC,gBAAgB,IAAI,cAAc,EAAE,YAAY,GAAG;;AAE5F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,sBAAsB;AAC1E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uCAAuC;AACzD;;AAEA;AACA;AACA,uBAAuB,GAAG,QAAQ,2BAA2B;AAC7D,UAAU;AACV;AACA,uBAAuB,GAAG,SAAS,2BAA2B;AAC9D,UAAU;AACV,kBAAkB,GAAG;AACrB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,2BAA2B,OAAO,2BAA2B;AAC3G;AACA,oBAAoB,GAAG,IAAI,GAAG,IAAI,GAAG;AACrC,gBAAgB,OAAO;AACvB,cAAc,YAAY;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA,CAAC;AACD;AACA;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;UCt2TxB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AAC4B;AACD;AAC3B;AACA;AAC2B;AACA;AAC3B;AACA;AACA;AACyB;AACH;AACD;AACA;AACQ;AACJ;AACzB;AACA;AACA;AACmC;AACnC;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF;AACA,UAAU;AACV,kDAAkD,qBAAqB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://gulp-template/./src/js/accordions.js","webpack://gulp-template/./src/js/burger.js","webpack://gulp-template/./src/js/catalog-filter.js","webpack://gulp-template/./src/js/price-slider.js","webpack://gulp-template/./src/js/select.js","webpack://gulp-template/./src/js/sliders.js","webpack://gulp-template/./src/js/sort-popup.js","webpack://gulp-template/./src/js/vendor/imask.js","webpack://gulp-template/./src/js/vendor/jquery.rateyo.js","webpack://gulp-template/./src/js/vendor/nouislider.js","webpack://gulp-template/./src/js/vendor/rater.js","webpack://gulp-template/./src/js/vendor/swiper.js","webpack://gulp-template/webpack/bootstrap","webpack://gulp-template/webpack/runtime/define property getters","webpack://gulp-template/webpack/runtime/hasOwnProperty shorthand","webpack://gulp-template/webpack/runtime/make namespace object","webpack://gulp-template/./src/js/script.js"],"sourcesContent":["\r\nconst accordions = document.querySelectorAll('[data-accordion]');\r\n\r\n\r\nif (accordions) {\r\n\r\n  accordions.forEach((accordion) => {\r\n\r\n    accordion.addEventListener('click', (evt) => {\r\n      if (evt.target.matches('[data-accordion-btn]')) {\r\n        const accordionBtn = evt.target;\r\n        const accordion = evt.target.closest('[data-accordion]');\r\n\r\n        const accordionList = accordion.querySelector('[data-accordion-list]');\r\n\r\n        accordion.classList.toggle('is-open');\r\n        accordionBtn.classList.toggle('is-open');\r\n\r\n        if (accordionBtn.classList.contains('is-open')) {\r\n          accordionList.style.maxHeight = `${accordionList.scrollHeight}px`;\r\n        } else {\r\n          accordionList.style.maxHeight = 0;\r\n        }\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n","if (window.matchMedia('screen and (max-width: 899px)').matches) {\r\n  const body = document.body;\r\n  const header = document.querySelector('[data-header]');\r\n  const mobileNav = header.querySelector('[data-mobile-nav]');\r\n  const burger = document.querySelector('[data-burger]');\r\n  const burgerCircle = burger.querySelector('[data-burger-circle]');\r\n\r\n  burger.addEventListener('click', (evt) => {\r\n    evt.preventDefault();\r\n\r\n    body.classList.toggle('scroll-lock');\r\n    // header.classList.toggle('is-show');\r\n    burger.classList.toggle('is-show');\r\n\r\n    burger.classList.toggle('is-open');\r\n    burgerCircle.classList.toggle('is-expand');\r\n    mobileNav.classList.toggle('is-open');\r\n\r\n  })\r\n\r\n}\r\n","if (window.matchMedia('screen and (max-width: 1023px)').matches) {\r\n\r\n  const pageBody = document.body;\r\n  // Общая секция с каталогом и фильтром\r\n  const pageCatalog = document.querySelector('[data-page-catalog]');\r\n\r\n  if (pageCatalog) {\r\n    // Фильтр\r\n    const filterCatalog = pageCatalog.querySelector('[data-filter-catalog]');\r\n    // Кнопка закрытия фильтра\r\n    const filterCatalogCloseBtn = pageCatalog.querySelector('[data-filter-catalog-close]');\r\n    // Кнопка открытия фильтра\r\n    const filterMobileBtn = document.querySelector('[data-filter-mobile]');\r\n\r\n\r\n    const onFilterPopupClose = () => {\r\n      filterCatalog.classList.remove('is-open');\r\n      pageBody.classList.remove('scroll-lock');\r\n\r\n      filterCatalogCloseBtn.removeEventListener('click', onFilterPopupClose);\r\n    }\r\n\r\n    const onFilterPopupOpen = () => {\r\n\r\n      filterCatalog.classList.add('is-open');\r\n      pageBody.classList.add('scroll-lock');\r\n      filterCatalogCloseBtn.addEventListener('click', onFilterPopupClose);\r\n    }\r\n\r\n    if (filterMobileBtn) {\r\n      filterMobileBtn.addEventListener('click', onFilterPopupOpen);\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import nouislider from './vendor/nouislider.js';\r\n\r\nimport imask from './vendor/imask.js';\r\n\r\n// const numberMask = IMask(\r\n//   document.querySelector('#number-mask'),\r\n//   {\r\n//     mask: Number,\r\n//     // other options are optional with defaults below\r\n//     scale: 2,  // digits after point, 0 for integers\r\n//     signed: false,  // disallow negative\r\n//     thousandsSeparator: ',',  // any single char\r\n//     padFractionalZeros: false,  // if true, then pads zeros at end to the length of scale\r\n//     normalizeZeros: true,  // appends or removes zeros at ends\r\n//     radix: ',',  // fractional delimiter\r\n//     mapToRadix: ['.'],  // symbols to process as radix\r\n\r\n//     // additional number interval options (e.g.)\r\n//     min: -10000,\r\n//     max: 100000000\r\n//   });\r\n\r\nconst filterPpriceSlider = document.querySelector('[data-price-slider]');\r\n\r\nif (filterPpriceSlider) {\r\n\r\n  const productPriceMin = document.querySelector('[data-slider-value-min]');\r\n  const productPriceMax = document.querySelector('[data-slider-value-max]');\r\n  const prices = [productPriceMin, productPriceMax];\r\n\r\n  /**\r\n   * @description Изменение ползунка слайдера в зависимости от введенного значения\r\n   * @param {number} inputIndex - индекс input\r\n   * @param {number} inputValue - значение input\r\n   */\r\n  const setRangeSlider = (inputIndex, inputValue) => {\r\n    // Массив для изменения только одного значения\r\n    let arr = [null, null];\r\n    arr[inputIndex] = inputValue;\r\n\r\n    filterPpriceSlider.noUiSlider.set(arr);\r\n  }\r\n\r\n  noUiSlider.create(filterPpriceSlider, {\r\n    start: [10000, 100000000],\r\n    connect: true,\r\n    step: 1,\r\n    range: {\r\n      'min': [100000],\r\n      'max': [100000000]\r\n    }\r\n  })\r\n\r\n  filterPpriceSlider.noUiSlider.on('update', function (values, handle) {\r\n    // console.log('productPriceMin', productPriceMin.value)\r\n    // console.log('handle', handle)\r\n    prices[handle].value = Math.round(values[handle]);\r\n  })\r\n\r\n  prices.forEach((input, index) => {\r\n    input.addEventListener('change', (evt) => {\r\n      setRangeSlider(index, evt.currentTarget.value)\r\n    })\r\n  })\r\n\r\n}\r\n","// Секция с сортировкой товаров\r\n// Ищем в сортировке товаров, чтобы не сбить работу фильтров товаров\r\nconst goodsSortingBlock = document.querySelector('[data-goods-sorting]');\r\n\r\nif (goodsSortingBlock) {\r\n  /**\r\n   * Блок с сортировкой товаров\r\n   */\r\n  const sortSelectBlock = goodsSortingBlock.querySelector('[data-select]');\r\n\r\n  // Сортировка товаров\r\n  if (sortSelectBlock) {\r\n\r\n    if (window.matchMedia('screen and (min-width: 768px').matches) {\r\n\r\n      /* ========================== Общие*/\r\n\r\n      /**\r\n       * Input поле для записи значения выбранного варинта сортировки\r\n       */\r\n      const selectInputField = sortSelectBlock.querySelector('[data-select-input-field]');\r\n      /**\r\n       * Label для записи выбранного варианта сортировки\r\n       */\r\n      const selectBtn = sortSelectBlock.querySelector('[data-select-btn]');\r\n\r\n\r\n      // /* ========================== Для попапа */\r\n\r\n      // /**\r\n      //  * Попап в мобилке\r\n      //  */\r\n      // const sortPopupMobile = document.querySelector('[data-sort-popup]');\r\n      // /**\r\n      // * Список вариантов сортировки\r\n      // */\r\n      // const sortPopupList = sortPopupMobile.querySelector('[data-sort-popup-list]');\r\n      // /**\r\n      // * Все кнопки\r\n      // */\r\n      // const sortPopupItems = sortPopupList.querySelectorAll('[data-sort-popup-item]');\r\n\r\n\r\n      /* ========================== Для списка в десктопе и планшете */\r\n\r\n      /**\r\n       * Список вариантов сортировки\r\n       */\r\n      const selectList = sortSelectBlock.querySelector('[data-select-list]');\r\n      /**\r\n       * Все кнопки\r\n       */\r\n      const selectItems = selectList.querySelectorAll('[data-select-item]');\r\n\r\n      /**\r\n       * Высота выпадашки по умолчанию\r\n       */\r\n      const SELECT_LIST_DEFAULT_HEIGHT = 0;\r\n      /**\r\n       * Код клавиши Tab\r\n       */\r\n      const KEYCODE_TAB = 9;\r\n\r\n\r\n\r\n      /**\r\n       * @description Ловушка фокуса\r\n       */\r\n      const trapFocus = (evt) => {\r\n        // Элементы списка можно изменять и это может быть не только button\r\n        const focusableEls = selectList.querySelectorAll('button');\r\n        const firstFocusableEl = focusableEls[0];\r\n        const lastFocusableEl = focusableEls[focusableEls.length - 1];\r\n        const isTabPressed = (evt.key === 'Tab' || evt.key === KEYCODE_TAB)\r\n\r\n        if (!isTabPressed) {\r\n          return\r\n        }\r\n\r\n        /* shift + tab */\r\n        if (evt.shiftKey) {\r\n          if (document.activeElement === firstFocusableEl) {\r\n            lastFocusableEl.focus();\r\n            evt.preventDefault();\r\n          }\r\n          /* tab */\r\n        } else {\r\n          if (document.activeElement === lastFocusableEl) {\r\n            firstFocusableEl.focus()\r\n            evt.preventDefault();\r\n          }\r\n        }\r\n      }\r\n\r\n      const onClickOverlay = (evt) => {\r\n\r\n        const overlayClick = !evt.composedPath().includes(sortSelectBlock)\r\n\r\n        if (overlayClick) {\r\n          sortSelectBlock.classList.remove('is-show');\r\n          selectList.style.maxHeight = SELECT_LIST_DEFAULT_HEIGHT;\r\n          selectInputField.checked = false;\r\n\r\n          selectItems.forEach((item) => {\r\n            item.disabled = true;\r\n          })\r\n\r\n          selectList.removeEventListener('click', changeSelectValue);\r\n          document.removeEventListener('click', onClickOverlay);\r\n          selectList.removeEventListener('keydown', trapFocus);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * @description Выбор варианта сортировки и запись значения в поле select\r\n       * @param {HTMLElement} option - кнопка с значением\r\n       * @param {string} optionValue - один из вариантов сортировки\r\n       * @param {Array} optionBtns - все кнопки\r\n       */\r\n      const chooseSelectValue = (option, optionValue, optionBtns) => {\r\n        // Для удобства считывания выбранной пользователем фильтрации - задаем value у input\r\n        selectInputField.value = optionValue;\r\n        // Текстовое значение подставляем в label\r\n        selectBtn.textContent = optionValue;\r\n\r\n        // Возвращаем кнопкам disabled и убираем класс (разворачиваем стрелочку)\r\n        optionBtns.forEach((item) => {\r\n          item.classList.remove('is-active');\r\n          item.disabled = true;\r\n        })\r\n\r\n        // Убираем подстветку активного эл-та\r\n        option.classList.add('is-active');\r\n\r\n        // Убираем общий класс\r\n        sortSelectBlock.classList.remove('is-show');\r\n        // Скрываем список\r\n        selectList.style.maxHeight = SELECT_LIST_DEFAULT_HEIGHT;\r\n        // Убираем у checkbox состояние checked\r\n        selectInputField.checked = false;\r\n      }\r\n\r\n      /**\r\n       * @description Изменение значения у select\r\n       */\r\n      const changeSelectValue = (evt) => {\r\n        if (evt.target.matches('[data-select-item]')) {\r\n          const selectItem = evt.target;\r\n          const selectItemValue = evt.target.textContent;\r\n\r\n          switch (selectItemValue) {\r\n            case 'По полулярности':\r\n\r\n              chooseSelectValue(selectItem, selectItemValue, selectItems);\r\n              break\r\n\r\n            case 'Сначала дешевле':\r\n\r\n              chooseSelectValue(selectItem, selectItemValue, selectItems);\r\n              break\r\n\r\n            case 'Сначала дороже':\r\n\r\n              chooseSelectValue(selectItem, selectItemValue, selectItems);\r\n              break\r\n          }\r\n        }\r\n      }\r\n\r\n      // /**\r\n      //  *   Функция закрытия попапа при клике вне области\r\n      //  */\r\n      // const onOverlayClick = (evt) => {\r\n      //   const elementsCLickArea = !evt.composedPath().includes(sortPopupMobile);\r\n\r\n      //   if (elementsCLickArea) {\r\n      //     sortSelectBlock.classList.remove('is-show');\r\n      //     sortPopupMobile.classList.remove('is-open');\r\n      //     pageBody.classList.remove('shadow');\r\n      //     pageBody.classList.remove('scroll-lock');\r\n\r\n      //     // Убираем у checkbox состояние checked\r\n      //     selectInputField.checked = false;\r\n\r\n      //     // Добавили обработчик на закрытие по клику вне модального окна\r\n      //     document.removeEventListener('click', onOverlayClick);\r\n      //   }\r\n      // }\r\n\r\n      selectInputField.addEventListener('change', (evt) => {\r\n        evt.stopPropagation();\r\n\r\n        switch (evt.target.checked) {\r\n          case true:\r\n\r\n            // /* Функционал только для мобилки */\r\n            // if (window.matchMedia('screen and (max-width: 767px)').matches) {\r\n            //   sortSelectBlock.classList.add('is-show');\r\n            //   sortPopupMobile.classList.add('is-open');\r\n            //   pageBody.classList.add('shadow');\r\n            //   pageBody.classList.add('scroll-lock');\r\n\r\n            //   // Добавили обработчик на закрытие по клику вне модального окна\r\n            //   document.addEventListener('click', onOverlayClick);\r\n            //   sortPopupList.addEventListener('click', onChangePopupSortValue);\r\n            // }\r\n\r\n            /* Функционал только для планшете и десктопа */\r\n            if (window.matchMedia('screen and (min-width: 768px)').matches) {\r\n\r\n              sortSelectBlock.classList.add('is-show');\r\n              selectList.style.maxHeight = `${selectList.scrollHeight}px`;\r\n\r\n              selectItems.forEach((item) => {\r\n                item.disabled = false;\r\n              })\r\n\r\n              // !!!! Один обработчик на открытие списка и на выбор значения - не работает !!!!\r\n              selectList.addEventListener('click', changeSelectValue);\r\n\r\n              selectList.addEventListener('keydown', trapFocus);\r\n              document.addEventListener('click', onClickOverlay);\r\n\r\n            }\r\n\r\n            break\r\n\r\n          case false:\r\n\r\n            // // Функционал только для мобилки\r\n            // if (window.matchMedia('screen and (max-width: 767px)').matches) {\r\n\r\n            //   if (sortSelectBlock.classList.contains('is-show')) {\r\n            //     sortSelectBlock.classList.remove('is-show');\r\n            //     sortPopupMobile.classList.remove('is-open');\r\n            //     pageBody.classList.remove('shadow');\r\n            //     pageBody.classList.remove('scroll-lock');\r\n\r\n            //   }\r\n            // }\r\n\r\n\r\n            /* Функционал только для планшете и десктопа */\r\n            if (window.matchMedia('screen and (min-width: 768px)').matches) {\r\n\r\n              if (sortSelectBlock.classList.contains('is-show')) {\r\n                sortSelectBlock.classList.remove('is-show');\r\n                selectList.style.maxHeight = SELECT_LIST_DEFAULT_HEIGHT;\r\n\r\n                selectItems.forEach((item) => {\r\n                  item.disabled = true;\r\n                })\r\n\r\n                selectList.removeEventListener('click', changeSelectValue);\r\n                selectList.removeEventListener('keydown', trapFocus);\r\n                document.removeEventListener('click', onClickOverlay);\r\n\r\n              }\r\n            }\r\n\r\n            break\r\n\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","// Swiper\r\n// ============================================\r\n\r\n// Слайдер в секции intro\r\nconst swiperIntro = document.querySelector('[data-intro-slider]');\r\n\r\nif (swiperIntro) {\r\n  const swiper = new Swiper(swiperIntro, {\r\n\r\n    // !!! Не работает отключение кнопок в планшетной/мобильной версии\r\n    //Брейкпоинты (адаптив)\r\n    //Ширина экрана\r\n    breakpoints: {\r\n      // when window width is >= 768px\r\n      768: {\r\n        // Navigation arrows\r\n        navigation: {\r\n          prevEl: '[data-intro-slider-btn-prev]',\r\n          nextEl: '[data-intro-slider-btn-next]',\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    // If we need pagination\r\n    pagination: {\r\n      el: '.swiper-pagination',\r\n      /* bulletElement - определяет, какой HTML-тег будет использоваться для представления одного маркера нумерации страниц. */\r\n      // bulletElement: 'button',\r\n      /* Если clickable: true нажатие на кнопку пагинации приведет к переходу на соответствующий слайд. */\r\n      clickable: true,\r\n    },\r\n\r\n\r\n    // Включение/Отключение перетаскивания на ПК\r\n    simulateTouch: false,\r\n  })\r\n}\r\n\r\nconst popularGoodsSliders = document.querySelectorAll('[data-popular-goods-slider]');\r\n\r\nif (popularGoodsSliders) {\r\n\r\n  popularGoodsSliders.forEach((slider) => {\r\n    const swiper = new Swiper(slider, {\r\n\r\n      //Брейкпоинты (адаптив)\r\n      //Ширина экрана\r\n      breakpoints: {\r\n        // when window width is >= 320px\r\n        320: {\r\n          // Количество слайдов для показа\r\n          slidesPerView: 1,\r\n\r\n          pagination: {\r\n            el: slider.closest('[data-tab-content]').querySelector('[data-popular-goods-pagination]'),\r\n            // Переключение слайдов нажатием на пагинацию\r\n            clickable: true,\r\n            // Крайние кнопки пагинации в размерах уменьшены и часть кнопок скрыта\r\n            dynamicBullets: true,\r\n          }\r\n        },\r\n\r\n        600: {\r\n          slidesPerView: 2,\r\n\r\n        },\r\n\r\n        // when window width is >= 768px\r\n        768: {\r\n          slidesPerView: 2,\r\n          // dynamicBullets: false,\r\n        },\r\n\r\n        1024: {\r\n          slidesPerView: 3,\r\n        },\r\n\r\n        1200: {\r\n          slidesPerView: 4,\r\n\r\n          // Navigation errows\r\n          navigation: {\r\n            prevEl: slider.closest('[data-tab-content]').querySelector('[data-popular-goods-slider-btn-prev]'),\r\n            nextEl: slider.closest('[data-tab-content]').querySelector('[data-popular-goods-slider-btn-next]'),\r\n          },\r\n        }\r\n      },\r\n\r\n      // Включение/Отключение перетаскивания на ПК\r\n      simulateTouch: false,\r\n\r\n      // Отступ между слайдами\r\n      spaceBetween: 25,\r\n      // Количество пролистываемых слайдов\r\n      slidesPerGroup: 1,\r\n    })\r\n  })\r\n}\r\n\r\n","// import { sortSelectBlock } from './select.js';\r\n\r\nconst pageBody = document.body;\r\n\r\n/**\r\n * Блок с сортировкой товаров\r\n */\r\nconst sortSelectBlock = document.querySelector('[data-select]');\r\n\r\n// Сортировка товаров\r\nif (sortSelectBlock) {\r\n\r\n  if (window.matchMedia('screen and (max-width: 768px').matches) {\r\n\r\n    /**\r\n    * Попап в мобилке\r\n    */\r\n    const sortPopupMobile = document.querySelector('[data-sort-popup]');\r\n    /**\r\n    * Список вариантов сортировки\r\n    */\r\n    const sortPopupList = sortPopupMobile.querySelector('[data-sort-popup-list]');\r\n    /**\r\n    * Все кнопки\r\n    */\r\n    const sortPopupItems = sortPopupList.querySelectorAll('[data-sort-popup-item]');\r\n\r\n\r\n    /**\r\n     * Input поле для записи значения выбранного варинта сортировки\r\n     */\r\n    const selectInputField = sortSelectBlock.querySelector('[data-select-input-field]');\r\n    /**\r\n     * Label для записи выбранного варианта сортировки\r\n     */\r\n    const selectBtn = sortSelectBlock.querySelector('[data-select-btn]');\r\n\r\n    /* Начальные установки */\r\n    selectInputField.checked = false;\r\n\r\n    // Задаем скрытие эл-та в зависимости от кол-ва вариантов сортировки используя переменную - высоты блока\r\n    sortPopupMobile.style.setProperty('--sort-popup-to-bottom', `${-sortPopupMobile.offsetHeight}px`);\r\n\r\n    // console.log(sortPopupMobile.offsetHeight);\r\n\r\n    /**\r\n     * @description Выбор варианта сортировки и запись значения в поле select\r\n     * @param {HTMLElement} option - кнопка с значением\r\n     * @param {string} optionValue - один из вариантов сортировки\r\n     * @param {Array} optionBtns - все кнопки\r\n     */\r\n    const chooseSelectPopupValue = (option, optionValue, optionBtns) => {\r\n      // Для удобства считывания выбранной пользователем фильтрации - задаем value у input\r\n      selectInputField.value = optionValue;\r\n      // Текстовое значение подставляем в label\r\n      selectBtn.textContent = optionValue;\r\n\r\n      // Возвращаем кнопкам disabled и убираем класс (разворачиваем стрелочку)\r\n      optionBtns.forEach((item) => {\r\n        item.classList.remove('is-active');\r\n        item.disabled = true;\r\n      })\r\n\r\n      // Убираем подстветку активного эл-та\r\n      option.classList.add('is-active');\r\n\r\n      // Убираем общий класс\r\n      sortSelectBlock.classList.remove('is-show');\r\n      // Скрываем список\r\n      sortPopupMobile.classList.remove('is-open');\r\n      pageBody.classList.remove('shadow');\r\n      pageBody.classList.remove('scroll-lock');\r\n      // selectList.style.maxHeight = SELECT_LIST_DEFAULT_HEIGHT;\r\n      // Убираем у checkbox состояние checked\r\n      selectInputField.checked = false;\r\n    }\r\n\r\n\r\n    const onChangePopupSortValue = (evt) => {\r\n\r\n      if (evt.target.matches('[data-sort-popup-item]')) {\r\n        const selectItem = evt.target;\r\n        const selectItemValue = evt.target.textContent;\r\n\r\n        console.log(selectItemValue);\r\n\r\n        switch (selectItemValue) {\r\n          case 'По полулярности':\r\n\r\n            chooseSelectPopupValue(selectItem, selectItemValue, sortPopupItems);\r\n            break\r\n\r\n          case 'Сначала дешевле':\r\n\r\n            chooseSelectPopupValue(selectItem, selectItemValue, sortPopupItems);\r\n            break\r\n\r\n          case 'Сначала дороже':\r\n\r\n            chooseSelectPopupValue(selectItem, selectItemValue, sortPopupItems);\r\n            break\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n    *   Функция закрытия попапа при клике вне области\r\n    */\r\n    const onOverlayClick = (evt) => {\r\n      const elementsCLickArea = !evt.composedPath().includes(sortPopupMobile);\r\n\r\n      if (elementsCLickArea) {\r\n        sortSelectBlock.classList.remove('is-show');\r\n        sortPopupMobile.classList.remove('is-open');\r\n        pageBody.classList.remove('shadow');\r\n        pageBody.classList.remove('scroll-lock');\r\n\r\n        // Убираем у checkbox состояние checked\r\n        selectInputField.checked = false;\r\n\r\n        // Удалили обработчик на закрытие по клику вне модального окна\r\n        document.removeEventListener('click', onOverlayClick);\r\n        sortPopupList.removeEventListener('click', onChangePopupSortValue);\r\n      }\r\n    }\r\n\r\n\r\n    selectInputField.addEventListener('change', (evt) => {\r\n      // evt.stopPropagation();\r\n\r\n      if (evt.target.checked === true) {\r\n        sortSelectBlock.classList.add('is-show');\r\n        sortPopupMobile.classList.add('is-open');\r\n        pageBody.classList.add('shadow');\r\n        pageBody.classList.add('scroll-lock');\r\n\r\n        sortPopupItems.forEach((item) => {\r\n          item.disabled = false;\r\n        })\r\n\r\n        // Добавили обработчик на закрытие по клику вне модального окна\r\n        document.addEventListener('click', onOverlayClick);\r\n\r\n        sortPopupList.addEventListener('click', onChangePopupSortValue);\r\n      }\r\n    })\r\n  }\r\n}\r\n","(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.IMask = {}));\r\n})(this, (function (exports) { 'use strict';\r\n\r\n  function _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\r\n      return typeof obj;\r\n    } : function (obj) {\r\n      return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n    }, _typeof(obj);\r\n  }\r\n\r\n  function _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n      throw new TypeError(\"Cannot call a class as a function\");\r\n    }\r\n  }\r\n\r\n  function _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n      var descriptor = props[i];\r\n      descriptor.enumerable = descriptor.enumerable || false;\r\n      descriptor.configurable = true;\r\n      if (\"value\" in descriptor) descriptor.writable = true;\r\n      Object.defineProperty(target, descriptor.key, descriptor);\r\n    }\r\n  }\r\n\r\n  function _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n    if (staticProps) _defineProperties(Constructor, staticProps);\r\n    Object.defineProperty(Constructor, \"prototype\", {\r\n      writable: false\r\n    });\r\n    return Constructor;\r\n  }\r\n\r\n  function _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n      Object.defineProperty(obj, key, {\r\n        value: value,\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true\r\n      });\r\n    } else {\r\n      obj[key] = value;\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  function _inherits(subClass, superClass) {\r\n    if (typeof superClass !== \"function\" && superClass !== null) {\r\n      throw new TypeError(\"Super expression must either be null or a function\");\r\n    }\r\n\r\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n      constructor: {\r\n        value: subClass,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n    Object.defineProperty(subClass, \"prototype\", {\r\n      writable: false\r\n    });\r\n    if (superClass) _setPrototypeOf(subClass, superClass);\r\n  }\r\n\r\n  function _getPrototypeOf(o) {\r\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\r\n      return o.__proto__ || Object.getPrototypeOf(o);\r\n    };\r\n    return _getPrototypeOf(o);\r\n  }\r\n\r\n  function _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\r\n      o.__proto__ = p;\r\n      return o;\r\n    };\r\n    return _setPrototypeOf(o, p);\r\n  }\r\n\r\n  function _isNativeReflectConstruct() {\r\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\r\n    if (Reflect.construct.sham) return false;\r\n    if (typeof Proxy === \"function\") return true;\r\n\r\n    try {\r\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function _objectWithoutPropertiesLoose(source, excluded) {\r\n    if (source == null) return {};\r\n    var target = {};\r\n    var sourceKeys = Object.keys(source);\r\n    var key, i;\r\n\r\n    for (i = 0; i < sourceKeys.length; i++) {\r\n      key = sourceKeys[i];\r\n      if (excluded.indexOf(key) >= 0) continue;\r\n      target[key] = source[key];\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  function _objectWithoutProperties(source, excluded) {\r\n    if (source == null) return {};\r\n\r\n    var target = _objectWithoutPropertiesLoose(source, excluded);\r\n\r\n    var key, i;\r\n\r\n    if (Object.getOwnPropertySymbols) {\r\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\r\n\r\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\r\n        key = sourceSymbolKeys[i];\r\n        if (excluded.indexOf(key) >= 0) continue;\r\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\r\n        target[key] = source[key];\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  function _assertThisInitialized(self) {\r\n    if (self === void 0) {\r\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n    }\r\n\r\n    return self;\r\n  }\r\n\r\n  function _possibleConstructorReturn(self, call) {\r\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\r\n      return call;\r\n    } else if (call !== void 0) {\r\n      throw new TypeError(\"Derived constructors may only return object or undefined\");\r\n    }\r\n\r\n    return _assertThisInitialized(self);\r\n  }\r\n\r\n  function _createSuper(Derived) {\r\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\r\n\r\n    return function _createSuperInternal() {\r\n      var Super = _getPrototypeOf(Derived),\r\n          result;\r\n\r\n      if (hasNativeReflectConstruct) {\r\n        var NewTarget = _getPrototypeOf(this).constructor;\r\n\r\n        result = Reflect.construct(Super, arguments, NewTarget);\r\n      } else {\r\n        result = Super.apply(this, arguments);\r\n      }\r\n\r\n      return _possibleConstructorReturn(this, result);\r\n    };\r\n  }\r\n\r\n  function _superPropBase(object, property) {\r\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\r\n      object = _getPrototypeOf(object);\r\n      if (object === null) break;\r\n    }\r\n\r\n    return object;\r\n  }\r\n\r\n  function _get() {\r\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\r\n      _get = Reflect.get.bind();\r\n    } else {\r\n      _get = function _get(target, property, receiver) {\r\n        var base = _superPropBase(target, property);\r\n\r\n        if (!base) return;\r\n        var desc = Object.getOwnPropertyDescriptor(base, property);\r\n\r\n        if (desc.get) {\r\n          return desc.get.call(arguments.length < 3 ? target : receiver);\r\n        }\r\n\r\n        return desc.value;\r\n      };\r\n    }\r\n\r\n    return _get.apply(this, arguments);\r\n  }\r\n\r\n  function set(target, property, value, receiver) {\r\n    if (typeof Reflect !== \"undefined\" && Reflect.set) {\r\n      set = Reflect.set;\r\n    } else {\r\n      set = function set(target, property, value, receiver) {\r\n        var base = _superPropBase(target, property);\r\n\r\n        var desc;\r\n\r\n        if (base) {\r\n          desc = Object.getOwnPropertyDescriptor(base, property);\r\n\r\n          if (desc.set) {\r\n            desc.set.call(receiver, value);\r\n            return true;\r\n          } else if (!desc.writable) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        desc = Object.getOwnPropertyDescriptor(receiver, property);\r\n\r\n        if (desc) {\r\n          if (!desc.writable) {\r\n            return false;\r\n          }\r\n\r\n          desc.value = value;\r\n          Object.defineProperty(receiver, property, desc);\r\n        } else {\r\n          _defineProperty(receiver, property, value);\r\n        }\r\n\r\n        return true;\r\n      };\r\n    }\r\n\r\n    return set(target, property, value, receiver);\r\n  }\r\n\r\n  function _set(target, property, value, receiver, isStrict) {\r\n    var s = set(target, property, value, receiver || target);\r\n\r\n    if (!s && isStrict) {\r\n      throw new Error('failed to set property');\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function _slicedToArray(arr, i) {\r\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\r\n  }\r\n\r\n  function _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\r\n  }\r\n\r\n  function _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\r\n  }\r\n\r\n  function _arrayWithHoles(arr) {\r\n    if (Array.isArray(arr)) return arr;\r\n  }\r\n\r\n  function _iterableToArray(iter) {\r\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\r\n  }\r\n\r\n  function _iterableToArrayLimit(arr, i) {\r\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\r\n\r\n    if (_i == null) return;\r\n    var _arr = [];\r\n    var _n = true;\r\n    var _d = false;\r\n\r\n    var _s, _e;\r\n\r\n    try {\r\n      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\r\n        _arr.push(_s.value);\r\n\r\n        if (i && _arr.length === i) break;\r\n      }\r\n    } catch (err) {\r\n      _d = true;\r\n      _e = err;\r\n    } finally {\r\n      try {\r\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\r\n      } finally {\r\n        if (_d) throw _e;\r\n      }\r\n    }\r\n\r\n    return _arr;\r\n  }\r\n\r\n  function _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) return;\r\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\r\n  }\r\n\r\n  function _arrayLikeToArray(arr, len) {\r\n    if (len == null || len > arr.length) len = arr.length;\r\n\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n\r\n    return arr2;\r\n  }\r\n\r\n  function _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n  }\r\n\r\n  function _nonIterableRest() {\r\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n  }\r\n\r\n  /**\r\n    Provides details of changing model value\r\n    @param {Object} [details]\r\n    @param {string} [details.inserted] - Inserted symbols\r\n    @param {boolean} [details.skip] - Can skip chars\r\n    @param {number} [details.removeCount] - Removed symbols count\r\n    @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\r\n  */\r\n  var ChangeDetails = /*#__PURE__*/function () {\r\n    /** Inserted symbols */\r\n\r\n    /** Can skip chars */\r\n\r\n    /** Additional offset if any changes occurred before tail */\r\n\r\n    /** Raw inserted is used by dynamic mask */\r\n    function ChangeDetails(details) {\r\n      _classCallCheck(this, ChangeDetails);\r\n\r\n      Object.assign(this, {\r\n        inserted: '',\r\n        rawInserted: '',\r\n        skip: false,\r\n        tailShift: 0\r\n      }, details);\r\n    }\r\n    /**\r\n      Aggregate changes\r\n      @returns {ChangeDetails} `this`\r\n    */\r\n\r\n\r\n    _createClass(ChangeDetails, [{\r\n      key: \"aggregate\",\r\n      value: function aggregate(details) {\r\n        this.rawInserted += details.rawInserted;\r\n        this.skip = this.skip || details.skip;\r\n        this.inserted += details.inserted;\r\n        this.tailShift += details.tailShift;\r\n        return this;\r\n      }\r\n      /** Total offset considering all changes */\r\n\r\n    }, {\r\n      key: \"offset\",\r\n      get: function get() {\r\n        return this.tailShift + this.inserted.length;\r\n      }\r\n    }]);\r\n\r\n    return ChangeDetails;\r\n  }();\r\n\r\n  /** Checks if value is string */\r\n\r\n  function isString(str) {\r\n    return typeof str === 'string' || str instanceof String;\r\n  }\r\n  /**\r\n    Direction\r\n    @prop {string} NONE\r\n    @prop {string} LEFT\r\n    @prop {string} FORCE_LEFT\r\n    @prop {string} RIGHT\r\n    @prop {string} FORCE_RIGHT\r\n  */\r\n\r\n  var DIRECTION = {\r\n    NONE: 'NONE',\r\n    LEFT: 'LEFT',\r\n    FORCE_LEFT: 'FORCE_LEFT',\r\n    RIGHT: 'RIGHT',\r\n    FORCE_RIGHT: 'FORCE_RIGHT'\r\n  };\r\n  /** */\r\n\r\n  function forceDirection(direction) {\r\n    switch (direction) {\r\n      case DIRECTION.LEFT:\r\n        return DIRECTION.FORCE_LEFT;\r\n\r\n      case DIRECTION.RIGHT:\r\n        return DIRECTION.FORCE_RIGHT;\r\n\r\n      default:\r\n        return direction;\r\n    }\r\n  }\r\n  /** Escapes regular expression control chars */\r\n\r\n  function escapeRegExp(str) {\r\n    return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\r\n  }\r\n  function normalizePrepare(prep) {\r\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\r\n  } // cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\r\n\r\n  function objectIncludes(b, a) {\r\n    if (a === b) return true;\r\n    var arrA = Array.isArray(a),\r\n        arrB = Array.isArray(b),\r\n        i;\r\n\r\n    if (arrA && arrB) {\r\n      if (a.length != b.length) return false;\r\n\r\n      for (i = 0; i < a.length; i++) {\r\n        if (!objectIncludes(a[i], b[i])) return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    if (arrA != arrB) return false;\r\n\r\n    if (a && b && _typeof(a) === 'object' && _typeof(b) === 'object') {\r\n      var dateA = a instanceof Date,\r\n          dateB = b instanceof Date;\r\n      if (dateA && dateB) return a.getTime() == b.getTime();\r\n      if (dateA != dateB) return false;\r\n      var regexpA = a instanceof RegExp,\r\n          regexpB = b instanceof RegExp;\r\n      if (regexpA && regexpB) return a.toString() == b.toString();\r\n      if (regexpA != regexpB) return false;\r\n      var keys = Object.keys(a); // if (keys.length !== Object.keys(b).length) return false;\r\n\r\n      for (i = 0; i < keys.length; i++) {\r\n        // $FlowFixMe ... ???\r\n        if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n      }\r\n\r\n      for (i = 0; i < keys.length; i++) {\r\n        if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\r\n      }\r\n\r\n      return true;\r\n    } else if (a && b && typeof a === 'function' && typeof b === 'function') {\r\n      return a.toString() === b.toString();\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /** Selection range */\r\n\r\n  /** Provides details of changing input */\r\n\r\n  var ActionDetails = /*#__PURE__*/function () {\r\n    /** Current input value */\r\n\r\n    /** Current cursor position */\r\n\r\n    /** Old input value */\r\n\r\n    /** Old selection */\r\n    function ActionDetails(value, cursorPos, oldValue, oldSelection) {\r\n      _classCallCheck(this, ActionDetails);\r\n\r\n      this.value = value;\r\n      this.cursorPos = cursorPos;\r\n      this.oldValue = oldValue;\r\n      this.oldSelection = oldSelection; // double check if left part was changed (autofilling, other non-standard input triggers)\r\n\r\n      while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\r\n        --this.oldSelection.start;\r\n      }\r\n    }\r\n    /**\r\n      Start changing position\r\n      @readonly\r\n    */\r\n\r\n\r\n    _createClass(ActionDetails, [{\r\n      key: \"startChangePos\",\r\n      get: function get() {\r\n        return Math.min(this.cursorPos, this.oldSelection.start);\r\n      }\r\n      /**\r\n        Inserted symbols count\r\n        @readonly\r\n      */\r\n\r\n    }, {\r\n      key: \"insertedCount\",\r\n      get: function get() {\r\n        return this.cursorPos - this.startChangePos;\r\n      }\r\n      /**\r\n        Inserted symbols\r\n        @readonly\r\n      */\r\n\r\n    }, {\r\n      key: \"inserted\",\r\n      get: function get() {\r\n        return this.value.substr(this.startChangePos, this.insertedCount);\r\n      }\r\n      /**\r\n        Removed symbols count\r\n        @readonly\r\n      */\r\n\r\n    }, {\r\n      key: \"removedCount\",\r\n      get: function get() {\r\n        // Math.max for opposite operation\r\n        return Math.max(this.oldSelection.end - this.startChangePos || // for Delete\r\n        this.oldValue.length - this.value.length, 0);\r\n      }\r\n      /**\r\n        Removed symbols\r\n        @readonly\r\n      */\r\n\r\n    }, {\r\n      key: \"removed\",\r\n      get: function get() {\r\n        return this.oldValue.substr(this.startChangePos, this.removedCount);\r\n      }\r\n      /**\r\n        Unchanged head symbols\r\n        @readonly\r\n      */\r\n\r\n    }, {\r\n      key: \"head\",\r\n      get: function get() {\r\n        return this.value.substring(0, this.startChangePos);\r\n      }\r\n      /**\r\n        Unchanged tail symbols\r\n        @readonly\r\n      */\r\n\r\n    }, {\r\n      key: \"tail\",\r\n      get: function get() {\r\n        return this.value.substring(this.startChangePos + this.insertedCount);\r\n      }\r\n      /**\r\n        Remove direction\r\n        @readonly\r\n      */\r\n\r\n    }, {\r\n      key: \"removeDirection\",\r\n      get: function get() {\r\n        if (!this.removedCount || this.insertedCount) return DIRECTION.NONE; // align right if delete at right\r\n\r\n        return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) && // if not range removed (event with backspace)\r\n        this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\r\n      }\r\n    }]);\r\n\r\n    return ActionDetails;\r\n  }();\r\n\r\n  /** Provides details of continuous extracted tail */\r\n  var ContinuousTailDetails = /*#__PURE__*/function () {\r\n    /** Tail value as string */\r\n\r\n    /** Tail start position */\r\n\r\n    /** Start position */\r\n    function ContinuousTailDetails() {\r\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\r\n      var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n      var stop = arguments.length > 2 ? arguments[2] : undefined;\r\n\r\n      _classCallCheck(this, ContinuousTailDetails);\r\n\r\n      this.value = value;\r\n      this.from = from;\r\n      this.stop = stop;\r\n    }\r\n\r\n    _createClass(ContinuousTailDetails, [{\r\n      key: \"toString\",\r\n      value: function toString() {\r\n        return this.value;\r\n      }\r\n    }, {\r\n      key: \"extend\",\r\n      value: function extend(tail) {\r\n        this.value += String(tail);\r\n      }\r\n    }, {\r\n      key: \"appendTo\",\r\n      value: function appendTo(masked) {\r\n        return masked.append(this.toString(), {\r\n          tail: true\r\n        }).aggregate(masked._appendPlaceholder());\r\n      }\r\n    }, {\r\n      key: \"state\",\r\n      get: function get() {\r\n        return {\r\n          value: this.value,\r\n          from: this.from,\r\n          stop: this.stop\r\n        };\r\n      },\r\n      set: function set(state) {\r\n        Object.assign(this, state);\r\n      }\r\n    }, {\r\n      key: \"unshift\",\r\n      value: function unshift(beforePos) {\r\n        if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\r\n        var shiftChar = this.value[0];\r\n        this.value = this.value.slice(1);\r\n        return shiftChar;\r\n      }\r\n    }, {\r\n      key: \"shift\",\r\n      value: function shift() {\r\n        if (!this.value.length) return '';\r\n        var shiftChar = this.value[this.value.length - 1];\r\n        this.value = this.value.slice(0, -1);\r\n        return shiftChar;\r\n      }\r\n    }]);\r\n\r\n    return ContinuousTailDetails;\r\n  }();\r\n\r\n  /**\r\n   * Applies mask on element.\r\n   * @constructor\r\n   * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\r\n   * @param {Object} opts - Custom mask options\r\n   * @return {InputMask}\r\n   */\r\n  function IMask(el) {\r\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    // currently available only for input-like elements\r\n    return new IMask.InputMask(el, opts);\r\n  }\r\n\r\n  /** Supported mask type */\r\n\r\n  /** Provides common masking stuff */\r\n  var Masked = /*#__PURE__*/function () {\r\n    // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\r\n\r\n    /** @type {Mask} */\r\n\r\n    /** */\r\n    // $FlowFixMe no ideas\r\n\r\n    /** Transforms value before mask processing */\r\n\r\n    /** Validates if value is acceptable */\r\n\r\n    /** Does additional processing in the end of editing */\r\n\r\n    /** Format typed value to string */\r\n\r\n    /** Parse strgin to get typed value */\r\n\r\n    /** Enable characters overwriting */\r\n\r\n    /** */\r\n\r\n    /** */\r\n    function Masked(opts) {\r\n      _classCallCheck(this, Masked);\r\n\r\n      this._value = '';\r\n\r\n      this._update(Object.assign({}, Masked.DEFAULTS, opts));\r\n\r\n      this.isInitialized = true;\r\n    }\r\n    /** Sets and applies new options */\r\n\r\n\r\n    _createClass(Masked, [{\r\n      key: \"updateOptions\",\r\n      value: function updateOptions(opts) {\r\n        if (!Object.keys(opts).length) return; // $FlowFixMe\r\n\r\n        this.withValueRefresh(this._update.bind(this, opts));\r\n      }\r\n      /**\r\n        Sets new options\r\n        @protected\r\n      */\r\n\r\n    }, {\r\n      key: \"_update\",\r\n      value: function _update(opts) {\r\n        Object.assign(this, opts);\r\n      }\r\n      /** Mask state */\r\n\r\n    }, {\r\n      key: \"state\",\r\n      get: function get() {\r\n        return {\r\n          _value: this.value\r\n        };\r\n      },\r\n      set: function set(state) {\r\n        this._value = state._value;\r\n      }\r\n      /** Resets value */\r\n\r\n    }, {\r\n      key: \"reset\",\r\n      value: function reset() {\r\n        this._value = '';\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"value\",\r\n      get: function get() {\r\n        return this._value;\r\n      },\r\n      set: function set(value) {\r\n        this.resolve(value);\r\n      }\r\n      /** Resolve new value */\r\n\r\n    }, {\r\n      key: \"resolve\",\r\n      value: function resolve(value) {\r\n        this.reset();\r\n        this.append(value, {\r\n          input: true\r\n        }, '');\r\n        this.doCommit();\r\n        return this.value;\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"unmaskedValue\",\r\n      get: function get() {\r\n        return this.value;\r\n      },\r\n      set: function set(value) {\r\n        this.reset();\r\n        this.append(value, {}, '');\r\n        this.doCommit();\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"typedValue\",\r\n      get: function get() {\r\n        return this.doParse(this.value);\r\n      },\r\n      set: function set(value) {\r\n        this.value = this.doFormat(value);\r\n      }\r\n      /** Value that includes raw user input */\r\n\r\n    }, {\r\n      key: \"rawInputValue\",\r\n      get: function get() {\r\n        return this.extractInput(0, this.value.length, {\r\n          raw: true\r\n        });\r\n      },\r\n      set: function set(value) {\r\n        this.reset();\r\n        this.append(value, {\r\n          raw: true\r\n        }, '');\r\n        this.doCommit();\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"isComplete\",\r\n      get: function get() {\r\n        return true;\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"isFilled\",\r\n      get: function get() {\r\n        return this.isComplete;\r\n      }\r\n      /** Finds nearest input position in direction */\r\n\r\n    }, {\r\n      key: \"nearestInputPos\",\r\n      value: function nearestInputPos(cursorPos, direction) {\r\n        return cursorPos;\r\n      }\r\n      /** Extracts value in range considering flags */\r\n\r\n    }, {\r\n      key: \"extractInput\",\r\n      value: function extractInput() {\r\n        var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n        return this.value.slice(fromPos, toPos);\r\n      }\r\n      /** Extracts tail in range */\r\n\r\n    }, {\r\n      key: \"extractTail\",\r\n      value: function extractTail() {\r\n        var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n        return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\r\n      }\r\n      /** Appends tail */\r\n      // $FlowFixMe no ideas\r\n\r\n    }, {\r\n      key: \"appendTail\",\r\n      value: function appendTail(tail) {\r\n        if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\r\n        return tail.appendTo(this);\r\n      }\r\n      /** Appends char */\r\n\r\n    }, {\r\n      key: \"_appendCharRaw\",\r\n      value: function _appendCharRaw(ch) {\r\n        if (!ch) return new ChangeDetails();\r\n        this._value += ch;\r\n        return new ChangeDetails({\r\n          inserted: ch,\r\n          rawInserted: ch\r\n        });\r\n      }\r\n      /** Appends char */\r\n\r\n    }, {\r\n      key: \"_appendChar\",\r\n      value: function _appendChar(ch) {\r\n        var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n        var checkTail = arguments.length > 2 ? arguments[2] : undefined;\r\n        var consistentState = this.state;\r\n        var details;\r\n\r\n        var _normalizePrepare = normalizePrepare(this.doPrepare(ch, flags));\r\n\r\n        var _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2);\r\n\r\n        ch = _normalizePrepare2[0];\r\n        details = _normalizePrepare2[1];\r\n        details = details.aggregate(this._appendCharRaw(ch, flags));\r\n\r\n        if (details.inserted) {\r\n          var consistentTail;\r\n          var appended = this.doValidate(flags) !== false;\r\n\r\n          if (appended && checkTail != null) {\r\n            // validation ok, check tail\r\n            var beforeTailState = this.state;\r\n\r\n            if (this.overwrite === true) {\r\n              consistentTail = checkTail.state;\r\n              checkTail.unshift(this.value.length);\r\n            }\r\n\r\n            var tailDetails = this.appendTail(checkTail);\r\n            appended = tailDetails.rawInserted === checkTail.toString(); // not ok, try shift\r\n\r\n            if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\r\n              this.state = beforeTailState;\r\n              consistentTail = checkTail.state;\r\n              checkTail.shift();\r\n              tailDetails = this.appendTail(checkTail);\r\n              appended = tailDetails.rawInserted === checkTail.toString();\r\n            } // if ok, rollback state after tail\r\n\r\n\r\n            if (appended && tailDetails.inserted) this.state = beforeTailState;\r\n          } // revert all if something went wrong\r\n\r\n\r\n          if (!appended) {\r\n            details = new ChangeDetails();\r\n            this.state = consistentState;\r\n            if (checkTail && consistentTail) checkTail.state = consistentTail;\r\n          }\r\n        }\r\n\r\n        return details;\r\n      }\r\n      /** Appends optional placeholder at end */\r\n\r\n    }, {\r\n      key: \"_appendPlaceholder\",\r\n      value: function _appendPlaceholder() {\r\n        return new ChangeDetails();\r\n      }\r\n      /** Appends optional eager placeholder at end */\r\n\r\n    }, {\r\n      key: \"_appendEager\",\r\n      value: function _appendEager() {\r\n        return new ChangeDetails();\r\n      }\r\n      /** Appends symbols considering flags */\r\n      // $FlowFixMe no ideas\r\n\r\n    }, {\r\n      key: \"append\",\r\n      value: function append(str, flags, tail) {\r\n        if (!isString(str)) throw new Error('value should be string');\r\n        var details = new ChangeDetails();\r\n        var checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\r\n        if (flags !== null && flags !== void 0 && flags.tail) flags._beforeTailState = this.state;\r\n\r\n        for (var ci = 0; ci < str.length; ++ci) {\r\n          details.aggregate(this._appendChar(str[ci], flags, checkTail));\r\n        } // append tail but aggregate only tailShift\r\n\r\n\r\n        if (checkTail != null) {\r\n          details.tailShift += this.appendTail(checkTail).tailShift; // TODO it's a good idea to clear state after appending ends\r\n          // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\r\n          // this._resetBeforeTailState();\r\n        }\r\n\r\n        if (this.eager && flags !== null && flags !== void 0 && flags.input && str) {\r\n          details.aggregate(this._appendEager());\r\n        }\r\n\r\n        return details;\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"remove\",\r\n      value: function remove() {\r\n        var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n        this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\r\n        return new ChangeDetails();\r\n      }\r\n      /** Calls function and reapplies current value */\r\n\r\n    }, {\r\n      key: \"withValueRefresh\",\r\n      value: function withValueRefresh(fn) {\r\n        if (this._refreshing || !this.isInitialized) return fn();\r\n        this._refreshing = true;\r\n        var rawInput = this.rawInputValue;\r\n        var value = this.value;\r\n        var ret = fn();\r\n        this.rawInputValue = rawInput; // append lost trailing chars at end\r\n\r\n        if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\r\n          this.append(value.slice(this.value.length), {}, '');\r\n        }\r\n\r\n        delete this._refreshing;\r\n        return ret;\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"runIsolated\",\r\n      value: function runIsolated(fn) {\r\n        if (this._isolated || !this.isInitialized) return fn(this);\r\n        this._isolated = true;\r\n        var state = this.state;\r\n        var ret = fn(this);\r\n        this.state = state;\r\n        delete this._isolated;\r\n        return ret;\r\n      }\r\n      /**\r\n        Prepares string before mask processing\r\n        @protected\r\n      */\r\n\r\n    }, {\r\n      key: \"doPrepare\",\r\n      value: function doPrepare(str) {\r\n        var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n        return this.prepare ? this.prepare(str, this, flags) : str;\r\n      }\r\n      /**\r\n        Validates if value is acceptable\r\n        @protected\r\n      */\r\n\r\n    }, {\r\n      key: \"doValidate\",\r\n      value: function doValidate(flags) {\r\n        return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\r\n      }\r\n      /**\r\n        Does additional processing in the end of editing\r\n        @protected\r\n      */\r\n\r\n    }, {\r\n      key: \"doCommit\",\r\n      value: function doCommit() {\r\n        if (this.commit) this.commit(this.value, this);\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"doFormat\",\r\n      value: function doFormat(value) {\r\n        return this.format ? this.format(value, this) : value;\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"doParse\",\r\n      value: function doParse(str) {\r\n        return this.parse ? this.parse(str, this) : str;\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"splice\",\r\n      value: function splice(start, deleteCount, inserted, removeDirection) {\r\n        var flags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\r\n          input: true\r\n        };\r\n        var tailPos = start + deleteCount;\r\n        var tail = this.extractTail(tailPos);\r\n        var oldRawValue;\r\n\r\n        if (this.eager) {\r\n          removeDirection = forceDirection(removeDirection);\r\n          oldRawValue = this.extractInput(0, tailPos, {\r\n            raw: true\r\n          });\r\n        }\r\n\r\n        var startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !this.eager ? DIRECTION.NONE : removeDirection);\r\n        var details = new ChangeDetails({\r\n          tailShift: startChangePos - start // adjust tailShift if start was aligned\r\n\r\n        }).aggregate(this.remove(startChangePos));\r\n\r\n        if (this.eager && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\r\n          if (removeDirection === DIRECTION.FORCE_LEFT) {\r\n            var valLength;\r\n\r\n            while (oldRawValue === this.rawInputValue && (valLength = this.value.length)) {\r\n              details.aggregate(new ChangeDetails({\r\n                tailShift: -1\r\n              })).aggregate(this.remove(valLength - 1));\r\n            }\r\n          } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\r\n            tail.unshift();\r\n          }\r\n        }\r\n\r\n        return details.aggregate(this.append(inserted, flags, tail));\r\n      }\r\n    }, {\r\n      key: \"maskEquals\",\r\n      value: function maskEquals(mask) {\r\n        return this.mask === mask;\r\n      }\r\n    }, {\r\n      key: \"typedValueEquals\",\r\n      value: function typedValueEquals(value) {\r\n        var tval = this.typedValue;\r\n        return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || this.doFormat(value) === this.doFormat(this.typedValue);\r\n      }\r\n    }]);\r\n\r\n    return Masked;\r\n  }();\r\n  Masked.DEFAULTS = {\r\n    format: function format(v) {\r\n      return v;\r\n    },\r\n    parse: function parse(v) {\r\n      return v;\r\n    }\r\n  };\r\n  Masked.EMPTY_VALUES = [undefined, null, ''];\r\n  IMask.Masked = Masked;\r\n\r\n  /** Get Masked class by mask type */\r\n\r\n  function maskedClass(mask) {\r\n    if (mask == null) {\r\n      throw new Error('mask property should be defined');\r\n    } // $FlowFixMe\r\n\r\n\r\n    if (mask instanceof RegExp) return IMask.MaskedRegExp; // $FlowFixMe\r\n\r\n    if (isString(mask)) return IMask.MaskedPattern; // $FlowFixMe\r\n\r\n    if (mask instanceof Date || mask === Date) return IMask.MaskedDate; // $FlowFixMe\r\n\r\n    if (mask instanceof Number || typeof mask === 'number' || mask === Number) return IMask.MaskedNumber; // $FlowFixMe\r\n\r\n    if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic; // $FlowFixMe\r\n\r\n    if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask; // $FlowFixMe\r\n\r\n    if (mask instanceof IMask.Masked) return mask.constructor; // $FlowFixMe\r\n\r\n    if (mask instanceof Function) return IMask.MaskedFunction;\r\n    console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\r\n    // $FlowFixMe\r\n\r\n    return IMask.Masked;\r\n  }\r\n  /** Creates new {@link Masked} depending on mask type */\r\n\r\n  function createMask(opts) {\r\n    // $FlowFixMe\r\n    if (IMask.Masked && opts instanceof IMask.Masked) return opts;\r\n    opts = Object.assign({}, opts);\r\n    var mask = opts.mask; // $FlowFixMe\r\n\r\n    if (IMask.Masked && mask instanceof IMask.Masked) return mask;\r\n    var MaskedClass = maskedClass(mask);\r\n    if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.');\r\n    return new MaskedClass(opts);\r\n  }\r\n  IMask.createMask = createMask;\r\n\r\n  var _excluded$4 = [\"mask\"];\r\n  var DEFAULT_INPUT_DEFINITIONS = {\r\n    '0': /\\d/,\r\n    'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\r\n    // http://stackoverflow.com/a/22075070\r\n    '*': /./\r\n  };\r\n  /** */\r\n\r\n  var PatternInputDefinition = /*#__PURE__*/function () {\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** */\r\n    function PatternInputDefinition(opts) {\r\n      _classCallCheck(this, PatternInputDefinition);\r\n\r\n      var mask = opts.mask,\r\n          blockOpts = _objectWithoutProperties(opts, _excluded$4);\r\n\r\n      this.masked = createMask({\r\n        mask: mask\r\n      });\r\n      Object.assign(this, blockOpts);\r\n    }\r\n\r\n    _createClass(PatternInputDefinition, [{\r\n      key: \"reset\",\r\n      value: function reset() {\r\n        this.isFilled = false;\r\n        this.masked.reset();\r\n      }\r\n    }, {\r\n      key: \"remove\",\r\n      value: function remove() {\r\n        var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n        if (fromPos === 0 && toPos >= 1) {\r\n          this.isFilled = false;\r\n          return this.masked.remove(fromPos, toPos);\r\n        }\r\n\r\n        return new ChangeDetails();\r\n      }\r\n    }, {\r\n      key: \"value\",\r\n      get: function get() {\r\n        return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\r\n      }\r\n    }, {\r\n      key: \"unmaskedValue\",\r\n      get: function get() {\r\n        return this.masked.unmaskedValue;\r\n      }\r\n    }, {\r\n      key: \"isComplete\",\r\n      get: function get() {\r\n        return Boolean(this.masked.value) || this.isOptional;\r\n      }\r\n    }, {\r\n      key: \"_appendChar\",\r\n      value: function _appendChar(ch) {\r\n        var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n        if (this.isFilled) return new ChangeDetails();\r\n        var state = this.masked.state; // simulate input\r\n\r\n        var details = this.masked._appendChar(ch, flags);\r\n\r\n        if (details.inserted && this.doValidate(flags) === false) {\r\n          details.inserted = details.rawInserted = '';\r\n          this.masked.state = state;\r\n        }\r\n\r\n        if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\r\n          details.inserted = this.placeholderChar;\r\n        }\r\n\r\n        details.skip = !details.inserted && !this.isOptional;\r\n        this.isFilled = Boolean(details.inserted);\r\n        return details;\r\n      }\r\n    }, {\r\n      key: \"append\",\r\n      value: function append() {\r\n        var _this$masked;\r\n\r\n        // TODO probably should be done via _appendChar\r\n        return (_this$masked = this.masked).append.apply(_this$masked, arguments);\r\n      }\r\n    }, {\r\n      key: \"_appendPlaceholder\",\r\n      value: function _appendPlaceholder() {\r\n        var details = new ChangeDetails();\r\n        if (this.isFilled || this.isOptional) return details;\r\n        this.isFilled = true;\r\n        details.inserted = this.placeholderChar;\r\n        return details;\r\n      }\r\n    }, {\r\n      key: \"_appendEager\",\r\n      value: function _appendEager() {\r\n        return new ChangeDetails();\r\n      }\r\n    }, {\r\n      key: \"extractTail\",\r\n      value: function extractTail() {\r\n        var _this$masked2;\r\n\r\n        return (_this$masked2 = this.masked).extractTail.apply(_this$masked2, arguments);\r\n      }\r\n    }, {\r\n      key: \"appendTail\",\r\n      value: function appendTail() {\r\n        var _this$masked3;\r\n\r\n        return (_this$masked3 = this.masked).appendTail.apply(_this$masked3, arguments);\r\n      }\r\n    }, {\r\n      key: \"extractInput\",\r\n      value: function extractInput() {\r\n        var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n        var flags = arguments.length > 2 ? arguments[2] : undefined;\r\n        return this.masked.extractInput(fromPos, toPos, flags);\r\n      }\r\n    }, {\r\n      key: \"nearestInputPos\",\r\n      value: function nearestInputPos(cursorPos) {\r\n        var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.NONE;\r\n        var minPos = 0;\r\n        var maxPos = this.value.length;\r\n        var boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\r\n\r\n        switch (direction) {\r\n          case DIRECTION.LEFT:\r\n          case DIRECTION.FORCE_LEFT:\r\n            return this.isComplete ? boundPos : minPos;\r\n\r\n          case DIRECTION.RIGHT:\r\n          case DIRECTION.FORCE_RIGHT:\r\n            return this.isComplete ? boundPos : maxPos;\r\n\r\n          case DIRECTION.NONE:\r\n          default:\r\n            return boundPos;\r\n        }\r\n      }\r\n    }, {\r\n      key: \"doValidate\",\r\n      value: function doValidate() {\r\n        var _this$masked4, _this$parent;\r\n\r\n        return (_this$masked4 = this.masked).doValidate.apply(_this$masked4, arguments) && (!this.parent || (_this$parent = this.parent).doValidate.apply(_this$parent, arguments));\r\n      }\r\n    }, {\r\n      key: \"doCommit\",\r\n      value: function doCommit() {\r\n        this.masked.doCommit();\r\n      }\r\n    }, {\r\n      key: \"state\",\r\n      get: function get() {\r\n        return {\r\n          masked: this.masked.state,\r\n          isFilled: this.isFilled\r\n        };\r\n      },\r\n      set: function set(state) {\r\n        this.masked.state = state.masked;\r\n        this.isFilled = state.isFilled;\r\n      }\r\n    }]);\r\n\r\n    return PatternInputDefinition;\r\n  }();\r\n\r\n  var PatternFixedDefinition = /*#__PURE__*/function () {\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** */\r\n    function PatternFixedDefinition(opts) {\r\n      _classCallCheck(this, PatternFixedDefinition);\r\n\r\n      Object.assign(this, opts);\r\n      this._value = '';\r\n      this.isFixed = true;\r\n    }\r\n\r\n    _createClass(PatternFixedDefinition, [{\r\n      key: \"value\",\r\n      get: function get() {\r\n        return this._value;\r\n      }\r\n    }, {\r\n      key: \"unmaskedValue\",\r\n      get: function get() {\r\n        return this.isUnmasking ? this.value : '';\r\n      }\r\n    }, {\r\n      key: \"reset\",\r\n      value: function reset() {\r\n        this._isRawInput = false;\r\n        this._value = '';\r\n      }\r\n    }, {\r\n      key: \"remove\",\r\n      value: function remove() {\r\n        var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._value.length;\r\n        this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\r\n        if (!this._value) this._isRawInput = false;\r\n        return new ChangeDetails();\r\n      }\r\n    }, {\r\n      key: \"nearestInputPos\",\r\n      value: function nearestInputPos(cursorPos) {\r\n        var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.NONE;\r\n        var minPos = 0;\r\n        var maxPos = this._value.length;\r\n\r\n        switch (direction) {\r\n          case DIRECTION.LEFT:\r\n          case DIRECTION.FORCE_LEFT:\r\n            return minPos;\r\n\r\n          case DIRECTION.NONE:\r\n          case DIRECTION.RIGHT:\r\n          case DIRECTION.FORCE_RIGHT:\r\n          default:\r\n            return maxPos;\r\n        }\r\n      }\r\n    }, {\r\n      key: \"extractInput\",\r\n      value: function extractInput() {\r\n        var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._value.length;\r\n        var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n        return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\r\n      }\r\n    }, {\r\n      key: \"isComplete\",\r\n      get: function get() {\r\n        return true;\r\n      }\r\n    }, {\r\n      key: \"isFilled\",\r\n      get: function get() {\r\n        return Boolean(this._value);\r\n      }\r\n    }, {\r\n      key: \"_appendChar\",\r\n      value: function _appendChar(ch) {\r\n        var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n        var details = new ChangeDetails();\r\n        if (this._value) return details;\r\n        var appended = this.char === ch;\r\n        var isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !this.eager) && !flags.tail;\r\n        if (isResolved) details.rawInserted = this.char;\r\n        this._value = details.inserted = this.char;\r\n        this._isRawInput = isResolved && (flags.raw || flags.input);\r\n        return details;\r\n      }\r\n    }, {\r\n      key: \"_appendEager\",\r\n      value: function _appendEager() {\r\n        return this._appendChar(this.char, {\r\n          tail: true\r\n        });\r\n      }\r\n    }, {\r\n      key: \"_appendPlaceholder\",\r\n      value: function _appendPlaceholder() {\r\n        var details = new ChangeDetails();\r\n        if (this._value) return details;\r\n        this._value = details.inserted = this.char;\r\n        return details;\r\n      }\r\n    }, {\r\n      key: \"extractTail\",\r\n      value: function extractTail() {\r\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n        return new ContinuousTailDetails('');\r\n      } // $FlowFixMe no ideas\r\n\r\n    }, {\r\n      key: \"appendTail\",\r\n      value: function appendTail(tail) {\r\n        if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\r\n        return tail.appendTo(this);\r\n      }\r\n    }, {\r\n      key: \"append\",\r\n      value: function append(str, flags, tail) {\r\n        var details = this._appendChar(str[0], flags);\r\n\r\n        if (tail != null) {\r\n          details.tailShift += this.appendTail(tail).tailShift;\r\n        }\r\n\r\n        return details;\r\n      }\r\n    }, {\r\n      key: \"doCommit\",\r\n      value: function doCommit() {}\r\n    }, {\r\n      key: \"state\",\r\n      get: function get() {\r\n        return {\r\n          _value: this._value,\r\n          _isRawInput: this._isRawInput\r\n        };\r\n      },\r\n      set: function set(state) {\r\n        Object.assign(this, state);\r\n      }\r\n    }]);\r\n\r\n    return PatternFixedDefinition;\r\n  }();\r\n\r\n  var _excluded$3 = [\"chunks\"];\r\n\r\n  var ChunksTailDetails = /*#__PURE__*/function () {\r\n    /** */\r\n    function ChunksTailDetails() {\r\n      var chunks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n      var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n\r\n      _classCallCheck(this, ChunksTailDetails);\r\n\r\n      this.chunks = chunks;\r\n      this.from = from;\r\n    }\r\n\r\n    _createClass(ChunksTailDetails, [{\r\n      key: \"toString\",\r\n      value: function toString() {\r\n        return this.chunks.map(String).join('');\r\n      } // $FlowFixMe no ideas\r\n\r\n    }, {\r\n      key: \"extend\",\r\n      value: function extend(tailChunk) {\r\n        if (!String(tailChunk)) return;\r\n        if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));\r\n        var lastChunk = this.chunks[this.chunks.length - 1];\r\n        var extendLast = lastChunk && ( // if stops are same or tail has no stop\r\n        lastChunk.stop === tailChunk.stop || tailChunk.stop == null) && // if tail chunk goes just after last chunk\r\n        tailChunk.from === lastChunk.from + lastChunk.toString().length;\r\n\r\n        if (tailChunk instanceof ContinuousTailDetails) {\r\n          // check the ability to extend previous chunk\r\n          if (extendLast) {\r\n            // extend previous chunk\r\n            lastChunk.extend(tailChunk.toString());\r\n          } else {\r\n            // append new chunk\r\n            this.chunks.push(tailChunk);\r\n          }\r\n        } else if (tailChunk instanceof ChunksTailDetails) {\r\n          if (tailChunk.stop == null) {\r\n            // unwrap floating chunks to parent, keeping `from` pos\r\n            var firstTailChunk;\r\n\r\n            while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\r\n              firstTailChunk = tailChunk.chunks.shift();\r\n              firstTailChunk.from += tailChunk.from;\r\n              this.extend(firstTailChunk);\r\n            }\r\n          } // if tail chunk still has value\r\n\r\n\r\n          if (tailChunk.toString()) {\r\n            // if chunks contains stops, then popup stop to container\r\n            tailChunk.stop = tailChunk.blockIndex;\r\n            this.chunks.push(tailChunk);\r\n          }\r\n        }\r\n      }\r\n    }, {\r\n      key: \"appendTo\",\r\n      value: function appendTo(masked) {\r\n        // $FlowFixMe\r\n        if (!(masked instanceof IMask.MaskedPattern)) {\r\n          var tail = new ContinuousTailDetails(this.toString());\r\n          return tail.appendTo(masked);\r\n        }\r\n\r\n        var details = new ChangeDetails();\r\n\r\n        for (var ci = 0; ci < this.chunks.length && !details.skip; ++ci) {\r\n          var chunk = this.chunks[ci];\r\n\r\n          var lastBlockIter = masked._mapPosToBlock(masked.value.length);\r\n\r\n          var stop = chunk.stop;\r\n          var chunkBlock = void 0;\r\n\r\n          if (stop != null && ( // if block not found or stop is behind lastBlock\r\n          !lastBlockIter || lastBlockIter.index <= stop)) {\r\n            if (chunk instanceof ChunksTailDetails || // for continuous block also check if stop is exist\r\n            masked._stops.indexOf(stop) >= 0) {\r\n              details.aggregate(masked._appendPlaceholder(stop));\r\n            }\r\n\r\n            chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\r\n          }\r\n\r\n          if (chunkBlock) {\r\n            var tailDetails = chunkBlock.appendTail(chunk);\r\n            tailDetails.skip = false; // always ignore skip, it will be set on last\r\n\r\n            details.aggregate(tailDetails);\r\n            masked._value += tailDetails.inserted; // get not inserted chars\r\n\r\n            var remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\r\n            if (remainChars) details.aggregate(masked.append(remainChars, {\r\n              tail: true\r\n            }));\r\n          } else {\r\n            details.aggregate(masked.append(chunk.toString(), {\r\n              tail: true\r\n            }));\r\n          }\r\n        }\r\n        return details;\r\n      }\r\n    }, {\r\n      key: \"state\",\r\n      get: function get() {\r\n        return {\r\n          chunks: this.chunks.map(function (c) {\r\n            return c.state;\r\n          }),\r\n          from: this.from,\r\n          stop: this.stop,\r\n          blockIndex: this.blockIndex\r\n        };\r\n      },\r\n      set: function set(state) {\r\n        var chunks = state.chunks,\r\n            props = _objectWithoutProperties(state, _excluded$3);\r\n\r\n        Object.assign(this, props);\r\n        this.chunks = chunks.map(function (cstate) {\r\n          var chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails(); // $FlowFixMe already checked above\r\n\r\n          chunk.state = cstate;\r\n          return chunk;\r\n        });\r\n      }\r\n    }, {\r\n      key: \"unshift\",\r\n      value: function unshift(beforePos) {\r\n        if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\r\n        var chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\r\n        var ci = 0;\r\n\r\n        while (ci < this.chunks.length) {\r\n          var chunk = this.chunks[ci];\r\n          var shiftChar = chunk.unshift(chunkShiftPos);\r\n\r\n          if (chunk.toString()) {\r\n            // chunk still contains value\r\n            // but not shifted - means no more available chars to shift\r\n            if (!shiftChar) break;\r\n            ++ci;\r\n          } else {\r\n            // clean if chunk has no value\r\n            this.chunks.splice(ci, 1);\r\n          }\r\n\r\n          if (shiftChar) return shiftChar;\r\n        }\r\n\r\n        return '';\r\n      }\r\n    }, {\r\n      key: \"shift\",\r\n      value: function shift() {\r\n        if (!this.chunks.length) return '';\r\n        var ci = this.chunks.length - 1;\r\n\r\n        while (0 <= ci) {\r\n          var chunk = this.chunks[ci];\r\n          var shiftChar = chunk.shift();\r\n\r\n          if (chunk.toString()) {\r\n            // chunk still contains value\r\n            // but not shifted - means no more available chars to shift\r\n            if (!shiftChar) break;\r\n            --ci;\r\n          } else {\r\n            // clean if chunk has no value\r\n            this.chunks.splice(ci, 1);\r\n          }\r\n\r\n          if (shiftChar) return shiftChar;\r\n        }\r\n\r\n        return '';\r\n      }\r\n    }]);\r\n\r\n    return ChunksTailDetails;\r\n  }();\r\n\r\n  var PatternCursor = /*#__PURE__*/function () {\r\n    function PatternCursor(masked, pos) {\r\n      _classCallCheck(this, PatternCursor);\r\n\r\n      this.masked = masked;\r\n      this._log = [];\r\n\r\n      var _ref = masked._mapPosToBlock(pos) || (pos < 0 ? // first\r\n      {\r\n        index: 0,\r\n        offset: 0\r\n      } : // last\r\n      {\r\n        index: this.masked._blocks.length,\r\n        offset: 0\r\n      }),\r\n          offset = _ref.offset,\r\n          index = _ref.index;\r\n\r\n      this.offset = offset;\r\n      this.index = index;\r\n      this.ok = false;\r\n    }\r\n\r\n    _createClass(PatternCursor, [{\r\n      key: \"block\",\r\n      get: function get() {\r\n        return this.masked._blocks[this.index];\r\n      }\r\n    }, {\r\n      key: \"pos\",\r\n      get: function get() {\r\n        return this.masked._blockStartPos(this.index) + this.offset;\r\n      }\r\n    }, {\r\n      key: \"state\",\r\n      get: function get() {\r\n        return {\r\n          index: this.index,\r\n          offset: this.offset,\r\n          ok: this.ok\r\n        };\r\n      },\r\n      set: function set(s) {\r\n        Object.assign(this, s);\r\n      }\r\n    }, {\r\n      key: \"pushState\",\r\n      value: function pushState() {\r\n        this._log.push(this.state);\r\n      }\r\n    }, {\r\n      key: \"popState\",\r\n      value: function popState() {\r\n        var s = this._log.pop();\r\n\r\n        this.state = s;\r\n        return s;\r\n      }\r\n    }, {\r\n      key: \"bindBlock\",\r\n      value: function bindBlock() {\r\n        if (this.block) return;\r\n\r\n        if (this.index < 0) {\r\n          this.index = 0;\r\n          this.offset = 0;\r\n        }\r\n\r\n        if (this.index >= this.masked._blocks.length) {\r\n          this.index = this.masked._blocks.length - 1;\r\n          this.offset = this.block.value.length;\r\n        }\r\n      }\r\n    }, {\r\n      key: \"_pushLeft\",\r\n      value: function _pushLeft(fn) {\r\n        this.pushState();\r\n\r\n        for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) === null || _this$block === void 0 ? void 0 : _this$block.value.length) || 0) {\r\n          var _this$block;\r\n\r\n          if (fn()) return this.ok = true;\r\n        }\r\n\r\n        return this.ok = false;\r\n      }\r\n    }, {\r\n      key: \"_pushRight\",\r\n      value: function _pushRight(fn) {\r\n        this.pushState();\r\n\r\n        for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\r\n          if (fn()) return this.ok = true;\r\n        }\r\n\r\n        return this.ok = false;\r\n      }\r\n    }, {\r\n      key: \"pushLeftBeforeFilled\",\r\n      value: function pushLeftBeforeFilled() {\r\n        var _this = this;\r\n\r\n        return this._pushLeft(function () {\r\n          if (_this.block.isFixed || !_this.block.value) return;\r\n          _this.offset = _this.block.nearestInputPos(_this.offset, DIRECTION.FORCE_LEFT);\r\n          if (_this.offset !== 0) return true;\r\n        });\r\n      }\r\n    }, {\r\n      key: \"pushLeftBeforeInput\",\r\n      value: function pushLeftBeforeInput() {\r\n        var _this2 = this;\r\n\r\n        // cases:\r\n        // filled input: 00|\r\n        // optional empty input: 00[]|\r\n        // nested block: XX<[]>|\r\n        return this._pushLeft(function () {\r\n          if (_this2.block.isFixed) return;\r\n          _this2.offset = _this2.block.nearestInputPos(_this2.offset, DIRECTION.LEFT);\r\n          return true;\r\n        });\r\n      }\r\n    }, {\r\n      key: \"pushLeftBeforeRequired\",\r\n      value: function pushLeftBeforeRequired() {\r\n        var _this3 = this;\r\n\r\n        return this._pushLeft(function () {\r\n          if (_this3.block.isFixed || _this3.block.isOptional && !_this3.block.value) return;\r\n          _this3.offset = _this3.block.nearestInputPos(_this3.offset, DIRECTION.LEFT);\r\n          return true;\r\n        });\r\n      }\r\n    }, {\r\n      key: \"pushRightBeforeFilled\",\r\n      value: function pushRightBeforeFilled() {\r\n        var _this4 = this;\r\n\r\n        return this._pushRight(function () {\r\n          if (_this4.block.isFixed || !_this4.block.value) return;\r\n          _this4.offset = _this4.block.nearestInputPos(_this4.offset, DIRECTION.FORCE_RIGHT);\r\n          if (_this4.offset !== _this4.block.value.length) return true;\r\n        });\r\n      }\r\n    }, {\r\n      key: \"pushRightBeforeInput\",\r\n      value: function pushRightBeforeInput() {\r\n        var _this5 = this;\r\n\r\n        return this._pushRight(function () {\r\n          if (_this5.block.isFixed) return; // const o = this.offset;\r\n\r\n          _this5.offset = _this5.block.nearestInputPos(_this5.offset, DIRECTION.NONE); // HACK cases like (STILL DOES NOT WORK FOR NESTED)\r\n          // aa|X\r\n          // aa<X|[]>X_    - this will not work\r\n          // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\r\n\r\n          return true;\r\n        });\r\n      }\r\n    }, {\r\n      key: \"pushRightBeforeRequired\",\r\n      value: function pushRightBeforeRequired() {\r\n        var _this6 = this;\r\n\r\n        return this._pushRight(function () {\r\n          if (_this6.block.isFixed || _this6.block.isOptional && !_this6.block.value) return; // TODO check |[*]XX_\r\n\r\n          _this6.offset = _this6.block.nearestInputPos(_this6.offset, DIRECTION.NONE);\r\n          return true;\r\n        });\r\n      }\r\n    }]);\r\n\r\n    return PatternCursor;\r\n  }();\r\n\r\n  /** Masking by RegExp */\r\n\r\n  var MaskedRegExp = /*#__PURE__*/function (_Masked) {\r\n    _inherits(MaskedRegExp, _Masked);\r\n\r\n    var _super = _createSuper(MaskedRegExp);\r\n\r\n    function MaskedRegExp() {\r\n      _classCallCheck(this, MaskedRegExp);\r\n\r\n      return _super.apply(this, arguments);\r\n    }\r\n\r\n    _createClass(MaskedRegExp, [{\r\n      key: \"_update\",\r\n      value:\r\n      /**\r\n        @override\r\n        @param {Object} opts\r\n      */\r\n      function _update(opts) {\r\n        if (opts.mask) opts.validate = function (value) {\r\n          return value.search(opts.mask) >= 0;\r\n        };\r\n\r\n        _get(_getPrototypeOf(MaskedRegExp.prototype), \"_update\", this).call(this, opts);\r\n      }\r\n    }]);\r\n\r\n    return MaskedRegExp;\r\n  }(Masked);\r\n  IMask.MaskedRegExp = MaskedRegExp;\r\n\r\n  var _excluded$2 = [\"_blocks\"];\r\n\r\n  /**\r\n    Pattern mask\r\n    @param {Object} opts\r\n    @param {Object} opts.blocks\r\n    @param {Object} opts.definitions\r\n    @param {string} opts.placeholderChar\r\n    @param {boolean} opts.lazy\r\n  */\r\n  var MaskedPattern = /*#__PURE__*/function (_Masked) {\r\n    _inherits(MaskedPattern, _Masked);\r\n\r\n    var _super = _createSuper(MaskedPattern);\r\n\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** Single char for empty input */\r\n\r\n    /** Show placeholder only when needed */\r\n    function MaskedPattern() {\r\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n      _classCallCheck(this, MaskedPattern);\r\n\r\n      // TODO type $Shape<MaskedPatternOptions>={} does not work\r\n      opts.definitions = Object.assign({}, DEFAULT_INPUT_DEFINITIONS, opts.definitions);\r\n      return _super.call(this, Object.assign({}, MaskedPattern.DEFAULTS, opts));\r\n    }\r\n    /**\r\n      @override\r\n      @param {Object} opts\r\n    */\r\n\r\n\r\n    _createClass(MaskedPattern, [{\r\n      key: \"_update\",\r\n      value: function _update() {\r\n        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n        opts.definitions = Object.assign({}, this.definitions, opts.definitions);\r\n\r\n        _get(_getPrototypeOf(MaskedPattern.prototype), \"_update\", this).call(this, opts);\r\n\r\n        this._rebuildMask();\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"_rebuildMask\",\r\n      value: function _rebuildMask() {\r\n        var _this = this;\r\n\r\n        var defs = this.definitions;\r\n        this._blocks = [];\r\n        this._stops = [];\r\n        this._maskedBlocks = {};\r\n        var pattern = this.mask;\r\n        if (!pattern || !defs) return;\r\n        var unmaskingBlock = false;\r\n        var optionalBlock = false;\r\n\r\n        for (var i = 0; i < pattern.length; ++i) {\r\n          if (this.blocks) {\r\n            var _ret = function () {\r\n              var p = pattern.slice(i);\r\n              var bNames = Object.keys(_this.blocks).filter(function (bName) {\r\n                return p.indexOf(bName) === 0;\r\n              }); // order by key length\r\n\r\n              bNames.sort(function (a, b) {\r\n                return b.length - a.length;\r\n              }); // use block name with max length\r\n\r\n              var bName = bNames[0];\r\n\r\n              if (bName) {\r\n                // $FlowFixMe no ideas\r\n                var maskedBlock = createMask(Object.assign({\r\n                  parent: _this,\r\n                  lazy: _this.lazy,\r\n                  eager: _this.eager,\r\n                  placeholderChar: _this.placeholderChar,\r\n                  overwrite: _this.overwrite\r\n                }, _this.blocks[bName]));\r\n\r\n                if (maskedBlock) {\r\n                  _this._blocks.push(maskedBlock); // store block index\r\n\r\n\r\n                  if (!_this._maskedBlocks[bName]) _this._maskedBlocks[bName] = [];\r\n\r\n                  _this._maskedBlocks[bName].push(_this._blocks.length - 1);\r\n                }\r\n\r\n                i += bName.length - 1;\r\n                return \"continue\";\r\n              }\r\n            }();\r\n\r\n            if (_ret === \"continue\") continue;\r\n          }\r\n\r\n          var char = pattern[i];\r\n          var isInput = (char in defs);\r\n\r\n          if (char === MaskedPattern.STOP_CHAR) {\r\n            this._stops.push(this._blocks.length);\r\n\r\n            continue;\r\n          }\r\n\r\n          if (char === '{' || char === '}') {\r\n            unmaskingBlock = !unmaskingBlock;\r\n            continue;\r\n          }\r\n\r\n          if (char === '[' || char === ']') {\r\n            optionalBlock = !optionalBlock;\r\n            continue;\r\n          }\r\n\r\n          if (char === MaskedPattern.ESCAPE_CHAR) {\r\n            ++i;\r\n            char = pattern[i];\r\n            if (!char) break;\r\n            isInput = false;\r\n          }\r\n\r\n          var def = isInput ? new PatternInputDefinition({\r\n            parent: this,\r\n            lazy: this.lazy,\r\n            eager: this.eager,\r\n            placeholderChar: this.placeholderChar,\r\n            mask: defs[char],\r\n            isOptional: optionalBlock\r\n          }) : new PatternFixedDefinition({\r\n            char: char,\r\n            eager: this.eager,\r\n            isUnmasking: unmaskingBlock\r\n          });\r\n\r\n          this._blocks.push(def);\r\n        }\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"state\",\r\n      get: function get() {\r\n        return Object.assign({}, _get(_getPrototypeOf(MaskedPattern.prototype), \"state\", this), {\r\n          _blocks: this._blocks.map(function (b) {\r\n            return b.state;\r\n          })\r\n        });\r\n      },\r\n      set: function set(state) {\r\n        var _blocks = state._blocks,\r\n            maskedState = _objectWithoutProperties(state, _excluded$2);\r\n\r\n        this._blocks.forEach(function (b, bi) {\r\n          return b.state = _blocks[bi];\r\n        });\r\n\r\n        _set(_getPrototypeOf(MaskedPattern.prototype), \"state\", maskedState, this, true);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"reset\",\r\n      value: function reset() {\r\n        _get(_getPrototypeOf(MaskedPattern.prototype), \"reset\", this).call(this);\r\n\r\n        this._blocks.forEach(function (b) {\r\n          return b.reset();\r\n        });\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"isComplete\",\r\n      get: function get() {\r\n        return this._blocks.every(function (b) {\r\n          return b.isComplete;\r\n        });\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"isFilled\",\r\n      get: function get() {\r\n        return this._blocks.every(function (b) {\r\n          return b.isFilled;\r\n        });\r\n      }\r\n    }, {\r\n      key: \"isFixed\",\r\n      get: function get() {\r\n        return this._blocks.every(function (b) {\r\n          return b.isFixed;\r\n        });\r\n      }\r\n    }, {\r\n      key: \"isOptional\",\r\n      get: function get() {\r\n        return this._blocks.every(function (b) {\r\n          return b.isOptional;\r\n        });\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"doCommit\",\r\n      value: function doCommit() {\r\n        this._blocks.forEach(function (b) {\r\n          return b.doCommit();\r\n        });\r\n\r\n        _get(_getPrototypeOf(MaskedPattern.prototype), \"doCommit\", this).call(this);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"unmaskedValue\",\r\n      get: function get() {\r\n        return this._blocks.reduce(function (str, b) {\r\n          return str += b.unmaskedValue;\r\n        }, '');\r\n      },\r\n      set: function set(unmaskedValue) {\r\n        _set(_getPrototypeOf(MaskedPattern.prototype), \"unmaskedValue\", unmaskedValue, this, true);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"value\",\r\n      get: function get() {\r\n        // TODO return _value when not in change?\r\n        return this._blocks.reduce(function (str, b) {\r\n          return str += b.value;\r\n        }, '');\r\n      },\r\n      set: function set(value) {\r\n        _set(_getPrototypeOf(MaskedPattern.prototype), \"value\", value, this, true);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"appendTail\",\r\n      value: function appendTail(tail) {\r\n        return _get(_getPrototypeOf(MaskedPattern.prototype), \"appendTail\", this).call(this, tail).aggregate(this._appendPlaceholder());\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"_appendEager\",\r\n      value: function _appendEager() {\r\n        var _this$_mapPosToBlock;\r\n\r\n        var details = new ChangeDetails();\r\n        var startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.value.length)) === null || _this$_mapPosToBlock === void 0 ? void 0 : _this$_mapPosToBlock.index;\r\n        if (startBlockIndex == null) return details; // TODO test if it works for nested pattern masks\r\n\r\n        if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\r\n\r\n        for (var bi = startBlockIndex; bi < this._blocks.length; ++bi) {\r\n          var d = this._blocks[bi]._appendEager();\r\n\r\n          if (!d.inserted) break;\r\n          details.aggregate(d);\r\n        }\r\n\r\n        return details;\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"_appendCharRaw\",\r\n      value: function _appendCharRaw(ch) {\r\n        var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n        var blockIter = this._mapPosToBlock(this.value.length);\r\n\r\n        var details = new ChangeDetails();\r\n        if (!blockIter) return details;\r\n\r\n        for (var bi = blockIter.index;; ++bi) {\r\n          var _flags$_beforeTailSta, _flags$_beforeTailSta2;\r\n\r\n          var _block = this._blocks[bi];\r\n          if (!_block) break;\r\n\r\n          var blockDetails = _block._appendChar(ch, Object.assign({}, flags, {\r\n            _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) === null || _flags$_beforeTailSta === void 0 ? void 0 : (_flags$_beforeTailSta2 = _flags$_beforeTailSta._blocks) === null || _flags$_beforeTailSta2 === void 0 ? void 0 : _flags$_beforeTailSta2[bi]\r\n          }));\r\n\r\n          var skip = blockDetails.skip;\r\n          details.aggregate(blockDetails);\r\n          if (skip || blockDetails.rawInserted) break; // go next char\r\n        }\r\n\r\n        return details;\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"extractTail\",\r\n      value: function extractTail() {\r\n        var _this2 = this;\r\n\r\n        var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n        var chunkTail = new ChunksTailDetails();\r\n        if (fromPos === toPos) return chunkTail;\r\n\r\n        this._forEachBlocksInRange(fromPos, toPos, function (b, bi, bFromPos, bToPos) {\r\n          var blockChunk = b.extractTail(bFromPos, bToPos);\r\n          blockChunk.stop = _this2._findStopBefore(bi);\r\n          blockChunk.from = _this2._blockStartPos(bi);\r\n          if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\r\n          chunkTail.extend(blockChunk);\r\n        });\r\n\r\n        return chunkTail;\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"extractInput\",\r\n      value: function extractInput() {\r\n        var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n        var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n        if (fromPos === toPos) return '';\r\n        var input = '';\r\n\r\n        this._forEachBlocksInRange(fromPos, toPos, function (b, _, fromPos, toPos) {\r\n          input += b.extractInput(fromPos, toPos, flags);\r\n        });\r\n\r\n        return input;\r\n      }\r\n    }, {\r\n      key: \"_findStopBefore\",\r\n      value: function _findStopBefore(blockIndex) {\r\n        var stopBefore;\r\n\r\n        for (var si = 0; si < this._stops.length; ++si) {\r\n          var stop = this._stops[si];\r\n          if (stop <= blockIndex) stopBefore = stop;else break;\r\n        }\r\n\r\n        return stopBefore;\r\n      }\r\n      /** Appends placeholder depending on laziness */\r\n\r\n    }, {\r\n      key: \"_appendPlaceholder\",\r\n      value: function _appendPlaceholder(toBlockIndex) {\r\n        var _this3 = this;\r\n\r\n        var details = new ChangeDetails();\r\n        if (this.lazy && toBlockIndex == null) return details;\r\n\r\n        var startBlockIter = this._mapPosToBlock(this.value.length);\r\n\r\n        if (!startBlockIter) return details;\r\n        var startBlockIndex = startBlockIter.index;\r\n        var endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\r\n\r\n        this._blocks.slice(startBlockIndex, endBlockIndex).forEach(function (b) {\r\n          if (!b.lazy || toBlockIndex != null) {\r\n            // $FlowFixMe `_blocks` may not be present\r\n            var args = b._blocks != null ? [b._blocks.length] : [];\r\n\r\n            var bDetails = b._appendPlaceholder.apply(b, args);\r\n\r\n            _this3._value += bDetails.inserted;\r\n            details.aggregate(bDetails);\r\n          }\r\n        });\r\n\r\n        return details;\r\n      }\r\n      /** Finds block in pos */\r\n\r\n    }, {\r\n      key: \"_mapPosToBlock\",\r\n      value: function _mapPosToBlock(pos) {\r\n        var accVal = '';\r\n\r\n        for (var bi = 0; bi < this._blocks.length; ++bi) {\r\n          var _block2 = this._blocks[bi];\r\n          var blockStartPos = accVal.length;\r\n          accVal += _block2.value;\r\n\r\n          if (pos <= accVal.length) {\r\n            return {\r\n              index: bi,\r\n              offset: pos - blockStartPos\r\n            };\r\n          }\r\n        }\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"_blockStartPos\",\r\n      value: function _blockStartPos(blockIndex) {\r\n        return this._blocks.slice(0, blockIndex).reduce(function (pos, b) {\r\n          return pos += b.value.length;\r\n        }, 0);\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"_forEachBlocksInRange\",\r\n      value: function _forEachBlocksInRange(fromPos) {\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n        var fn = arguments.length > 2 ? arguments[2] : undefined;\r\n\r\n        var fromBlockIter = this._mapPosToBlock(fromPos);\r\n\r\n        if (fromBlockIter) {\r\n          var toBlockIter = this._mapPosToBlock(toPos); // process first block\r\n\r\n\r\n          var isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\r\n          var fromBlockStartPos = fromBlockIter.offset;\r\n          var fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].value.length;\r\n          fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\r\n\r\n          if (toBlockIter && !isSameBlock) {\r\n            // process intermediate blocks\r\n            for (var bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\r\n              fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\r\n            } // process last block\r\n\r\n\r\n            fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\r\n          }\r\n        }\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"remove\",\r\n      value: function remove() {\r\n        var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n        var removeDetails = _get(_getPrototypeOf(MaskedPattern.prototype), \"remove\", this).call(this, fromPos, toPos);\r\n\r\n        this._forEachBlocksInRange(fromPos, toPos, function (b, _, bFromPos, bToPos) {\r\n          removeDetails.aggregate(b.remove(bFromPos, bToPos));\r\n        });\r\n\r\n        return removeDetails;\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"nearestInputPos\",\r\n      value: function nearestInputPos(cursorPos) {\r\n        var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.NONE;\r\n        if (!this._blocks.length) return 0;\r\n        var cursor = new PatternCursor(this, cursorPos);\r\n\r\n        if (direction === DIRECTION.NONE) {\r\n          // -------------------------------------------------\r\n          // NONE should only go out from fixed to the right!\r\n          // -------------------------------------------------\r\n          if (cursor.pushRightBeforeInput()) return cursor.pos;\r\n          cursor.popState();\r\n          if (cursor.pushLeftBeforeInput()) return cursor.pos;\r\n          return this.value.length;\r\n        } // FORCE is only about a|* otherwise is 0\r\n\r\n\r\n        if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\r\n          // try to break fast when *|a\r\n          if (direction === DIRECTION.LEFT) {\r\n            cursor.pushRightBeforeFilled();\r\n            if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\r\n            cursor.popState();\r\n          } // forward flow\r\n\r\n\r\n          cursor.pushLeftBeforeInput();\r\n          cursor.pushLeftBeforeRequired();\r\n          cursor.pushLeftBeforeFilled(); // backward flow\r\n\r\n          if (direction === DIRECTION.LEFT) {\r\n            cursor.pushRightBeforeInput();\r\n            cursor.pushRightBeforeRequired();\r\n            if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\r\n            cursor.popState();\r\n            if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\r\n            cursor.popState();\r\n          }\r\n\r\n          if (cursor.ok) return cursor.pos;\r\n          if (direction === DIRECTION.FORCE_LEFT) return 0;\r\n          cursor.popState();\r\n          if (cursor.ok) return cursor.pos;\r\n          cursor.popState();\r\n          if (cursor.ok) return cursor.pos; // cursor.popState();\r\n          // if (\r\n          //   cursor.pushRightBeforeInput() &&\r\n          //   // TODO HACK for lazy if has aligned left inside fixed and has came to the start - use start position\r\n          //   (!this.lazy || this.extractInput())\r\n          // ) return cursor.pos;\r\n\r\n          return 0;\r\n        }\r\n\r\n        if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\r\n          // forward flow\r\n          cursor.pushRightBeforeInput();\r\n          cursor.pushRightBeforeRequired();\r\n          if (cursor.pushRightBeforeFilled()) return cursor.pos;\r\n          if (direction === DIRECTION.FORCE_RIGHT) return this.value.length; // backward flow\r\n\r\n          cursor.popState();\r\n          if (cursor.ok) return cursor.pos;\r\n          cursor.popState();\r\n          if (cursor.ok) return cursor.pos;\r\n          return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\r\n        }\r\n\r\n        return cursorPos;\r\n      }\r\n      /** Get block by name */\r\n\r\n    }, {\r\n      key: \"maskedBlock\",\r\n      value: function maskedBlock(name) {\r\n        return this.maskedBlocks(name)[0];\r\n      }\r\n      /** Get all blocks by name */\r\n\r\n    }, {\r\n      key: \"maskedBlocks\",\r\n      value: function maskedBlocks(name) {\r\n        var _this4 = this;\r\n\r\n        var indices = this._maskedBlocks[name];\r\n        if (!indices) return [];\r\n        return indices.map(function (gi) {\r\n          return _this4._blocks[gi];\r\n        });\r\n      }\r\n    }]);\r\n\r\n    return MaskedPattern;\r\n  }(Masked);\r\n  MaskedPattern.DEFAULTS = {\r\n    lazy: true,\r\n    placeholderChar: '_'\r\n  };\r\n  MaskedPattern.STOP_CHAR = '`';\r\n  MaskedPattern.ESCAPE_CHAR = '\\\\';\r\n  MaskedPattern.InputDefinition = PatternInputDefinition;\r\n  MaskedPattern.FixedDefinition = PatternFixedDefinition;\r\n  IMask.MaskedPattern = MaskedPattern;\r\n\r\n  /** Pattern which accepts ranges */\r\n\r\n  var MaskedRange = /*#__PURE__*/function (_MaskedPattern) {\r\n    _inherits(MaskedRange, _MaskedPattern);\r\n\r\n    var _super = _createSuper(MaskedRange);\r\n\r\n    function MaskedRange() {\r\n      _classCallCheck(this, MaskedRange);\r\n\r\n      return _super.apply(this, arguments);\r\n    }\r\n\r\n    _createClass(MaskedRange, [{\r\n      key: \"_matchFrom\",\r\n      get:\r\n      /**\r\n        Optionally sets max length of pattern.\r\n        Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\r\n      */\r\n\r\n      /** Min bound */\r\n\r\n      /** Max bound */\r\n\r\n      /** */\r\n      function get() {\r\n        return this.maxLength - String(this.from).length;\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"_update\",\r\n      value: function _update(opts) {\r\n        // TODO type\r\n        opts = Object.assign({\r\n          to: this.to || 0,\r\n          from: this.from || 0,\r\n          maxLength: this.maxLength || 0\r\n        }, opts);\r\n        var maxLength = String(opts.to).length;\r\n        if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\r\n        opts.maxLength = maxLength;\r\n        var fromStr = String(opts.from).padStart(maxLength, '0');\r\n        var toStr = String(opts.to).padStart(maxLength, '0');\r\n        var sameCharsCount = 0;\r\n\r\n        while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) {\r\n          ++sameCharsCount;\r\n        }\r\n\r\n        opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(maxLength - sameCharsCount);\r\n\r\n        _get(_getPrototypeOf(MaskedRange.prototype), \"_update\", this).call(this, opts);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"isComplete\",\r\n      get: function get() {\r\n        return _get(_getPrototypeOf(MaskedRange.prototype), \"isComplete\", this) && Boolean(this.value);\r\n      }\r\n    }, {\r\n      key: \"boundaries\",\r\n      value: function boundaries(str) {\r\n        var minstr = '';\r\n        var maxstr = '';\r\n\r\n        var _ref = str.match(/^(\\D*)(\\d*)(\\D*)/) || [],\r\n            _ref2 = _slicedToArray(_ref, 3),\r\n            placeholder = _ref2[1],\r\n            num = _ref2[2];\r\n\r\n        if (num) {\r\n          minstr = '0'.repeat(placeholder.length) + num;\r\n          maxstr = '9'.repeat(placeholder.length) + num;\r\n        }\r\n\r\n        minstr = minstr.padEnd(this.maxLength, '0');\r\n        maxstr = maxstr.padEnd(this.maxLength, '9');\r\n        return [minstr, maxstr];\r\n      } // TODO str is a single char everytime\r\n\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"doPrepare\",\r\n      value: function doPrepare(ch) {\r\n        var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n        var details;\r\n\r\n        var _normalizePrepare = normalizePrepare(_get(_getPrototypeOf(MaskedRange.prototype), \"doPrepare\", this).call(this, ch.replace(/\\D/g, ''), flags));\r\n\r\n        var _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2);\r\n\r\n        ch = _normalizePrepare2[0];\r\n        details = _normalizePrepare2[1];\r\n        if (!this.autofix || !ch) return ch;\r\n        var fromStr = String(this.from).padStart(this.maxLength, '0');\r\n        var toStr = String(this.to).padStart(this.maxLength, '0');\r\n        var nextVal = this.value + ch;\r\n        if (nextVal.length > this.maxLength) return '';\r\n\r\n        var _this$boundaries = this.boundaries(nextVal),\r\n            _this$boundaries2 = _slicedToArray(_this$boundaries, 2),\r\n            minstr = _this$boundaries2[0],\r\n            maxstr = _this$boundaries2[1];\r\n\r\n        if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];\r\n\r\n        if (Number(minstr) > this.to) {\r\n          if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\r\n            return ['', details.aggregate(this.append(fromStr[nextVal.length - 1] + ch, flags))];\r\n          }\r\n\r\n          return toStr[nextVal.length - 1];\r\n        }\r\n\r\n        return ch;\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"doValidate\",\r\n      value: function doValidate() {\r\n        var _get2;\r\n\r\n        var str = this.value;\r\n        var firstNonZero = str.search(/[^0]/);\r\n        if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\r\n\r\n        var _this$boundaries3 = this.boundaries(str),\r\n            _this$boundaries4 = _slicedToArray(_this$boundaries3, 2),\r\n            minstr = _this$boundaries4[0],\r\n            maxstr = _this$boundaries4[1];\r\n\r\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n          args[_key] = arguments[_key];\r\n        }\r\n\r\n        return this.from <= Number(maxstr) && Number(minstr) <= this.to && (_get2 = _get(_getPrototypeOf(MaskedRange.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args));\r\n      }\r\n    }]);\r\n\r\n    return MaskedRange;\r\n  }(MaskedPattern);\r\n  IMask.MaskedRange = MaskedRange;\r\n\r\n  /** Date mask */\r\n\r\n  var MaskedDate = /*#__PURE__*/function (_MaskedPattern) {\r\n    _inherits(MaskedDate, _MaskedPattern);\r\n\r\n    var _super = _createSuper(MaskedDate);\r\n\r\n    /** Pattern mask for date according to {@link MaskedDate#format} */\r\n\r\n    /** Start date */\r\n\r\n    /** End date */\r\n\r\n    /** */\r\n\r\n    /**\r\n      @param {Object} opts\r\n    */\r\n    function MaskedDate(opts) {\r\n      _classCallCheck(this, MaskedDate);\r\n\r\n      return _super.call(this, Object.assign({}, MaskedDate.DEFAULTS, opts));\r\n    }\r\n    /**\r\n      @override\r\n    */\r\n\r\n\r\n    _createClass(MaskedDate, [{\r\n      key: \"_update\",\r\n      value: function _update(opts) {\r\n        if (opts.mask === Date) delete opts.mask;\r\n        if (opts.pattern) opts.mask = opts.pattern;\r\n        var blocks = opts.blocks;\r\n        opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS()); // adjust year block\r\n\r\n        if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\r\n        if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\r\n\r\n        if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to) {\r\n          opts.blocks.m.from = opts.min.getMonth() + 1;\r\n          opts.blocks.m.to = opts.max.getMonth() + 1;\r\n\r\n          if (opts.blocks.m.from === opts.blocks.m.to) {\r\n            opts.blocks.d.from = opts.min.getDate();\r\n            opts.blocks.d.to = opts.max.getDate();\r\n          }\r\n        }\r\n\r\n        Object.assign(opts.blocks, this.blocks, blocks); // add autofix\r\n\r\n        Object.keys(opts.blocks).forEach(function (bk) {\r\n          var b = opts.blocks[bk];\r\n          if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\r\n        });\r\n\r\n        _get(_getPrototypeOf(MaskedDate.prototype), \"_update\", this).call(this, opts);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"doValidate\",\r\n      value: function doValidate() {\r\n        var _get2;\r\n\r\n        var date = this.date;\r\n\r\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n          args[_key] = arguments[_key];\r\n        }\r\n\r\n        return (_get2 = _get(_getPrototypeOf(MaskedDate.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args)) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\r\n      }\r\n      /** Checks if date is exists */\r\n\r\n    }, {\r\n      key: \"isDateExist\",\r\n      value: function isDateExist(str) {\r\n        return this.format(this.parse(str, this), this).indexOf(str) >= 0;\r\n      }\r\n      /** Parsed Date */\r\n\r\n    }, {\r\n      key: \"date\",\r\n      get: function get() {\r\n        return this.typedValue;\r\n      },\r\n      set: function set(date) {\r\n        this.typedValue = date;\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"typedValue\",\r\n      get: function get() {\r\n        return this.isComplete ? _get(_getPrototypeOf(MaskedDate.prototype), \"typedValue\", this) : null;\r\n      },\r\n      set: function set(value) {\r\n        _set(_getPrototypeOf(MaskedDate.prototype), \"typedValue\", value, this, true);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"maskEquals\",\r\n      value: function maskEquals(mask) {\r\n        return mask === Date || _get(_getPrototypeOf(MaskedDate.prototype), \"maskEquals\", this).call(this, mask);\r\n      }\r\n    }]);\r\n\r\n    return MaskedDate;\r\n  }(MaskedPattern);\r\n  MaskedDate.DEFAULTS = {\r\n    pattern: 'd{.}`m{.}`Y',\r\n    format: function format(date) {\r\n      if (!date) return '';\r\n      var day = String(date.getDate()).padStart(2, '0');\r\n      var month = String(date.getMonth() + 1).padStart(2, '0');\r\n      var year = date.getFullYear();\r\n      return [day, month, year].join('.');\r\n    },\r\n    parse: function parse(str) {\r\n      var _str$split = str.split('.'),\r\n          _str$split2 = _slicedToArray(_str$split, 3),\r\n          day = _str$split2[0],\r\n          month = _str$split2[1],\r\n          year = _str$split2[2];\r\n\r\n      return new Date(year, month - 1, day);\r\n    }\r\n  };\r\n\r\n  MaskedDate.GET_DEFAULT_BLOCKS = function () {\r\n    return {\r\n      d: {\r\n        mask: MaskedRange,\r\n        from: 1,\r\n        to: 31,\r\n        maxLength: 2\r\n      },\r\n      m: {\r\n        mask: MaskedRange,\r\n        from: 1,\r\n        to: 12,\r\n        maxLength: 2\r\n      },\r\n      Y: {\r\n        mask: MaskedRange,\r\n        from: 1900,\r\n        to: 9999\r\n      }\r\n    };\r\n  };\r\n\r\n  IMask.MaskedDate = MaskedDate;\r\n\r\n  /**\r\n    Generic element API to use with mask\r\n    @interface\r\n  */\r\n  var MaskElement = /*#__PURE__*/function () {\r\n    function MaskElement() {\r\n      _classCallCheck(this, MaskElement);\r\n    }\r\n\r\n    _createClass(MaskElement, [{\r\n      key: \"selectionStart\",\r\n      get:\r\n      /** */\r\n\r\n      /** */\r\n\r\n      /** */\r\n\r\n      /** Safely returns selection start */\r\n      function get() {\r\n        var start;\r\n\r\n        try {\r\n          start = this._unsafeSelectionStart;\r\n        } catch (e) {}\r\n\r\n        return start != null ? start : this.value.length;\r\n      }\r\n      /** Safely returns selection end */\r\n\r\n    }, {\r\n      key: \"selectionEnd\",\r\n      get: function get() {\r\n        var end;\r\n\r\n        try {\r\n          end = this._unsafeSelectionEnd;\r\n        } catch (e) {}\r\n\r\n        return end != null ? end : this.value.length;\r\n      }\r\n      /** Safely sets element selection */\r\n\r\n    }, {\r\n      key: \"select\",\r\n      value: function select(start, end) {\r\n        if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\r\n\r\n        try {\r\n          this._unsafeSelect(start, end);\r\n        } catch (e) {}\r\n      }\r\n      /** Should be overriden in subclasses */\r\n\r\n    }, {\r\n      key: \"_unsafeSelect\",\r\n      value: function _unsafeSelect(start, end) {}\r\n      /** Should be overriden in subclasses */\r\n\r\n    }, {\r\n      key: \"isActive\",\r\n      get: function get() {\r\n        return false;\r\n      }\r\n      /** Should be overriden in subclasses */\r\n\r\n    }, {\r\n      key: \"bindEvents\",\r\n      value: function bindEvents(handlers) {}\r\n      /** Should be overriden in subclasses */\r\n\r\n    }, {\r\n      key: \"unbindEvents\",\r\n      value: function unbindEvents() {}\r\n    }]);\r\n\r\n    return MaskElement;\r\n  }();\r\n  IMask.MaskElement = MaskElement;\r\n\r\n  /** Bridge between HTMLElement and {@link Masked} */\r\n\r\n  var HTMLMaskElement = /*#__PURE__*/function (_MaskElement) {\r\n    _inherits(HTMLMaskElement, _MaskElement);\r\n\r\n    var _super = _createSuper(HTMLMaskElement);\r\n\r\n    /** Mapping between HTMLElement events and mask internal events */\r\n\r\n    /** HTMLElement to use mask on */\r\n\r\n    /**\r\n      @param {HTMLInputElement|HTMLTextAreaElement} input\r\n    */\r\n    function HTMLMaskElement(input) {\r\n      var _this;\r\n\r\n      _classCallCheck(this, HTMLMaskElement);\r\n\r\n      _this = _super.call(this);\r\n      _this.input = input;\r\n      _this._handlers = {};\r\n      return _this;\r\n    }\r\n    /** */\r\n    // $FlowFixMe https://github.com/facebook/flow/issues/2839\r\n\r\n\r\n    _createClass(HTMLMaskElement, [{\r\n      key: \"rootElement\",\r\n      get: function get() {\r\n        var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\r\n\r\n        return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) === null || _this$input$getRootNo2 === void 0 ? void 0 : _this$input$getRootNo2.call(_this$input)) !== null && _this$input$getRootNo !== void 0 ? _this$input$getRootNo : document;\r\n      }\r\n      /**\r\n        Is element in focus\r\n        @readonly\r\n      */\r\n\r\n    }, {\r\n      key: \"isActive\",\r\n      get: function get() {\r\n        //$FlowFixMe\r\n        return this.input === this.rootElement.activeElement;\r\n      }\r\n      /**\r\n        Returns HTMLElement selection start\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"_unsafeSelectionStart\",\r\n      get: function get() {\r\n        return this.input.selectionStart;\r\n      }\r\n      /**\r\n        Returns HTMLElement selection end\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"_unsafeSelectionEnd\",\r\n      get: function get() {\r\n        return this.input.selectionEnd;\r\n      }\r\n      /**\r\n        Sets HTMLElement selection\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"_unsafeSelect\",\r\n      value: function _unsafeSelect(start, end) {\r\n        this.input.setSelectionRange(start, end);\r\n      }\r\n      /**\r\n        HTMLElement value\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"value\",\r\n      get: function get() {\r\n        return this.input.value;\r\n      },\r\n      set: function set(value) {\r\n        this.input.value = value;\r\n      }\r\n      /**\r\n        Binds HTMLElement events to mask internal events\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"bindEvents\",\r\n      value: function bindEvents(handlers) {\r\n        var _this2 = this;\r\n\r\n        Object.keys(handlers).forEach(function (event) {\r\n          return _this2._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]);\r\n        });\r\n      }\r\n      /**\r\n        Unbinds HTMLElement events to mask internal events\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"unbindEvents\",\r\n      value: function unbindEvents() {\r\n        var _this3 = this;\r\n\r\n        Object.keys(this._handlers).forEach(function (event) {\r\n          return _this3._toggleEventHandler(event);\r\n        });\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"_toggleEventHandler\",\r\n      value: function _toggleEventHandler(event, handler) {\r\n        if (this._handlers[event]) {\r\n          this.input.removeEventListener(event, this._handlers[event]);\r\n          delete this._handlers[event];\r\n        }\r\n\r\n        if (handler) {\r\n          this.input.addEventListener(event, handler);\r\n          this._handlers[event] = handler;\r\n        }\r\n      }\r\n    }]);\r\n\r\n    return HTMLMaskElement;\r\n  }(MaskElement);\r\n  HTMLMaskElement.EVENTS_MAP = {\r\n    selectionChange: 'keydown',\r\n    input: 'input',\r\n    drop: 'drop',\r\n    click: 'click',\r\n    focus: 'focus',\r\n    commit: 'blur'\r\n  };\r\n  IMask.HTMLMaskElement = HTMLMaskElement;\r\n\r\n  var HTMLContenteditableMaskElement = /*#__PURE__*/function (_HTMLMaskElement) {\r\n    _inherits(HTMLContenteditableMaskElement, _HTMLMaskElement);\r\n\r\n    var _super = _createSuper(HTMLContenteditableMaskElement);\r\n\r\n    function HTMLContenteditableMaskElement() {\r\n      _classCallCheck(this, HTMLContenteditableMaskElement);\r\n\r\n      return _super.apply(this, arguments);\r\n    }\r\n\r\n    _createClass(HTMLContenteditableMaskElement, [{\r\n      key: \"_unsafeSelectionStart\",\r\n      get:\r\n      /**\r\n        Returns HTMLElement selection start\r\n        @override\r\n      */\r\n      function get() {\r\n        var root = this.rootElement;\r\n        var selection = root.getSelection && root.getSelection();\r\n        var anchorOffset = selection && selection.anchorOffset;\r\n        var focusOffset = selection && selection.focusOffset;\r\n\r\n        if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\r\n          return anchorOffset;\r\n        }\r\n\r\n        return focusOffset;\r\n      }\r\n      /**\r\n        Returns HTMLElement selection end\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"_unsafeSelectionEnd\",\r\n      get: function get() {\r\n        var root = this.rootElement;\r\n        var selection = root.getSelection && root.getSelection();\r\n        var anchorOffset = selection && selection.anchorOffset;\r\n        var focusOffset = selection && selection.focusOffset;\r\n\r\n        if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\r\n          return anchorOffset;\r\n        }\r\n\r\n        return focusOffset;\r\n      }\r\n      /**\r\n        Sets HTMLElement selection\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"_unsafeSelect\",\r\n      value: function _unsafeSelect(start, end) {\r\n        if (!this.rootElement.createRange) return;\r\n        var range = this.rootElement.createRange();\r\n        range.setStart(this.input.firstChild || this.input, start);\r\n        range.setEnd(this.input.lastChild || this.input, end);\r\n        var root = this.rootElement;\r\n        var selection = root.getSelection && root.getSelection();\r\n\r\n        if (selection) {\r\n          selection.removeAllRanges();\r\n          selection.addRange(range);\r\n        }\r\n      }\r\n      /**\r\n        HTMLElement value\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"value\",\r\n      get: function get() {\r\n        // $FlowFixMe\r\n        return this.input.textContent;\r\n      },\r\n      set: function set(value) {\r\n        this.input.textContent = value;\r\n      }\r\n    }]);\r\n\r\n    return HTMLContenteditableMaskElement;\r\n  }(HTMLMaskElement);\r\n  IMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\r\n\r\n  var _excluded$1 = [\"mask\"];\r\n  /** Listens to element events and controls changes between element and {@link Masked} */\r\n\r\n  var InputMask = /*#__PURE__*/function () {\r\n    /**\r\n      View element\r\n      @readonly\r\n    */\r\n\r\n    /**\r\n      Internal {@link Masked} model\r\n      @readonly\r\n    */\r\n\r\n    /**\r\n      @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\r\n      @param {Object} opts\r\n    */\r\n    function InputMask(el, opts) {\r\n      _classCallCheck(this, InputMask);\r\n\r\n      this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLMaskElement(el);\r\n      this.masked = createMask(opts);\r\n      this._listeners = {};\r\n      this._value = '';\r\n      this._unmaskedValue = '';\r\n      this._saveSelection = this._saveSelection.bind(this);\r\n      this._onInput = this._onInput.bind(this);\r\n      this._onChange = this._onChange.bind(this);\r\n      this._onDrop = this._onDrop.bind(this);\r\n      this._onFocus = this._onFocus.bind(this);\r\n      this._onClick = this._onClick.bind(this);\r\n      this.alignCursor = this.alignCursor.bind(this);\r\n      this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\r\n\r\n      this._bindEvents(); // refresh\r\n\r\n\r\n      this.updateValue();\r\n\r\n      this._onChange();\r\n    }\r\n    /** Read or update mask */\r\n\r\n\r\n    _createClass(InputMask, [{\r\n      key: \"mask\",\r\n      get: function get() {\r\n        return this.masked.mask;\r\n      },\r\n      set: function set(mask) {\r\n        if (this.maskEquals(mask)) return; // $FlowFixMe No ideas ... after update\r\n\r\n        if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\r\n          this.masked.updateOptions({\r\n            mask: mask\r\n          });\r\n          return;\r\n        }\r\n\r\n        var masked = createMask({\r\n          mask: mask\r\n        });\r\n        masked.unmaskedValue = this.masked.unmaskedValue;\r\n        this.masked = masked;\r\n      }\r\n      /** Raw value */\r\n\r\n    }, {\r\n      key: \"maskEquals\",\r\n      value: function maskEquals(mask) {\r\n        var _this$masked;\r\n\r\n        return mask == null || ((_this$masked = this.masked) === null || _this$masked === void 0 ? void 0 : _this$masked.maskEquals(mask));\r\n      }\r\n    }, {\r\n      key: \"value\",\r\n      get: function get() {\r\n        return this._value;\r\n      },\r\n      set: function set(str) {\r\n        if (this.value === str) return;\r\n        this.masked.value = str;\r\n        this.updateControl();\r\n        this.alignCursor();\r\n      }\r\n      /** Unmasked value */\r\n\r\n    }, {\r\n      key: \"unmaskedValue\",\r\n      get: function get() {\r\n        return this._unmaskedValue;\r\n      },\r\n      set: function set(str) {\r\n        if (this.unmaskedValue === str) return;\r\n        this.masked.unmaskedValue = str;\r\n        this.updateControl();\r\n        this.alignCursor();\r\n      }\r\n      /** Typed unmasked value */\r\n\r\n    }, {\r\n      key: \"typedValue\",\r\n      get: function get() {\r\n        return this.masked.typedValue;\r\n      },\r\n      set: function set(val) {\r\n        if (this.masked.typedValueEquals(val)) return;\r\n        this.masked.typedValue = val;\r\n        this.updateControl();\r\n        this.alignCursor();\r\n      }\r\n      /**\r\n        Starts listening to element events\r\n        @protected\r\n      */\r\n\r\n    }, {\r\n      key: \"_bindEvents\",\r\n      value: function _bindEvents() {\r\n        this.el.bindEvents({\r\n          selectionChange: this._saveSelection,\r\n          input: this._onInput,\r\n          drop: this._onDrop,\r\n          click: this._onClick,\r\n          focus: this._onFocus,\r\n          commit: this._onChange\r\n        });\r\n      }\r\n      /**\r\n        Stops listening to element events\r\n        @protected\r\n       */\r\n\r\n    }, {\r\n      key: \"_unbindEvents\",\r\n      value: function _unbindEvents() {\r\n        if (this.el) this.el.unbindEvents();\r\n      }\r\n      /**\r\n        Fires custom event\r\n        @protected\r\n       */\r\n\r\n    }, {\r\n      key: \"_fireEvent\",\r\n      value: function _fireEvent(ev) {\r\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n          args[_key - 1] = arguments[_key];\r\n        }\r\n\r\n        var listeners = this._listeners[ev];\r\n        if (!listeners) return;\r\n        listeners.forEach(function (l) {\r\n          return l.apply(void 0, args);\r\n        });\r\n      }\r\n      /**\r\n        Current selection start\r\n        @readonly\r\n      */\r\n\r\n    }, {\r\n      key: \"selectionStart\",\r\n      get: function get() {\r\n        return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\r\n      }\r\n      /** Current cursor position */\r\n\r\n    }, {\r\n      key: \"cursorPos\",\r\n      get: function get() {\r\n        return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\r\n      },\r\n      set: function set(pos) {\r\n        if (!this.el || !this.el.isActive) return;\r\n        this.el.select(pos, pos);\r\n\r\n        this._saveSelection();\r\n      }\r\n      /**\r\n        Stores current selection\r\n        @protected\r\n      */\r\n\r\n    }, {\r\n      key: \"_saveSelection\",\r\n      value: function\r\n        /* ev */\r\n      _saveSelection() {\r\n        if (this.value !== this.el.value) {\r\n          console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\r\n        }\r\n\r\n        this._selection = {\r\n          start: this.selectionStart,\r\n          end: this.cursorPos\r\n        };\r\n      }\r\n      /** Syncronizes model value from view */\r\n\r\n    }, {\r\n      key: \"updateValue\",\r\n      value: function updateValue() {\r\n        this.masked.value = this.el.value;\r\n        this._value = this.masked.value;\r\n      }\r\n      /** Syncronizes view from model value, fires change events */\r\n\r\n    }, {\r\n      key: \"updateControl\",\r\n      value: function updateControl() {\r\n        var newUnmaskedValue = this.masked.unmaskedValue;\r\n        var newValue = this.masked.value;\r\n        var isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\r\n        this._unmaskedValue = newUnmaskedValue;\r\n        this._value = newValue;\r\n        if (this.el.value !== newValue) this.el.value = newValue;\r\n        if (isChanged) this._fireChangeEvents();\r\n      }\r\n      /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\r\n\r\n    }, {\r\n      key: \"updateOptions\",\r\n      value: function updateOptions(opts) {\r\n        var mask = opts.mask,\r\n            restOpts = _objectWithoutProperties(opts, _excluded$1);\r\n\r\n        var updateMask = !this.maskEquals(mask);\r\n        var updateOpts = !objectIncludes(this.masked, restOpts);\r\n        if (updateMask) this.mask = mask;\r\n        if (updateOpts) this.masked.updateOptions(restOpts);\r\n        if (updateMask || updateOpts) this.updateControl();\r\n      }\r\n      /** Updates cursor */\r\n\r\n    }, {\r\n      key: \"updateCursor\",\r\n      value: function updateCursor(cursorPos) {\r\n        if (cursorPos == null) return;\r\n        this.cursorPos = cursorPos; // also queue change cursor for mobile browsers\r\n\r\n        this._delayUpdateCursor(cursorPos);\r\n      }\r\n      /**\r\n        Delays cursor update to support mobile browsers\r\n        @private\r\n      */\r\n\r\n    }, {\r\n      key: \"_delayUpdateCursor\",\r\n      value: function _delayUpdateCursor(cursorPos) {\r\n        var _this = this;\r\n\r\n        this._abortUpdateCursor();\r\n\r\n        this._changingCursorPos = cursorPos;\r\n        this._cursorChanging = setTimeout(function () {\r\n          if (!_this.el) return; // if was destroyed\r\n\r\n          _this.cursorPos = _this._changingCursorPos;\r\n\r\n          _this._abortUpdateCursor();\r\n        }, 10);\r\n      }\r\n      /**\r\n        Fires custom events\r\n        @protected\r\n      */\r\n\r\n    }, {\r\n      key: \"_fireChangeEvents\",\r\n      value: function _fireChangeEvents() {\r\n        this._fireEvent('accept', this._inputEvent);\r\n\r\n        if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\r\n      }\r\n      /**\r\n        Aborts delayed cursor update\r\n        @private\r\n      */\r\n\r\n    }, {\r\n      key: \"_abortUpdateCursor\",\r\n      value: function _abortUpdateCursor() {\r\n        if (this._cursorChanging) {\r\n          clearTimeout(this._cursorChanging);\r\n          delete this._cursorChanging;\r\n        }\r\n      }\r\n      /** Aligns cursor to nearest available position */\r\n\r\n    }, {\r\n      key: \"alignCursor\",\r\n      value: function alignCursor() {\r\n        this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\r\n      }\r\n      /** Aligns cursor only if selection is empty */\r\n\r\n    }, {\r\n      key: \"alignCursorFriendly\",\r\n      value: function alignCursorFriendly() {\r\n        if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\r\n\r\n        this.alignCursor();\r\n      }\r\n      /** Adds listener on custom event */\r\n\r\n    }, {\r\n      key: \"on\",\r\n      value: function on(ev, handler) {\r\n        if (!this._listeners[ev]) this._listeners[ev] = [];\r\n\r\n        this._listeners[ev].push(handler);\r\n\r\n        return this;\r\n      }\r\n      /** Removes custom event listener */\r\n\r\n    }, {\r\n      key: \"off\",\r\n      value: function off(ev, handler) {\r\n        if (!this._listeners[ev]) return this;\r\n\r\n        if (!handler) {\r\n          delete this._listeners[ev];\r\n          return this;\r\n        }\r\n\r\n        var hIndex = this._listeners[ev].indexOf(handler);\r\n\r\n        if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\r\n        return this;\r\n      }\r\n      /** Handles view input event */\r\n\r\n    }, {\r\n      key: \"_onInput\",\r\n      value: function _onInput(e) {\r\n        this._inputEvent = e;\r\n\r\n        this._abortUpdateCursor(); // fix strange IE behavior\r\n\r\n\r\n        if (!this._selection) return this.updateValue();\r\n        var details = new ActionDetails( // new state\r\n        this.el.value, this.cursorPos, // old state\r\n        this.value, this._selection);\r\n        var oldRawValue = this.masked.rawInputValue;\r\n        var offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\r\n          input: true,\r\n          raw: true\r\n        }).offset; // force align in remove direction only if no input chars were removed\r\n        // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\r\n\r\n        var removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\r\n        var cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\r\n        if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\r\n        this.updateControl();\r\n        this.updateCursor(cursorPos);\r\n        delete this._inputEvent;\r\n      }\r\n      /** Handles view change event and commits model value */\r\n\r\n    }, {\r\n      key: \"_onChange\",\r\n      value: function _onChange() {\r\n        if (this.value !== this.el.value) {\r\n          this.updateValue();\r\n        }\r\n\r\n        this.masked.doCommit();\r\n        this.updateControl();\r\n\r\n        this._saveSelection();\r\n      }\r\n      /** Handles view drop event, prevents by default */\r\n\r\n    }, {\r\n      key: \"_onDrop\",\r\n      value: function _onDrop(ev) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n      /** Restore last selection on focus */\r\n\r\n    }, {\r\n      key: \"_onFocus\",\r\n      value: function _onFocus(ev) {\r\n        this.alignCursorFriendly();\r\n      }\r\n      /** Restore last selection on focus */\r\n\r\n    }, {\r\n      key: \"_onClick\",\r\n      value: function _onClick(ev) {\r\n        this.alignCursorFriendly();\r\n      }\r\n      /** Unbind view events and removes element reference */\r\n\r\n    }, {\r\n      key: \"destroy\",\r\n      value: function destroy() {\r\n        this._unbindEvents(); // $FlowFixMe why not do so?\r\n\r\n\r\n        this._listeners.length = 0; // $FlowFixMe\r\n\r\n        delete this.el;\r\n      }\r\n    }]);\r\n\r\n    return InputMask;\r\n  }();\r\n  IMask.InputMask = InputMask;\r\n\r\n  /** Pattern which validates enum values */\r\n\r\n  var MaskedEnum = /*#__PURE__*/function (_MaskedPattern) {\r\n    _inherits(MaskedEnum, _MaskedPattern);\r\n\r\n    var _super = _createSuper(MaskedEnum);\r\n\r\n    function MaskedEnum() {\r\n      _classCallCheck(this, MaskedEnum);\r\n\r\n      return _super.apply(this, arguments);\r\n    }\r\n\r\n    _createClass(MaskedEnum, [{\r\n      key: \"_update\",\r\n      value:\r\n      /**\r\n        @override\r\n        @param {Object} opts\r\n      */\r\n      function _update(opts) {\r\n        // TODO type\r\n        if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length);\r\n\r\n        _get(_getPrototypeOf(MaskedEnum.prototype), \"_update\", this).call(this, opts);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"doValidate\",\r\n      value: function doValidate() {\r\n        var _this = this,\r\n            _get2;\r\n\r\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n          args[_key] = arguments[_key];\r\n        }\r\n\r\n        return this.enum.some(function (e) {\r\n          return e.indexOf(_this.unmaskedValue) >= 0;\r\n        }) && (_get2 = _get(_getPrototypeOf(MaskedEnum.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args));\r\n      }\r\n    }]);\r\n\r\n    return MaskedEnum;\r\n  }(MaskedPattern);\r\n  IMask.MaskedEnum = MaskedEnum;\r\n\r\n  /**\r\n    Number mask\r\n    @param {Object} opts\r\n    @param {string} opts.radix - Single char\r\n    @param {string} opts.thousandsSeparator - Single char\r\n    @param {Array<string>} opts.mapToRadix - Array of single chars\r\n    @param {number} opts.min\r\n    @param {number} opts.max\r\n    @param {number} opts.scale - Digits after point\r\n    @param {boolean} opts.signed - Allow negative\r\n    @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\r\n    @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\r\n  */\r\n  var MaskedNumber = /*#__PURE__*/function (_Masked) {\r\n    _inherits(MaskedNumber, _Masked);\r\n\r\n    var _super = _createSuper(MaskedNumber);\r\n\r\n    /** Single char */\r\n\r\n    /** Single char */\r\n\r\n    /** Array of single chars */\r\n\r\n    /** */\r\n\r\n    /** */\r\n\r\n    /** Digits after point */\r\n\r\n    /** */\r\n\r\n    /** Flag to remove leading and trailing zeros in the end of editing */\r\n\r\n    /** Flag to pad trailing zeros after point in the end of editing */\r\n    function MaskedNumber(opts) {\r\n      _classCallCheck(this, MaskedNumber);\r\n\r\n      return _super.call(this, Object.assign({}, MaskedNumber.DEFAULTS, opts));\r\n    }\r\n    /**\r\n      @override\r\n    */\r\n\r\n\r\n    _createClass(MaskedNumber, [{\r\n      key: \"_update\",\r\n      value: function _update(opts) {\r\n        _get(_getPrototypeOf(MaskedNumber.prototype), \"_update\", this).call(this, opts);\r\n\r\n        this._updateRegExps();\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"_updateRegExps\",\r\n      value: function _updateRegExps() {\r\n        // use different regexp to process user input (more strict, input suffix) and tail shifting\r\n        var start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\r\n        var midInput = '(0|([1-9]+\\\\d*))?';\r\n        var mid = '\\\\d*';\r\n        var end = (this.scale ? '(' + escapeRegExp(this.radix) + '\\\\d{0,' + this.scale + '})?' : '') + '$';\r\n        this._numberRegExpInput = new RegExp(start + midInput + end);\r\n        this._numberRegExp = new RegExp(start + mid + end);\r\n        this._mapToRadixRegExp = new RegExp('[' + this.mapToRadix.map(escapeRegExp).join('') + ']', 'g');\r\n        this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"_removeThousandsSeparators\",\r\n      value: function _removeThousandsSeparators(value) {\r\n        return value.replace(this._thousandsSeparatorRegExp, '');\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"_insertThousandsSeparators\",\r\n      value: function _insertThousandsSeparators(value) {\r\n        // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n        var parts = value.split(this.radix);\r\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\r\n        return parts.join(this.radix);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"doPrepare\",\r\n      value: function doPrepare(ch) {\r\n        var _get2;\r\n\r\n        ch = ch.replace(this._mapToRadixRegExp, this.radix);\r\n\r\n        var noSepCh = this._removeThousandsSeparators(ch);\r\n\r\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n          args[_key - 1] = arguments[_key];\r\n        }\r\n\r\n        var _normalizePrepare = normalizePrepare((_get2 = _get(_getPrototypeOf(MaskedNumber.prototype), \"doPrepare\", this)).call.apply(_get2, [this, noSepCh].concat(args))),\r\n            _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2),\r\n            prepCh = _normalizePrepare2[0],\r\n            details = _normalizePrepare2[1];\r\n\r\n        if (ch && !noSepCh) details.skip = true;\r\n        return [prepCh, details];\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"_separatorsCount\",\r\n      value: function _separatorsCount(to) {\r\n        var extendOnSeparators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n        var count = 0;\r\n\r\n        for (var pos = 0; pos < to; ++pos) {\r\n          if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\r\n            ++count;\r\n            if (extendOnSeparators) to += this.thousandsSeparator.length;\r\n          }\r\n        }\r\n\r\n        return count;\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"_separatorsCountFromSlice\",\r\n      value: function _separatorsCountFromSlice() {\r\n        var slice = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._value;\r\n        return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"extractInput\",\r\n      value: function extractInput() {\r\n        var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n        var flags = arguments.length > 2 ? arguments[2] : undefined;\r\n\r\n        var _this$_adjustRangeWit = this._adjustRangeWithSeparators(fromPos, toPos);\r\n\r\n        var _this$_adjustRangeWit2 = _slicedToArray(_this$_adjustRangeWit, 2);\r\n\r\n        fromPos = _this$_adjustRangeWit2[0];\r\n        toPos = _this$_adjustRangeWit2[1];\r\n        return this._removeThousandsSeparators(_get(_getPrototypeOf(MaskedNumber.prototype), \"extractInput\", this).call(this, fromPos, toPos, flags));\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"_appendCharRaw\",\r\n      value: function _appendCharRaw(ch) {\r\n        var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n        if (!this.thousandsSeparator) return _get(_getPrototypeOf(MaskedNumber.prototype), \"_appendCharRaw\", this).call(this, ch, flags);\r\n        var prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\r\n\r\n        var prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\r\n\r\n        this._value = this._removeThousandsSeparators(this.value);\r\n\r\n        var appendDetails = _get(_getPrototypeOf(MaskedNumber.prototype), \"_appendCharRaw\", this).call(this, ch, flags);\r\n\r\n        this._value = this._insertThousandsSeparators(this._value);\r\n        var beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\r\n\r\n        var beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\r\n\r\n        appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\r\n        appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\r\n        return appendDetails;\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"_findSeparatorAround\",\r\n      value: function _findSeparatorAround(pos) {\r\n        if (this.thousandsSeparator) {\r\n          var searchFrom = pos - this.thousandsSeparator.length + 1;\r\n          var separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\r\n          if (separatorPos <= pos) return separatorPos;\r\n        }\r\n\r\n        return -1;\r\n      }\r\n    }, {\r\n      key: \"_adjustRangeWithSeparators\",\r\n      value: function _adjustRangeWithSeparators(from, to) {\r\n        var separatorAroundFromPos = this._findSeparatorAround(from);\r\n\r\n        if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\r\n\r\n        var separatorAroundToPos = this._findSeparatorAround(to);\r\n\r\n        if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\r\n        return [from, to];\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"remove\",\r\n      value: function remove() {\r\n        var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n        var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n        var _this$_adjustRangeWit3 = this._adjustRangeWithSeparators(fromPos, toPos);\r\n\r\n        var _this$_adjustRangeWit4 = _slicedToArray(_this$_adjustRangeWit3, 2);\r\n\r\n        fromPos = _this$_adjustRangeWit4[0];\r\n        toPos = _this$_adjustRangeWit4[1];\r\n        var valueBeforePos = this.value.slice(0, fromPos);\r\n        var valueAfterPos = this.value.slice(toPos);\r\n\r\n        var prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\r\n\r\n        this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\r\n\r\n        var beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\r\n\r\n        return new ChangeDetails({\r\n          tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\r\n        });\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"nearestInputPos\",\r\n      value: function nearestInputPos(cursorPos, direction) {\r\n        if (!this.thousandsSeparator) return cursorPos;\r\n\r\n        switch (direction) {\r\n          case DIRECTION.NONE:\r\n          case DIRECTION.LEFT:\r\n          case DIRECTION.FORCE_LEFT:\r\n            {\r\n              var separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\r\n\r\n              if (separatorAtLeftPos >= 0) {\r\n                var separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\r\n\r\n                if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\r\n                  return separatorAtLeftPos;\r\n                }\r\n              }\r\n\r\n              break;\r\n            }\r\n\r\n          case DIRECTION.RIGHT:\r\n          case DIRECTION.FORCE_RIGHT:\r\n            {\r\n              var separatorAtRightPos = this._findSeparatorAround(cursorPos);\r\n\r\n              if (separatorAtRightPos >= 0) {\r\n                return separatorAtRightPos + this.thousandsSeparator.length;\r\n              }\r\n            }\r\n        }\r\n\r\n        return cursorPos;\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"doValidate\",\r\n      value: function doValidate(flags) {\r\n        var regexp = flags.input ? this._numberRegExpInput : this._numberRegExp; // validate as string\r\n\r\n        var valid = regexp.test(this._removeThousandsSeparators(this.value));\r\n\r\n        if (valid) {\r\n          // validate as number\r\n          var number = this.number;\r\n          valid = valid && !isNaN(number) && ( // check min bound for negative values\r\n          this.min == null || this.min >= 0 || this.min <= this.number) && ( // check max bound for positive values\r\n          this.max == null || this.max <= 0 || this.number <= this.max);\r\n        }\r\n\r\n        return valid && _get(_getPrototypeOf(MaskedNumber.prototype), \"doValidate\", this).call(this, flags);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"doCommit\",\r\n      value: function doCommit() {\r\n        if (this.value) {\r\n          var number = this.number;\r\n          var validnum = number; // check bounds\r\n\r\n          if (this.min != null) validnum = Math.max(validnum, this.min);\r\n          if (this.max != null) validnum = Math.min(validnum, this.max);\r\n          if (validnum !== number) this.unmaskedValue = String(validnum);\r\n          var formatted = this.value;\r\n          if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\r\n          if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\r\n          this._value = formatted;\r\n        }\r\n\r\n        _get(_getPrototypeOf(MaskedNumber.prototype), \"doCommit\", this).call(this);\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"_normalizeZeros\",\r\n      value: function _normalizeZeros(value) {\r\n        var parts = this._removeThousandsSeparators(value).split(this.radix); // remove leading zeros\r\n\r\n\r\n        parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, function (match, sign, zeros, num) {\r\n          return sign + num;\r\n        }); // add leading zero\r\n\r\n        if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\r\n\r\n        if (parts.length > 1) {\r\n          parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\r\n\r\n          if (!parts[1].length) parts.length = 1; // remove fractional\r\n        }\r\n\r\n        return this._insertThousandsSeparators(parts.join(this.radix));\r\n      }\r\n      /** */\r\n\r\n    }, {\r\n      key: \"_padFractionalZeros\",\r\n      value: function _padFractionalZeros(value) {\r\n        if (!value) return value;\r\n        var parts = value.split(this.radix);\r\n        if (parts.length < 2) parts.push('');\r\n        parts[1] = parts[1].padEnd(this.scale, '0');\r\n        return parts.join(this.radix);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"unmaskedValue\",\r\n      get: function get() {\r\n        return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, '.');\r\n      },\r\n      set: function set(unmaskedValue) {\r\n        _set(_getPrototypeOf(MaskedNumber.prototype), \"unmaskedValue\", unmaskedValue.replace('.', this.radix), this, true);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"typedValue\",\r\n      get: function get() {\r\n        return Number(this.unmaskedValue);\r\n      },\r\n      set: function set(n) {\r\n        _set(_getPrototypeOf(MaskedNumber.prototype), \"unmaskedValue\", String(n), this, true);\r\n      }\r\n      /** Parsed Number */\r\n\r\n    }, {\r\n      key: \"number\",\r\n      get: function get() {\r\n        return this.typedValue;\r\n      },\r\n      set: function set(number) {\r\n        this.typedValue = number;\r\n      }\r\n      /**\r\n        Is negative allowed\r\n        @readonly\r\n      */\r\n\r\n    }, {\r\n      key: \"allowNegative\",\r\n      get: function get() {\r\n        return this.signed || this.min != null && this.min < 0 || this.max != null && this.max < 0;\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"typedValueEquals\",\r\n      value: function typedValueEquals(value) {\r\n        // handle  0 -> '' case (typed = 0 even if value = '')\r\n        // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\r\n        return (_get(_getPrototypeOf(MaskedNumber.prototype), \"typedValueEquals\", this).call(this, value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === '');\r\n      }\r\n    }]);\r\n\r\n    return MaskedNumber;\r\n  }(Masked);\r\n  MaskedNumber.DEFAULTS = {\r\n    radix: ',',\r\n    thousandsSeparator: '',\r\n    mapToRadix: ['.'],\r\n    scale: 2,\r\n    signed: false,\r\n    normalizeZeros: true,\r\n    padFractionalZeros: false\r\n  };\r\n  MaskedNumber.EMPTY_VALUES = [].concat(_toConsumableArray(Masked.EMPTY_VALUES), [0]);\r\n  IMask.MaskedNumber = MaskedNumber;\r\n\r\n  /** Masking by custom Function */\r\n\r\n  var MaskedFunction = /*#__PURE__*/function (_Masked) {\r\n    _inherits(MaskedFunction, _Masked);\r\n\r\n    var _super = _createSuper(MaskedFunction);\r\n\r\n    function MaskedFunction() {\r\n      _classCallCheck(this, MaskedFunction);\r\n\r\n      return _super.apply(this, arguments);\r\n    }\r\n\r\n    _createClass(MaskedFunction, [{\r\n      key: \"_update\",\r\n      value:\r\n      /**\r\n        @override\r\n        @param {Object} opts\r\n      */\r\n      function _update(opts) {\r\n        if (opts.mask) opts.validate = opts.mask;\r\n\r\n        _get(_getPrototypeOf(MaskedFunction.prototype), \"_update\", this).call(this, opts);\r\n      }\r\n    }]);\r\n\r\n    return MaskedFunction;\r\n  }(Masked);\r\n  IMask.MaskedFunction = MaskedFunction;\r\n\r\n  var _excluded = [\"compiledMasks\", \"currentMaskRef\", \"currentMask\"];\r\n\r\n  /** Dynamic mask for choosing apropriate mask in run-time */\r\n  var MaskedDynamic = /*#__PURE__*/function (_Masked) {\r\n    _inherits(MaskedDynamic, _Masked);\r\n\r\n    var _super = _createSuper(MaskedDynamic);\r\n\r\n    /** Currently chosen mask */\r\n\r\n    /** Compliled {@link Masked} options */\r\n\r\n    /** Chooses {@link Masked} depending on input value */\r\n\r\n    /**\r\n      @param {Object} opts\r\n    */\r\n    function MaskedDynamic(opts) {\r\n      var _this;\r\n\r\n      _classCallCheck(this, MaskedDynamic);\r\n\r\n      _this = _super.call(this, Object.assign({}, MaskedDynamic.DEFAULTS, opts));\r\n      _this.currentMask = null;\r\n      return _this;\r\n    }\r\n    /**\r\n      @override\r\n    */\r\n\r\n\r\n    _createClass(MaskedDynamic, [{\r\n      key: \"_update\",\r\n      value: function _update(opts) {\r\n        _get(_getPrototypeOf(MaskedDynamic.prototype), \"_update\", this).call(this, opts);\r\n\r\n        if ('mask' in opts) {\r\n          // mask could be totally dynamic with only `dispatch` option\r\n          this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(function (m) {\r\n            return createMask(m);\r\n          }) : [];\r\n        }\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"_appendCharRaw\",\r\n      value: function _appendCharRaw(ch) {\r\n        var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n        var details = this._applyDispatch(ch, flags);\r\n\r\n        if (this.currentMask) {\r\n          details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\r\n        }\r\n\r\n        return details;\r\n      }\r\n    }, {\r\n      key: \"_applyDispatch\",\r\n      value: function _applyDispatch() {\r\n        var appended = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\r\n        var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n        var prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\r\n        var inputValue = this.rawInputValue;\r\n        var insertValue = flags.tail && flags._beforeTailState != null ? // $FlowFixMe - tired to fight with type system\r\n        flags._beforeTailState._rawInputValue : inputValue;\r\n        var tailValue = inputValue.slice(insertValue.length);\r\n        var prevMask = this.currentMask;\r\n        var details = new ChangeDetails();\r\n        var prevMaskState = prevMask === null || prevMask === void 0 ? void 0 : prevMask.state; // clone flags to prevent overwriting `_beforeTailState`\r\n\r\n        this.currentMask = this.doDispatch(appended, Object.assign({}, flags)); // restore state after dispatch\r\n\r\n        if (this.currentMask) {\r\n          if (this.currentMask !== prevMask) {\r\n            // if mask changed reapply input\r\n            this.currentMask.reset();\r\n\r\n            if (insertValue) {\r\n              // $FlowFixMe - it's ok, we don't change current mask above\r\n              var d = this.currentMask.append(insertValue, {\r\n                raw: true\r\n              });\r\n              details.tailShift = d.inserted.length - prevValueBeforeTail.length;\r\n            }\r\n\r\n            if (tailValue) {\r\n              // $FlowFixMe - it's ok, we don't change current mask above\r\n              details.tailShift += this.currentMask.append(tailValue, {\r\n                raw: true,\r\n                tail: true\r\n              }).tailShift;\r\n            }\r\n          } else {\r\n            // Dispatch can do something bad with state, so\r\n            // restore prev mask state\r\n            this.currentMask.state = prevMaskState;\r\n          }\r\n        }\r\n\r\n        return details;\r\n      }\r\n    }, {\r\n      key: \"_appendPlaceholder\",\r\n      value: function _appendPlaceholder() {\r\n        var details = this._applyDispatch.apply(this, arguments);\r\n\r\n        if (this.currentMask) {\r\n          details.aggregate(this.currentMask._appendPlaceholder());\r\n        }\r\n\r\n        return details;\r\n      }\r\n      /**\r\n       @override\r\n      */\r\n\r\n    }, {\r\n      key: \"_appendEager\",\r\n      value: function _appendEager() {\r\n        var details = this._applyDispatch.apply(this, arguments);\r\n\r\n        if (this.currentMask) {\r\n          details.aggregate(this.currentMask._appendEager());\r\n        }\r\n\r\n        return details;\r\n      }\r\n    }, {\r\n      key: \"currentMaskFlags\",\r\n      value: function currentMaskFlags(flags) {\r\n        var _flags$_beforeTailSta, _flags$_beforeTailSta2;\r\n\r\n        return Object.assign({}, flags, {\r\n          _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) === null || _flags$_beforeTailSta === void 0 ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) === null || _flags$_beforeTailSta2 === void 0 ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\r\n        });\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"doDispatch\",\r\n      value: function doDispatch(appended) {\r\n        var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n        return this.dispatch(appended, this, flags);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"doValidate\",\r\n      value: function doValidate(flags) {\r\n        return _get(_getPrototypeOf(MaskedDynamic.prototype), \"doValidate\", this).call(this, flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"doPrepare\",\r\n      value: function doPrepare(str) {\r\n        var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n        var _normalizePrepare = normalizePrepare(_get(_getPrototypeOf(MaskedDynamic.prototype), \"doPrepare\", this).call(this, str, flags)),\r\n            _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2),\r\n            s = _normalizePrepare2[0],\r\n            details = _normalizePrepare2[1];\r\n\r\n        if (this.currentMask) {\r\n          var currentDetails;\r\n\r\n          var _normalizePrepare3 = normalizePrepare(_get(_getPrototypeOf(MaskedDynamic.prototype), \"doPrepare\", this).call(this, s, this.currentMaskFlags(flags)));\r\n\r\n          var _normalizePrepare4 = _slicedToArray(_normalizePrepare3, 2);\r\n\r\n          s = _normalizePrepare4[0];\r\n          currentDetails = _normalizePrepare4[1];\r\n          details = details.aggregate(currentDetails);\r\n        }\r\n\r\n        return [s, details];\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"reset\",\r\n      value: function reset() {\r\n        var _this$currentMask;\r\n\r\n        (_this$currentMask = this.currentMask) === null || _this$currentMask === void 0 ? void 0 : _this$currentMask.reset();\r\n        this.compiledMasks.forEach(function (m) {\r\n          return m.reset();\r\n        });\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"value\",\r\n      get: function get() {\r\n        return this.currentMask ? this.currentMask.value : '';\r\n      },\r\n      set: function set(value) {\r\n        _set(_getPrototypeOf(MaskedDynamic.prototype), \"value\", value, this, true);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"unmaskedValue\",\r\n      get: function get() {\r\n        return this.currentMask ? this.currentMask.unmaskedValue : '';\r\n      },\r\n      set: function set(unmaskedValue) {\r\n        _set(_getPrototypeOf(MaskedDynamic.prototype), \"unmaskedValue\", unmaskedValue, this, true);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"typedValue\",\r\n      get: function get() {\r\n        return this.currentMask ? this.currentMask.typedValue : '';\r\n      } // probably typedValue should not be used with dynamic\r\n      ,\r\n      set: function set(value) {\r\n        var unmaskedValue = String(value); // double check it\r\n\r\n        if (this.currentMask) {\r\n          this.currentMask.typedValue = value;\r\n          unmaskedValue = this.currentMask.unmaskedValue;\r\n        }\r\n\r\n        this.unmaskedValue = unmaskedValue;\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"isComplete\",\r\n      get: function get() {\r\n        var _this$currentMask2;\r\n\r\n        return Boolean((_this$currentMask2 = this.currentMask) === null || _this$currentMask2 === void 0 ? void 0 : _this$currentMask2.isComplete);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"isFilled\",\r\n      get: function get() {\r\n        var _this$currentMask3;\r\n\r\n        return Boolean((_this$currentMask3 = this.currentMask) === null || _this$currentMask3 === void 0 ? void 0 : _this$currentMask3.isFilled);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"remove\",\r\n      value: function remove() {\r\n        var details = new ChangeDetails();\r\n\r\n        if (this.currentMask) {\r\n          var _this$currentMask4;\r\n\r\n          details.aggregate((_this$currentMask4 = this.currentMask).remove.apply(_this$currentMask4, arguments)) // update with dispatch\r\n          .aggregate(this._applyDispatch());\r\n        }\r\n\r\n        return details;\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"state\",\r\n      get: function get() {\r\n        var _this$currentMask5;\r\n\r\n        return Object.assign({}, _get(_getPrototypeOf(MaskedDynamic.prototype), \"state\", this), {\r\n          _rawInputValue: this.rawInputValue,\r\n          compiledMasks: this.compiledMasks.map(function (m) {\r\n            return m.state;\r\n          }),\r\n          currentMaskRef: this.currentMask,\r\n          currentMask: (_this$currentMask5 = this.currentMask) === null || _this$currentMask5 === void 0 ? void 0 : _this$currentMask5.state\r\n        });\r\n      },\r\n      set: function set(state) {\r\n        var compiledMasks = state.compiledMasks,\r\n            currentMaskRef = state.currentMaskRef,\r\n            currentMask = state.currentMask,\r\n            maskedState = _objectWithoutProperties(state, _excluded);\r\n\r\n        this.compiledMasks.forEach(function (m, mi) {\r\n          return m.state = compiledMasks[mi];\r\n        });\r\n\r\n        if (currentMaskRef != null) {\r\n          this.currentMask = currentMaskRef;\r\n          this.currentMask.state = currentMask;\r\n        }\r\n\r\n        _set(_getPrototypeOf(MaskedDynamic.prototype), \"state\", maskedState, this, true);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"extractInput\",\r\n      value: function extractInput() {\r\n        var _this$currentMask6;\r\n\r\n        return this.currentMask ? (_this$currentMask6 = this.currentMask).extractInput.apply(_this$currentMask6, arguments) : '';\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"extractTail\",\r\n      value: function extractTail() {\r\n        var _this$currentMask7, _get2;\r\n\r\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n          args[_key] = arguments[_key];\r\n        }\r\n\r\n        return this.currentMask ? (_this$currentMask7 = this.currentMask).extractTail.apply(_this$currentMask7, args) : (_get2 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"extractTail\", this)).call.apply(_get2, [this].concat(args));\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"doCommit\",\r\n      value: function doCommit() {\r\n        if (this.currentMask) this.currentMask.doCommit();\r\n\r\n        _get(_getPrototypeOf(MaskedDynamic.prototype), \"doCommit\", this).call(this);\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"nearestInputPos\",\r\n      value: function nearestInputPos() {\r\n        var _this$currentMask8, _get3;\r\n\r\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n          args[_key2] = arguments[_key2];\r\n        }\r\n\r\n        return this.currentMask ? (_this$currentMask8 = this.currentMask).nearestInputPos.apply(_this$currentMask8, args) : (_get3 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"nearestInputPos\", this)).call.apply(_get3, [this].concat(args));\r\n      }\r\n    }, {\r\n      key: \"overwrite\",\r\n      get: function get() {\r\n        return this.currentMask ? this.currentMask.overwrite : _get(_getPrototypeOf(MaskedDynamic.prototype), \"overwrite\", this);\r\n      },\r\n      set: function set(overwrite) {\r\n        console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\r\n      }\r\n    }, {\r\n      key: \"eager\",\r\n      get: function get() {\r\n        return this.currentMask ? this.currentMask.eager : _get(_getPrototypeOf(MaskedDynamic.prototype), \"eager\", this);\r\n      },\r\n      set: function set(eager) {\r\n        console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"maskEquals\",\r\n      value: function maskEquals(mask) {\r\n        return Array.isArray(mask) && this.compiledMasks.every(function (m, mi) {\r\n          var _mask$mi;\r\n\r\n          return m.maskEquals((_mask$mi = mask[mi]) === null || _mask$mi === void 0 ? void 0 : _mask$mi.mask);\r\n        });\r\n      }\r\n      /**\r\n        @override\r\n      */\r\n\r\n    }, {\r\n      key: \"typedValueEquals\",\r\n      value: function typedValueEquals(value) {\r\n        var _this$currentMask9;\r\n\r\n        return Boolean((_this$currentMask9 = this.currentMask) === null || _this$currentMask9 === void 0 ? void 0 : _this$currentMask9.typedValueEquals(value));\r\n      }\r\n    }]);\r\n\r\n    return MaskedDynamic;\r\n  }(Masked);\r\n  MaskedDynamic.DEFAULTS = {\r\n    dispatch: function dispatch(appended, masked, flags) {\r\n      if (!masked.compiledMasks.length) return;\r\n      var inputValue = masked.rawInputValue; // simulate input\r\n\r\n      var inputs = masked.compiledMasks.map(function (m, index) {\r\n        m.reset();\r\n        m.append(inputValue, {\r\n          raw: true\r\n        });\r\n        m.append(appended, masked.currentMaskFlags(flags));\r\n        var weight = m.rawInputValue.length;\r\n        return {\r\n          weight: weight,\r\n          index: index\r\n        };\r\n      }); // pop masks with longer values first\r\n\r\n      inputs.sort(function (i1, i2) {\r\n        return i2.weight - i1.weight;\r\n      });\r\n      return masked.compiledMasks[inputs[0].index];\r\n    }\r\n  };\r\n  IMask.MaskedDynamic = MaskedDynamic;\r\n\r\n  /** Mask pipe source and destination types */\r\n\r\n  var PIPE_TYPE = {\r\n    MASKED: 'value',\r\n    UNMASKED: 'unmaskedValue',\r\n    TYPED: 'typedValue'\r\n  };\r\n  /** Creates new pipe function depending on mask type, source and destination options */\r\n\r\n  function createPipe(mask) {\r\n    var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : PIPE_TYPE.MASKED;\r\n    var to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : PIPE_TYPE.MASKED;\r\n    var masked = createMask(mask);\r\n    return function (value) {\r\n      return masked.runIsolated(function (m) {\r\n        m[from] = value;\r\n        return m[to];\r\n      });\r\n    };\r\n  }\r\n  /** Pipes value through mask depending on mask type, source and destination options */\r\n\r\n  function pipe(value) {\r\n    for (var _len = arguments.length, pipeArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n      pipeArgs[_key - 1] = arguments[_key];\r\n    }\r\n\r\n    return createPipe.apply(void 0, pipeArgs)(value);\r\n  }\r\n  IMask.PIPE_TYPE = PIPE_TYPE;\r\n  IMask.createPipe = createPipe;\r\n  IMask.pipe = pipe;\r\n\r\n  try {\r\n    globalThis.IMask = IMask;\r\n  } catch (e) {}\r\n\r\n  exports.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\r\n  exports.HTMLMaskElement = HTMLMaskElement;\r\n  exports.InputMask = InputMask;\r\n  exports.MaskElement = MaskElement;\r\n  exports.Masked = Masked;\r\n  exports.MaskedDate = MaskedDate;\r\n  exports.MaskedDynamic = MaskedDynamic;\r\n  exports.MaskedEnum = MaskedEnum;\r\n  exports.MaskedFunction = MaskedFunction;\r\n  exports.MaskedNumber = MaskedNumber;\r\n  exports.MaskedPattern = MaskedPattern;\r\n  exports.MaskedRange = MaskedRange;\r\n  exports.MaskedRegExp = MaskedRegExp;\r\n  exports.PIPE_TYPE = PIPE_TYPE;\r\n  exports.createMask = createMask;\r\n  exports.createPipe = createPipe;\r\n  exports[\"default\"] = IMask;\r\n  exports.pipe = pipe;\r\n\r\n  Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n}));\r\n//# sourceMappingURL=imask.js.map\r\n","/*****\r\n* rateYo - v2.3.2\r\n* http://prrashi.github.io/rateyo/\r\n* Copyright (c) 2014 Prashanth Pamidi; Licensed MIT\r\n*****/\r\n\r\n;(function ($) {\r\n  \"use strict\";\r\n\r\n  // The basic svg string required to generate stars\r\n  var BASICSTAR = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\"+\r\n                  \"<svg version=\\\"1.1\\\"\"+\r\n                        \"xmlns=\\\"http://www.w3.org/2000/svg\\\"\"+\r\n                        \"viewBox=\\\"0 12.705 512 486.59\\\"\"+\r\n                        \"x=\\\"0px\\\" y=\\\"0px\\\"\"+\r\n                        \"xml:space=\\\"preserve\\\">\"+\r\n                    \"<polygon \"+\r\n                              \"points=\\\"256.814,12.705 317.205,198.566\"+\r\n                                      \" 512.631,198.566 354.529,313.435 \"+\r\n                                      \"414.918,499.295 256.814,384.427 \"+\r\n                                      \"98.713,499.295 159.102,313.435 \"+\r\n                                      \"1,198.566 196.426,198.566 \\\"/>\"+\r\n                  \"</svg>\";\r\n\r\n  // The Default values of different options available in the Plugin\r\n  var DEFAULTS = {\r\n\r\n    starWidth : \"32px\",\r\n    normalFill: \"gray\",\r\n    ratedFill : \"#f39c12\",\r\n    numStars  : 5,\r\n    maxValue  : 5,\r\n    precision : 1,\r\n    rating    : 0,\r\n    fullStar  : false,\r\n    halfStar  : false,\r\n    readOnly  : false,\r\n    spacing   : \"0px\",\r\n    rtl       : false,\r\n    multiColor: null,\r\n    onInit    : null,\r\n    onChange  : null,\r\n    onSet     : null,\r\n    starSvg   : null\r\n  };\r\n\r\n  //Default colors for multi-color rating\r\n  var MULTICOLOR_OPTIONS = {\r\n\r\n    startColor: \"#c0392b\", //red\r\n    endColor  : \"#f1c40f\"  //yellow\r\n  };\r\n\r\n  // http://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\r\n  function isMobileBrowser () {\r\n    var check = false;\r\n    /* jshint ignore:start */\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\r\n    /* jshint ignore:end */\r\n    return check;\r\n  }\r\n\r\n  function checkPrecision (value, minValue, maxValue) {\r\n\r\n    /*\r\n     * This function removes the unnecessary precision, at Min and Max Values\r\n     */\r\n\r\n    // Its like comparing 0.0 with 0, which is true\r\n    if (value === minValue) {\r\n\r\n      value = minValue;\r\n    }\r\n    else if(value === maxValue) {\r\n\r\n      value = maxValue;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function checkBounds (value, minValue, maxValue) {\r\n\r\n    /*\r\n     * Check if the value is between min and max values, if not, throw an error\r\n     */\r\n\r\n    var isValid = value >= minValue && value <= maxValue;\r\n\r\n    if(!isValid){\r\n\r\n        throw Error(\"Invalid Rating, expected value between \"+ minValue +\r\n                    \" and \" + maxValue);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function isDefined(value) {\r\n\r\n    // Better way to check if a variable is defined or not\r\n    return typeof value !== \"undefined\";\r\n  }\r\n\r\n  // Regex to match Colors in Hex Format like #FF00FF\r\n  var hexRegex = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i;\r\n\r\n  var hexToRGB = function (hex) {\r\n\r\n    /*\r\n     * Extracts and returns the Red, Blue, Green Channel values,\r\n     * in the form of decimals\r\n     */\r\n\r\n    if (!hexRegex.test(hex)) {\r\n\r\n      return null;\r\n    }\r\n\r\n    var hexValues = hexRegex.exec(hex),\r\n        r = parseInt(hexValues[1], 16),\r\n        g = parseInt(hexValues[2], 16),\r\n        b = parseInt(hexValues[3], 16);\r\n\r\n    return {r:r, g:g, b:b};\r\n  };\r\n\r\n  function getChannelValue(startVal, endVal, percent) {\r\n\r\n    /*\r\n     * Returns a value between `startVal` and `endVal` based on the percent\r\n     */\r\n\r\n    var newVal = (endVal - startVal)*(percent/100);\r\n\r\n    newVal = Math.round(startVal + newVal).toString(16);\r\n\r\n    if (newVal.length === 1) {\r\n\r\n        newVal = \"0\" + newVal;\r\n    }\r\n\r\n    return newVal;\r\n  }\r\n\r\n  function getColor (startColor, endColor, percent) {\r\n\r\n    /*\r\n     * Given the percentage( `percent` ) of `endColor` to be mixed\r\n     * with the `startColor`, returns the mixed color.\r\n     * Colors should be only in Hex Format\r\n     */\r\n\r\n    if (!startColor || !endColor) {\r\n\r\n      return null;\r\n    }\r\n\r\n    percent = isDefined(percent)? percent : 0;\r\n\r\n    startColor = hexToRGB(startColor);\r\n    endColor = hexToRGB(endColor);\r\n\r\n    var r = getChannelValue(startColor.r, endColor.r, percent),\r\n        b = getChannelValue(startColor.b, endColor.b, percent),\r\n        g = getChannelValue(startColor.g, endColor.g, percent);\r\n\r\n    return \"#\" + r + g + b;\r\n  }\r\n\r\n  function RateYo ($node, options) {\r\n\r\n    /*\r\n     * The Contructor, whose instances are used by plugin itself\r\n     */\r\n\r\n    // Storing the HTML element as a property, for future access\r\n    this.node = $node.get(0);\r\n\r\n    var that = this;\r\n\r\n    // Remove any stuff that is present inside the container, and add the plugin class\r\n    $node.empty().addClass(\"jq-ry-container\");\r\n\r\n    /*\r\n     * Basically the plugin displays the rating using two rows of stars lying one above\r\n     * the other, the row that is on the top represents the actual rating, and the one\r\n     * behind acts just like a background.\r\n     *\r\n     * `$groupWrapper`: is an element that wraps both the rows\r\n     * `$normalGroup`: is the container for row of stars thats behind and\r\n     *                 acts as background\r\n     * `$ratedGroup`: is the container for row of stars that display the actual rating.\r\n     *\r\n     * The rating is displayed by adjusting the width of `$ratedGroup`\r\n     */\r\n    var $groupWrapper = $(\"<div/>\").addClass(\"jq-ry-group-wrapper\")\r\n                                   .appendTo($node);\r\n\r\n    var $normalGroup = $(\"<div/>\").addClass(\"jq-ry-normal-group\")\r\n                                  .addClass(\"jq-ry-group\")\r\n                                  .appendTo($groupWrapper);\r\n\r\n    var $ratedGroup = $(\"<div/>\").addClass(\"jq-ry-rated-group\")\r\n                                 .addClass(\"jq-ry-group\")\r\n                                 .appendTo($groupWrapper);\r\n\r\n    /*\r\n     * Variable `step`: store the value of the rating for each star\r\n     *                  eg: if `maxValue` is 5 and `numStars` is 5, value of each star\r\n     *                      is 1.\r\n     * Variable `starWidth`: stores the decimal value of width of star in units of px\r\n     * Variable `percentOfStar`: stores the percentage of width each star takes w.r.t\r\n     *                           the container\r\n     * Variable `spacing`: stores the decimal value of the spacing between stars\r\n     *                     in the units of px\r\n     * Variable `percentOfSpacing`: stores the percentage of width of the spacing\r\n     *                              between stars w.r.t the container\r\n     */\r\n    var step, starWidth, percentOfStar, spacing,\r\n        percentOfSpacing, containerWidth, minValue = 0;\r\n\r\n    /*\r\n     * `currentRating` contains rating that is being displayed at the latest point of\r\n     * time.\r\n     *\r\n     * When ever you hover over the plugin UI, the rating value changes\r\n     * according to the place where you point the cursor, currentRating contains\r\n     * the current value of rating that is being shown in the UI\r\n     */\r\n    var currentRating = options.rating;\r\n\r\n    // A flag to store if the plugin is already being displayed in the UI\r\n    var isInitialized = false;\r\n\r\n    function showRating (ratingVal) {\r\n\r\n      /*\r\n       * The function is responsible for displaying the rating by changing\r\n       * the width of `$ratedGroup`\r\n       */\r\n\r\n      if (!isDefined(ratingVal)) {\r\n\r\n        ratingVal = options.rating;\r\n      }\r\n\r\n      // Storing the value that is being shown in `currentRating`.\r\n      currentRating = ratingVal;\r\n\r\n      var numStarsToShow = ratingVal/step;\r\n\r\n      // calculating the percentage of width of $ratedGroup with respect to its parent\r\n      var percent = numStarsToShow*percentOfStar;\r\n\r\n      if (numStarsToShow > 1) {\r\n\r\n        // adding the percentage of space that is taken by the gap the stars\r\n        percent += (Math.ceil(numStarsToShow) - 1)*percentOfSpacing;\r\n      }\r\n\r\n      setRatedFill(options.ratedFill);\r\n\r\n      percent = options.rtl ? 100 - percent : percent;\r\n\r\n      if (percent < 0) {\r\n\r\n        percent = 0;\r\n      } else if (percent > 100) {\r\n\r\n        percent = 100;\r\n      }\r\n\r\n      $ratedGroup.css(\"width\", percent + \"%\");\r\n    }\r\n\r\n    function setContainerWidth () {\r\n\r\n      /*\r\n       * Set the width of the `this.node` based on the width of each star and\r\n       * the space between them\r\n       */\r\n\r\n      containerWidth = starWidth*options.numStars + spacing*(options.numStars - 1);\r\n\r\n      percentOfStar = (starWidth/containerWidth)*100;\r\n\r\n      percentOfSpacing = (spacing/containerWidth)*100;\r\n\r\n      $node.width(containerWidth);\r\n\r\n      showRating();\r\n    }\r\n\r\n    function setStarWidth (newWidth) {\r\n\r\n      /*\r\n       * Set the width and height of each SVG star, called whenever one changes the\r\n       * `starWidth` option\r\n       */\r\n\r\n      // The width and height of the star should be the same\r\n      var starHeight = options.starWidth = newWidth;\r\n\r\n      starWidth = window.parseFloat(options.starWidth.replace(\"px\", \"\"));\r\n\r\n      $normalGroup.find(\"svg\")\r\n                  .attr({width : options.starWidth,\r\n                         height: starHeight});\r\n\r\n      $ratedGroup.find(\"svg\")\r\n                 .attr({width : options.starWidth,\r\n                        height: starHeight});\r\n\r\n      setContainerWidth();\r\n\r\n      return $node;\r\n    }\r\n\r\n    function setSpacing (newSpacing) {\r\n\r\n      /*\r\n       * Set spacing between the SVG stars, called whenever one changes\r\n       * the `spacing` option\r\n       */\r\n\r\n      options.spacing = newSpacing;\r\n\r\n      spacing = parseFloat(options.spacing.replace(\"px\", \"\"));\r\n\r\n      $normalGroup.find(\"svg:not(:first-child)\")\r\n                  .css({\"margin-left\": newSpacing});\r\n\r\n      $ratedGroup.find(\"svg:not(:first-child)\")\r\n                 .css({\"margin-left\": newSpacing});\r\n\r\n      setContainerWidth();\r\n\r\n      return $node;\r\n    }\r\n\r\n    function setNormalFill (newFill) {\r\n\r\n      /*\r\n       * Set the background fill of the Stars, called whenever one changes the\r\n       * `normalFill` option\r\n       */\r\n\r\n      options.normalFill = newFill;\r\n\r\n      var $svgs = (options.rtl ? $ratedGroup : $normalGroup).find(\"svg\");\r\n\r\n      $svgs.attr({fill: options.normalFill});\r\n\r\n      return $node;\r\n    }\r\n\r\n    /*\r\n     * Store the recent `ratedFill` option in a variable\r\n     * so that if multiColor is unset, we can use the perviously set `ratedFill`\r\n     * from this variable\r\n     */\r\n    var ratedFill = options.ratedFill;\r\n\r\n    function setRatedFill (newFill) {\r\n\r\n      /*\r\n       * Set ratedFill of the stars, called when one changes the `ratedFill` option\r\n       */\r\n\r\n      /*\r\n       * If `multiColor` option is set, `newFill` variable is dynamically set\r\n       * based on the rating, what ever set as parameter will be discarded\r\n       */\r\n      if (options.multiColor) {\r\n\r\n        var ratingDiff = currentRating - minValue,\r\n            percentCovered = (ratingDiff/options.maxValue)*100;\r\n\r\n        var colorOpts  = options.multiColor || {},\r\n            startColor = colorOpts.startColor || MULTICOLOR_OPTIONS.startColor,\r\n            endColor   = colorOpts.endColor || MULTICOLOR_OPTIONS.endColor;\r\n\r\n        newFill = getColor(startColor, endColor, percentCovered);\r\n      } else {\r\n\r\n        ratedFill = newFill;\r\n      }\r\n\r\n      options.ratedFill = newFill;\r\n\r\n      var $svgs = (options.rtl ? $normalGroup : $ratedGroup).find(\"svg\");\r\n\r\n      $svgs.attr({fill: options.ratedFill});\r\n\r\n      return $node;\r\n    }\r\n\r\n    function setRtl (newValue) {\r\n\r\n      newValue = !!newValue;\r\n\r\n      options.rtl = newValue;\r\n\r\n      setNormalFill(options.normalFill);\r\n      showRating();\r\n    }\r\n\r\n    function setMultiColor (colorOptions) {\r\n\r\n      /*\r\n       * called whenever one changes the `multiColor` option\r\n       */\r\n\r\n      options.multiColor = colorOptions;\r\n\r\n      // set the recently set `ratedFill` option, if multiColor Options are unset\r\n      setRatedFill(colorOptions ? colorOptions : ratedFill);\r\n    }\r\n\r\n    function setNumStars (newValue) {\r\n\r\n      /*\r\n       * Set the number of stars to use to display the rating, called whenever one\r\n       * changes the `numStars` option\r\n       */\r\n\r\n      options.numStars = newValue;\r\n\r\n      step = options.maxValue/options.numStars;\r\n\r\n      $normalGroup.empty();\r\n      $ratedGroup.empty();\r\n\r\n      for (var i=0; i<options.numStars; i++) {\r\n\r\n        $normalGroup.append($(options.starSvg || BASICSTAR));\r\n        $ratedGroup.append($(options.starSvg || BASICSTAR));\r\n      }\r\n\r\n      setStarWidth(options.starWidth);\r\n      setNormalFill(options.normalFill);\r\n      setSpacing(options.spacing);\r\n\r\n      showRating();\r\n\r\n      return $node;\r\n    }\r\n\r\n    function setMaxValue (newValue) {\r\n\r\n      /*\r\n       * set the Maximum Value of rating to be allowed, called whenever\r\n       * one changes the `maxValue` option\r\n       */\r\n\r\n      options.maxValue = newValue;\r\n\r\n      step = options.maxValue/options.numStars;\r\n\r\n      if (options.rating > newValue) {\r\n\r\n        setRating(newValue);\r\n      }\r\n\r\n      showRating();\r\n\r\n      return $node;\r\n    }\r\n\r\n    function setPrecision (newValue) {\r\n\r\n      /*\r\n       * Set the precision of the rating value, called if one changes the\r\n       * `precision` option\r\n       */\r\n\r\n      options.precision = newValue;\r\n\r\n      setRating(options.rating);\r\n\r\n      return $node;\r\n    }\r\n\r\n    function setHalfStar (newValue) {\r\n\r\n      /*\r\n       * This function will be called if one changes the `halfStar` option\r\n       */\r\n\r\n      options.halfStar = newValue;\r\n\r\n      return $node;\r\n    }\r\n\r\n    function setFullStar (newValue) {\r\n\r\n      /*\r\n       * This function will be called if one changes the `fullStar` option\r\n       */\r\n\r\n      options.fullStar = newValue;\r\n\r\n      return $node;\r\n    }\r\n\r\n    function round (value) {\r\n\r\n      /*\r\n       * Rounds the value of rating if `halfStar` or `fullStar` options are chosen\r\n       */\r\n\r\n      var remainder = value%step,\r\n          halfStep = step/2,\r\n          isHalfStar = options.halfStar,\r\n          isFullStar = options.fullStar;\r\n\r\n      if (!isFullStar && !isHalfStar) {\r\n\r\n        return value;\r\n      }\r\n\r\n      if (isFullStar || (isHalfStar && remainder > halfStep)) {\r\n\r\n        value += step - remainder;\r\n      } else {\r\n\r\n        value = value - remainder;\r\n\r\n        if (remainder > 0) {\r\n\r\n          value += halfStep;\r\n        }\r\n      }\r\n\r\n      return value;\r\n    }\r\n\r\n    function calculateRating (e) {\r\n\r\n      /*\r\n       * Calculates and returns the rating based on the position of cursor w.r.t the\r\n       * plugin container\r\n       */\r\n\r\n      var position = $normalGroup.offset(),\r\n          nodeStartX = position.left,\r\n          nodeEndX = nodeStartX + $normalGroup.width();\r\n\r\n      var maxValue = options.maxValue;\r\n\r\n      // The x-coordinate(position) of the mouse pointer w.r.t page\r\n      var pageX = e.pageX;\r\n\r\n      var calculatedRating = 0;\r\n\r\n      // If the mouse pointer is to the left of the container\r\n      if(pageX < nodeStartX) {\r\n\r\n        calculatedRating = minValue;\r\n      }else if (pageX > nodeEndX) { // If the mouse pointer is right of the container\r\n\r\n        calculatedRating = maxValue;\r\n      }else { // If the mouse pointer is inside the continer\r\n\r\n        /*\r\n         * The fraction of width covered by the pointer w.r.t to the total width\r\n         * of the container.\r\n         */\r\n        var calcPrcnt = ((pageX - nodeStartX)/(nodeEndX - nodeStartX));\r\n\r\n        if (spacing > 0) {\r\n\r\n          /*\r\n           * If there is spacing between stars, take the percentage of width covered\r\n           * and subtract the percentage of width covered by stars and spacing, to find\r\n           * how many stars are covered, the number of stars covered is the rating\r\n           *\r\n           * TODO: I strongly feel that this logic can be improved!, Please help!\r\n           */\r\n          calcPrcnt *= 100;\r\n\r\n          var remPrcnt = calcPrcnt;\r\n\r\n          while (remPrcnt > 0) {\r\n\r\n            if (remPrcnt > percentOfStar) {\r\n\r\n              calculatedRating += step;\r\n              remPrcnt -= (percentOfStar + percentOfSpacing);\r\n            } else {\r\n\r\n              calculatedRating += remPrcnt/percentOfStar*step;\r\n              remPrcnt = 0;\r\n            }\r\n          }\r\n        } else {\r\n\r\n          /*\r\n           * If there is not spacing between stars, the fraction of width covered per\r\n           * `maxValue` is the rating\r\n           */\r\n          calculatedRating = calcPrcnt * (options.maxValue);\r\n        }\r\n\r\n        // Round the rating if `halfStar` or `fullStar` options are chosen\r\n        calculatedRating = round(calculatedRating);\r\n      }\r\n\r\n      if (options.rtl) {\r\n\r\n        calculatedRating = maxValue - calculatedRating;\r\n      }\r\n\r\n      return parseFloat(calculatedRating);\r\n    }\r\n\r\n    function setReadOnly (newValue) {\r\n\r\n      /*\r\n       * UnBinds mouse event handlers, called when whenever one changes the\r\n       * `readOnly` option\r\n       */\r\n\r\n      options.readOnly = newValue;\r\n\r\n      $node.attr(\"readonly\", true);\r\n\r\n      unbindEvents();\r\n\r\n      if (!newValue) {\r\n\r\n        $node.removeAttr(\"readonly\");\r\n\r\n        bindEvents();\r\n      }\r\n\r\n      return $node;\r\n    }\r\n\r\n    function setRating (newValue) {\r\n\r\n      /*\r\n       * Sets the rating of the Plugin, Called when option `rating` is changed\r\n       * or, when `rating` method is called\r\n       */\r\n\r\n      var rating = newValue;\r\n\r\n      var maxValue = options.maxValue;\r\n\r\n      if (typeof rating === \"string\") {\r\n\r\n        // If rating is given in percentage, maxValue should be 100\r\n        if (rating[rating.length - 1] === \"%\") {\r\n\r\n          rating = rating.substr(0, rating.length - 1);\r\n          maxValue = 100;\r\n\r\n          setMaxValue(maxValue);\r\n        }\r\n\r\n        rating = parseFloat(rating);\r\n      }\r\n\r\n      checkBounds(rating, minValue, maxValue);\r\n\r\n      rating = parseFloat(rating.toFixed(options.precision));\r\n\r\n      checkPrecision(parseFloat(rating), minValue, maxValue);\r\n\r\n      options.rating = rating;\r\n\r\n      showRating();\r\n\r\n      if (isInitialized) {\r\n\r\n        $node.trigger(\"rateyo.set\", {rating: rating});\r\n      }\r\n\r\n      return $node;\r\n    }\r\n\r\n    function setOnInit (method) {\r\n\r\n      /*\r\n       * set what method to be called on Initialization\r\n       */\r\n\r\n      options.onInit = method;\r\n\r\n      return $node;\r\n    }\r\n\r\n    function setOnSet (method) {\r\n\r\n      /*\r\n       * set what method to be called when rating is set\r\n       */\r\n\r\n      options.onSet = method;\r\n\r\n      return $node;\r\n    }\r\n\r\n    function setOnChange (method) {\r\n\r\n      /*\r\n       * set what method to be called rating in the UI is changed\r\n       */\r\n\r\n      options.onChange = method;\r\n\r\n      return $node;\r\n    }\r\n\r\n    this.rating = function (newValue) {\r\n\r\n      /*\r\n       * rating getter/setter\r\n       */\r\n\r\n      if (!isDefined(newValue)) {\r\n\r\n        return options.rating;\r\n      }\r\n\r\n      setRating(newValue);\r\n\r\n      return $node;\r\n    };\r\n\r\n    this.destroy = function () {\r\n\r\n      /*\r\n       * Removes the Rating UI by clearing the content, and removing the custom classes\r\n       */\r\n\r\n      if (!options.readOnly) {\r\n\r\n        unbindEvents();\r\n      }\r\n\r\n      RateYo.prototype.collection = deleteInstance($node.get(0),\r\n                                                   this.collection);\r\n\r\n      $node.removeClass(\"jq-ry-container\").children().remove();\r\n\r\n      return $node;\r\n    };\r\n\r\n    this.method = function (methodName) {\r\n\r\n      /*\r\n       * Method to call the methods of RateYo Instance\r\n       */\r\n\r\n      if (!methodName) {\r\n\r\n        throw Error(\"Method name not specified!\");\r\n      }\r\n\r\n      if (!isDefined(this[methodName])) {\r\n\r\n        throw Error(\"Method \" + methodName + \" doesn't exist!\");\r\n      }\r\n\r\n      var args = Array.prototype.slice.apply(arguments, []),\r\n          params = args.slice(1),\r\n          method = this[methodName];\r\n\r\n      return method.apply(this, params);\r\n    };\r\n\r\n    this.option = function (optionName, param) {\r\n\r\n      /*\r\n       * Method to get/set Options\r\n       */\r\n\r\n      if (!isDefined(optionName)) {\r\n\r\n        return options;\r\n      }\r\n\r\n      var method;\r\n\r\n      switch (optionName) {\r\n\r\n        case \"starWidth\":\r\n\r\n          method = setStarWidth;\r\n          break;\r\n        case \"numStars\":\r\n\r\n          method = setNumStars;\r\n          break;\r\n        case \"normalFill\":\r\n\r\n          method = setNormalFill;\r\n          break;\r\n        case \"ratedFill\":\r\n\r\n          method = setRatedFill;\r\n          break;\r\n        case \"multiColor\":\r\n\r\n          method = setMultiColor;\r\n          break;\r\n        case \"maxValue\":\r\n\r\n          method = setMaxValue;\r\n          break;\r\n        case \"precision\":\r\n\r\n          method = setPrecision;\r\n          break;\r\n        case \"rating\":\r\n\r\n          method = setRating;\r\n          break;\r\n        case \"halfStar\":\r\n\r\n          method = setHalfStar;\r\n          break;\r\n        case \"fullStar\":\r\n\r\n          method = setFullStar;\r\n          break;\r\n        case \"readOnly\":\r\n\r\n          method = setReadOnly;\r\n          break;\r\n        case \"spacing\":\r\n\r\n          method = setSpacing;\r\n          break;\r\n        case \"rtl\":\r\n\r\n          method = setRtl;\r\n          break;\r\n        case \"onInit\":\r\n\r\n          method = setOnInit;\r\n          break;\r\n        case \"onSet\":\r\n\r\n          method = setOnSet;\r\n          break;\r\n        case \"onChange\":\r\n\r\n          method = setOnChange;\r\n          break;\r\n        default:\r\n\r\n          throw Error(\"No such option as \" + optionName);\r\n      }\r\n\r\n      return isDefined(param) ? method(param) : options[optionName];\r\n    };\r\n\r\n    function onMouseEnter (e) {\r\n\r\n      /*\r\n       * If the Mouse Pointer is inside the container, calculate and show the rating\r\n       * in UI\r\n       */\r\n\r\n      var rating = calculateRating(e).toFixed(options.precision);\r\n\r\n      var maxValue = options.maxValue;\r\n\r\n      rating = checkPrecision(parseFloat(rating), minValue, maxValue);\r\n\r\n      showRating(rating);\r\n\r\n      $node.trigger(\"rateyo.change\", {rating: rating});\r\n    }\r\n\r\n    function onMouseLeave () {\r\n      if (isMobileBrowser()) {\r\n        return;\r\n      }\r\n\r\n      /*\r\n       * If mouse leaves, revert the rating in UI to previously set rating,\r\n       * when empty value is passed to showRating, it will take the previously set\r\n       * rating\r\n       */\r\n\r\n      showRating();\r\n\r\n      $node.trigger(\"rateyo.change\", {rating: options.rating});\r\n    }\r\n\r\n    function onMouseClick (e) {\r\n\r\n      /*\r\n       * On clicking the mouse inside the container, calculate and set the rating\r\n       */\r\n\r\n      var resultantRating = calculateRating(e).toFixed(options.precision);\r\n      resultantRating = parseFloat(resultantRating);\r\n\r\n      that.rating(resultantRating);\r\n    }\r\n\r\n    function onInit(e, data) {\r\n\r\n      if(options.onInit && typeof options.onInit === \"function\") {\r\n\r\n        /* jshint validthis:true */\r\n        options.onInit.apply(this, [data.rating, that]);\r\n      }\r\n    }\r\n\r\n    function onChange (e, data) {\r\n\r\n      if(options.onChange && typeof options.onChange === \"function\") {\r\n\r\n        /* jshint validthis:true */\r\n        options.onChange.apply(this, [data.rating, that]);\r\n      }\r\n    }\r\n\r\n    function onSet (e, data) {\r\n\r\n      if(options.onSet && typeof options.onSet === \"function\") {\r\n\r\n        /* jshint validthis:true */\r\n        options.onSet.apply(this, [data.rating, that]);\r\n      }\r\n    }\r\n\r\n    function bindEvents () {\r\n\r\n      $node.on(\"mousemove\", onMouseEnter)\r\n           .on(\"mouseenter\", onMouseEnter)\r\n           .on(\"mouseleave\", onMouseLeave)\r\n           .on(\"click\", onMouseClick)\r\n           .on(\"rateyo.init\", onInit)\r\n           .on(\"rateyo.change\", onChange)\r\n           .on(\"rateyo.set\", onSet);\r\n    }\r\n\r\n    function unbindEvents () {\r\n\r\n      $node.off(\"mousemove\", onMouseEnter)\r\n           .off(\"mouseenter\", onMouseEnter)\r\n           .off(\"mouseleave\", onMouseLeave)\r\n           .off(\"click\", onMouseClick)\r\n           .off(\"rateyo.init\", onInit)\r\n           .off(\"rateyo.change\", onChange)\r\n           .off(\"rateyo.set\", onSet);\r\n    }\r\n\r\n    setNumStars(options.numStars);\r\n    setReadOnly(options.readOnly);\r\n\r\n    if (options.rtl) {\r\n\r\n      setRtl(options.rtl);\r\n    }\r\n\r\n    this.collection.push(this);\r\n    this.rating(options.rating, true);\r\n\r\n    isInitialized = true;\r\n    $node.trigger(\"rateyo.init\", {rating: options.rating});\r\n  }\r\n\r\n  RateYo.prototype.collection = [];\r\n\r\n  function getInstance (node, collection) {\r\n\r\n    /*\r\n     * Given a HTML element (node) and a collection of RateYo instances,\r\n     * this function will search through the collection and return the matched\r\n     * instance having the node\r\n     */\r\n\r\n    var instance;\r\n\r\n    $.each(collection, function () {\r\n\r\n      if(node === this.node){\r\n\r\n        instance = this;\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return instance;\r\n  }\r\n\r\n  function deleteInstance (node, collection) {\r\n\r\n    /*\r\n     * Given a HTML element (node) and a collection of RateYo instances,\r\n     * this function will search through the collection and delete the\r\n     * instance having the node, and return the modified collection\r\n     */\r\n\r\n    $.each(collection, function (index) {\r\n\r\n      if (node === this.node) {\r\n\r\n        var firstPart = collection.slice(0, index),\r\n            secondPart = collection.slice(index+1, collection.length);\r\n\r\n        collection = firstPart.concat(secondPart);\r\n\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return collection;\r\n  }\r\n\r\n  function _rateYo (options) {\r\n\r\n    var rateYoInstances = RateYo.prototype.collection;\r\n\r\n    /* jshint validthis:true */\r\n    var $nodes = $(this);\r\n\r\n    if($nodes.length === 0) {\r\n\r\n      return $nodes;\r\n    }\r\n\r\n    var args = Array.prototype.slice.apply(arguments, []);\r\n\r\n    if (args.length === 0) {\r\n\r\n      //If args length is 0, Initialize the UI with default settings\r\n      options = args[0] = {};\r\n    }else if (args.length === 1 && typeof args[0] === \"object\") {\r\n\r\n      //If an Object is specified as first argument, it is considered as options\r\n      options = args[0];\r\n    }else if (args.length >= 1 && typeof args[0] === \"string\") {\r\n\r\n      /*\r\n       * if there is only one argument, and if its a string, it is supposed to be a\r\n       * method name, if more than one argument is specified, the remaining arguments\r\n       * except the first argument, will be passed as a params to the specified method\r\n       */\r\n\r\n      var methodName = args[0],\r\n          params = args.slice(1);\r\n\r\n      var result = [];\r\n\r\n      $.each($nodes, function (i, node) {\r\n\r\n        var existingInstance = getInstance(node, rateYoInstances);\r\n\r\n        if(!existingInstance) {\r\n\r\n          throw Error(\"Trying to set options before even initialization\");\r\n        }\r\n\r\n        var method = existingInstance[methodName];\r\n\r\n        if (!method) {\r\n\r\n          throw Error(\"Method \" + methodName + \" does not exist!\");\r\n        }\r\n\r\n        var returnVal = method.apply(existingInstance, params);\r\n\r\n        result.push(returnVal);\r\n      });\r\n\r\n      /*\r\n       * If the plugin in being called on only one jQuery Element, return only the\r\n       * first value, to support chaining.\r\n       */\r\n      result = result.length === 1? result[0]: result;\r\n\r\n      return result;\r\n    }else {\r\n\r\n      throw Error(\"Invalid Arguments\");\r\n    }\r\n\r\n    /*\r\n     * if only options are passed, extend default options, and if the plugin is not\r\n     * initialized on a particular jQuery element, initalize RateYo on it\r\n     */\r\n    options = $.extend({}, DEFAULTS, options);\r\n\r\n    return $.each($nodes, function () {\r\n\r\n               var existingInstance = getInstance(this, rateYoInstances);\r\n\r\n               if (existingInstance) {\r\n\r\n                 return existingInstance;\r\n               }\r\n\r\n               var $node = $(this),\r\n                   dataAttrs = {},\r\n                   optionsCopy = $.extend({}, options);\r\n\r\n               $.each($node.data(), function (key, value) {\r\n\r\n                 if (key.indexOf(\"rateyo\") !== 0) {\r\n\r\n                   return;\r\n                 }\r\n\r\n                 var optionName = key.replace(/^rateyo/, \"\");\r\n\r\n                 optionName = optionName[0].toLowerCase() + optionName.slice(1);\r\n\r\n                 dataAttrs[optionName] = value;\r\n\r\n                 delete optionsCopy[optionName];\r\n               });\r\n\r\n               return new RateYo($(this), $.extend({}, dataAttrs, optionsCopy));\r\n           });\r\n  }\r\n\r\n  function rateYo () {\r\n\r\n    /* jshint validthis:true */\r\n    return _rateYo.apply(this, Array.prototype.slice.apply(arguments, []));\r\n  }\r\n\r\n  window.RateYo = RateYo;\r\n  $.fn.rateYo = rateYo;\r\n\r\n}(window.jQuery));\r\n","(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.noUiSlider = {}));\r\n})(this, (function (exports) { 'use strict';\r\n\r\n    exports.PipsMode = void 0;\r\n    (function (PipsMode) {\r\n        PipsMode[\"Range\"] = \"range\";\r\n        PipsMode[\"Steps\"] = \"steps\";\r\n        PipsMode[\"Positions\"] = \"positions\";\r\n        PipsMode[\"Count\"] = \"count\";\r\n        PipsMode[\"Values\"] = \"values\";\r\n    })(exports.PipsMode || (exports.PipsMode = {}));\r\n    exports.PipsType = void 0;\r\n    (function (PipsType) {\r\n        PipsType[PipsType[\"None\"] = -1] = \"None\";\r\n        PipsType[PipsType[\"NoValue\"] = 0] = \"NoValue\";\r\n        PipsType[PipsType[\"LargeValue\"] = 1] = \"LargeValue\";\r\n        PipsType[PipsType[\"SmallValue\"] = 2] = \"SmallValue\";\r\n    })(exports.PipsType || (exports.PipsType = {}));\r\n    //region Helper Methods\r\n    function isValidFormatter(entry) {\r\n        return isValidPartialFormatter(entry) && typeof entry.from === \"function\";\r\n    }\r\n    function isValidPartialFormatter(entry) {\r\n        // partial formatters only need a to function and not a from function\r\n        return typeof entry === \"object\" && typeof entry.to === \"function\";\r\n    }\r\n    function removeElement(el) {\r\n        el.parentElement.removeChild(el);\r\n    }\r\n    function isSet(value) {\r\n        return value !== null && value !== undefined;\r\n    }\r\n    // Bindable version\r\n    function preventDefault(e) {\r\n        e.preventDefault();\r\n    }\r\n    // Removes duplicates from an array.\r\n    function unique(array) {\r\n        return array.filter(function (a) {\r\n            return !this[a] ? (this[a] = true) : false;\r\n        }, {});\r\n    }\r\n    // Round a value to the closest 'to'.\r\n    function closest(value, to) {\r\n        return Math.round(value / to) * to;\r\n    }\r\n    // Current position of an element relative to the document.\r\n    function offset(elem, orientation) {\r\n        var rect = elem.getBoundingClientRect();\r\n        var doc = elem.ownerDocument;\r\n        var docElem = doc.documentElement;\r\n        var pageOffset = getPageOffset(doc);\r\n        // getBoundingClientRect contains left scroll in Chrome on Android.\r\n        // I haven't found a feature detection that proves this. Worst case\r\n        // scenario on mis-match: the 'tap' feature on horizontal sliders breaks.\r\n        if (/webkit.*Chrome.*Mobile/i.test(navigator.userAgent)) {\r\n            pageOffset.x = 0;\r\n        }\r\n        return orientation ? rect.top + pageOffset.y - docElem.clientTop : rect.left + pageOffset.x - docElem.clientLeft;\r\n    }\r\n    // Checks whether a value is numerical.\r\n    function isNumeric(a) {\r\n        return typeof a === \"number\" && !isNaN(a) && isFinite(a);\r\n    }\r\n    // Sets a class and removes it after [duration] ms.\r\n    function addClassFor(element, className, duration) {\r\n        if (duration > 0) {\r\n            addClass(element, className);\r\n            setTimeout(function () {\r\n                removeClass(element, className);\r\n            }, duration);\r\n        }\r\n    }\r\n    // Limits a value to 0 - 100\r\n    function limit(a) {\r\n        return Math.max(Math.min(a, 100), 0);\r\n    }\r\n    // Wraps a variable as an array, if it isn't one yet.\r\n    // Note that an input array is returned by reference!\r\n    function asArray(a) {\r\n        return Array.isArray(a) ? a : [a];\r\n    }\r\n    // Counts decimals\r\n    function countDecimals(numStr) {\r\n        numStr = String(numStr);\r\n        var pieces = numStr.split(\".\");\r\n        return pieces.length > 1 ? pieces[1].length : 0;\r\n    }\r\n    // http://youmightnotneedjquery.com/#add_class\r\n    function addClass(el, className) {\r\n        if (el.classList && !/\\s/.test(className)) {\r\n            el.classList.add(className);\r\n        }\r\n        else {\r\n            el.className += \" \" + className;\r\n        }\r\n    }\r\n    // http://youmightnotneedjquery.com/#remove_class\r\n    function removeClass(el, className) {\r\n        if (el.classList && !/\\s/.test(className)) {\r\n            el.classList.remove(className);\r\n        }\r\n        else {\r\n            el.className = el.className.replace(new RegExp(\"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\", \"gi\"), \" \");\r\n        }\r\n    }\r\n    // https://plainjs.com/javascript/attributes/adding-removing-and-testing-for-classes-9/\r\n    function hasClass(el, className) {\r\n        return el.classList ? el.classList.contains(className) : new RegExp(\"\\\\b\" + className + \"\\\\b\").test(el.className);\r\n    }\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY#Notes\r\n    function getPageOffset(doc) {\r\n        var supportPageOffset = window.pageXOffset !== undefined;\r\n        var isCSS1Compat = (doc.compatMode || \"\") === \"CSS1Compat\";\r\n        var x = supportPageOffset\r\n            ? window.pageXOffset\r\n            : isCSS1Compat\r\n                ? doc.documentElement.scrollLeft\r\n                : doc.body.scrollLeft;\r\n        var y = supportPageOffset\r\n            ? window.pageYOffset\r\n            : isCSS1Compat\r\n                ? doc.documentElement.scrollTop\r\n                : doc.body.scrollTop;\r\n        return {\r\n            x: x,\r\n            y: y,\r\n        };\r\n    }\r\n    // we provide a function to compute constants instead\r\n    // of accessing window.* as soon as the module needs it\r\n    // so that we do not compute anything if not needed\r\n    function getActions() {\r\n        // Determine the events to bind. IE11 implements pointerEvents without\r\n        // a prefix, which breaks compatibility with the IE10 implementation.\r\n        return window.navigator.pointerEnabled\r\n            ? {\r\n                start: \"pointerdown\",\r\n                move: \"pointermove\",\r\n                end: \"pointerup\",\r\n            }\r\n            : window.navigator.msPointerEnabled\r\n                ? {\r\n                    start: \"MSPointerDown\",\r\n                    move: \"MSPointerMove\",\r\n                    end: \"MSPointerUp\",\r\n                }\r\n                : {\r\n                    start: \"mousedown touchstart\",\r\n                    move: \"mousemove touchmove\",\r\n                    end: \"mouseup touchend\",\r\n                };\r\n    }\r\n    // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n    // Issue #785\r\n    function getSupportsPassive() {\r\n        var supportsPassive = false;\r\n        /* eslint-disable */\r\n        try {\r\n            var opts = Object.defineProperty({}, \"passive\", {\r\n                get: function () {\r\n                    supportsPassive = true;\r\n                },\r\n            });\r\n            // @ts-ignore\r\n            window.addEventListener(\"test\", null, opts);\r\n        }\r\n        catch (e) { }\r\n        /* eslint-enable */\r\n        return supportsPassive;\r\n    }\r\n    function getSupportsTouchActionNone() {\r\n        return window.CSS && CSS.supports && CSS.supports(\"touch-action\", \"none\");\r\n    }\r\n    //endregion\r\n    //region Range Calculation\r\n    // Determine the size of a sub-range in relation to a full range.\r\n    function subRangeRatio(pa, pb) {\r\n        return 100 / (pb - pa);\r\n    }\r\n    // (percentage) How many percent is this value of this range?\r\n    function fromPercentage(range, value, startRange) {\r\n        return (value * 100) / (range[startRange + 1] - range[startRange]);\r\n    }\r\n    // (percentage) Where is this value on this range?\r\n    function toPercentage(range, value) {\r\n        return fromPercentage(range, range[0] < 0 ? value + Math.abs(range[0]) : value - range[0], 0);\r\n    }\r\n    // (value) How much is this percentage on this range?\r\n    function isPercentage(range, value) {\r\n        return (value * (range[1] - range[0])) / 100 + range[0];\r\n    }\r\n    function getJ(value, arr) {\r\n        var j = 1;\r\n        while (value >= arr[j]) {\r\n            j += 1;\r\n        }\r\n        return j;\r\n    }\r\n    // (percentage) Input a value, find where, on a scale of 0-100, it applies.\r\n    function toStepping(xVal, xPct, value) {\r\n        if (value >= xVal.slice(-1)[0]) {\r\n            return 100;\r\n        }\r\n        var j = getJ(value, xVal);\r\n        var va = xVal[j - 1];\r\n        var vb = xVal[j];\r\n        var pa = xPct[j - 1];\r\n        var pb = xPct[j];\r\n        return pa + toPercentage([va, vb], value) / subRangeRatio(pa, pb);\r\n    }\r\n    // (value) Input a percentage, find where it is on the specified range.\r\n    function fromStepping(xVal, xPct, value) {\r\n        // There is no range group that fits 100\r\n        if (value >= 100) {\r\n            return xVal.slice(-1)[0];\r\n        }\r\n        var j = getJ(value, xPct);\r\n        var va = xVal[j - 1];\r\n        var vb = xVal[j];\r\n        var pa = xPct[j - 1];\r\n        var pb = xPct[j];\r\n        return isPercentage([va, vb], (value - pa) * subRangeRatio(pa, pb));\r\n    }\r\n    // (percentage) Get the step that applies at a certain value.\r\n    function getStep(xPct, xSteps, snap, value) {\r\n        if (value === 100) {\r\n            return value;\r\n        }\r\n        var j = getJ(value, xPct);\r\n        var a = xPct[j - 1];\r\n        var b = xPct[j];\r\n        // If 'snap' is set, steps are used as fixed points on the slider.\r\n        if (snap) {\r\n            // Find the closest position, a or b.\r\n            if (value - a > (b - a) / 2) {\r\n                return b;\r\n            }\r\n            return a;\r\n        }\r\n        if (!xSteps[j - 1]) {\r\n            return value;\r\n        }\r\n        return xPct[j - 1] + closest(value - xPct[j - 1], xSteps[j - 1]);\r\n    }\r\n    //endregion\r\n    //region Spectrum\r\n    var Spectrum = /** @class */ (function () {\r\n        function Spectrum(entry, snap, singleStep) {\r\n            this.xPct = [];\r\n            this.xVal = [];\r\n            this.xSteps = [];\r\n            this.xNumSteps = [];\r\n            this.xHighestCompleteStep = [];\r\n            this.xSteps = [singleStep || false];\r\n            this.xNumSteps = [false];\r\n            this.snap = snap;\r\n            var index;\r\n            var ordered = [];\r\n            // Map the object keys to an array.\r\n            Object.keys(entry).forEach(function (index) {\r\n                ordered.push([asArray(entry[index]), index]);\r\n            });\r\n            // Sort all entries by value (numeric sort).\r\n            ordered.sort(function (a, b) {\r\n                return a[0][0] - b[0][0];\r\n            });\r\n            // Convert all entries to subranges.\r\n            for (index = 0; index < ordered.length; index++) {\r\n                this.handleEntryPoint(ordered[index][1], ordered[index][0]);\r\n            }\r\n            // Store the actual step values.\r\n            // xSteps is sorted in the same order as xPct and xVal.\r\n            this.xNumSteps = this.xSteps.slice(0);\r\n            // Convert all numeric steps to the percentage of the subrange they represent.\r\n            for (index = 0; index < this.xNumSteps.length; index++) {\r\n                this.handleStepPoint(index, this.xNumSteps[index]);\r\n            }\r\n        }\r\n        Spectrum.prototype.getDistance = function (value) {\r\n            var distances = [];\r\n            for (var index = 0; index < this.xNumSteps.length - 1; index++) {\r\n                distances[index] = fromPercentage(this.xVal, value, index);\r\n            }\r\n            return distances;\r\n        };\r\n        // Calculate the percentual distance over the whole scale of ranges.\r\n        // direction: 0 = backwards / 1 = forwards\r\n        Spectrum.prototype.getAbsoluteDistance = function (value, distances, direction) {\r\n            var xPct_index = 0;\r\n            // Calculate range where to start calculation\r\n            if (value < this.xPct[this.xPct.length - 1]) {\r\n                while (value > this.xPct[xPct_index + 1]) {\r\n                    xPct_index++;\r\n                }\r\n            }\r\n            else if (value === this.xPct[this.xPct.length - 1]) {\r\n                xPct_index = this.xPct.length - 2;\r\n            }\r\n            // If looking backwards and the value is exactly at a range separator then look one range further\r\n            if (!direction && value === this.xPct[xPct_index + 1]) {\r\n                xPct_index++;\r\n            }\r\n            if (distances === null) {\r\n                distances = [];\r\n            }\r\n            var start_factor;\r\n            var rest_factor = 1;\r\n            var rest_rel_distance = distances[xPct_index];\r\n            var range_pct = 0;\r\n            var rel_range_distance = 0;\r\n            var abs_distance_counter = 0;\r\n            var range_counter = 0;\r\n            // Calculate what part of the start range the value is\r\n            if (direction) {\r\n                start_factor = (value - this.xPct[xPct_index]) / (this.xPct[xPct_index + 1] - this.xPct[xPct_index]);\r\n            }\r\n            else {\r\n                start_factor = (this.xPct[xPct_index + 1] - value) / (this.xPct[xPct_index + 1] - this.xPct[xPct_index]);\r\n            }\r\n            // Do until the complete distance across ranges is calculated\r\n            while (rest_rel_distance > 0) {\r\n                // Calculate the percentage of total range\r\n                range_pct = this.xPct[xPct_index + 1 + range_counter] - this.xPct[xPct_index + range_counter];\r\n                // Detect if the margin, padding or limit is larger then the current range and calculate\r\n                if (distances[xPct_index + range_counter] * rest_factor + 100 - start_factor * 100 > 100) {\r\n                    // If larger then take the percentual distance of the whole range\r\n                    rel_range_distance = range_pct * start_factor;\r\n                    // Rest factor of relative percentual distance still to be calculated\r\n                    rest_factor = (rest_rel_distance - 100 * start_factor) / distances[xPct_index + range_counter];\r\n                    // Set start factor to 1 as for next range it does not apply.\r\n                    start_factor = 1;\r\n                }\r\n                else {\r\n                    // If smaller or equal then take the percentual distance of the calculate percentual part of that range\r\n                    rel_range_distance = ((distances[xPct_index + range_counter] * range_pct) / 100) * rest_factor;\r\n                    // No rest left as the rest fits in current range\r\n                    rest_factor = 0;\r\n                }\r\n                if (direction) {\r\n                    abs_distance_counter = abs_distance_counter - rel_range_distance;\r\n                    // Limit range to first range when distance becomes outside of minimum range\r\n                    if (this.xPct.length + range_counter >= 1) {\r\n                        range_counter--;\r\n                    }\r\n                }\r\n                else {\r\n                    abs_distance_counter = abs_distance_counter + rel_range_distance;\r\n                    // Limit range to last range when distance becomes outside of maximum range\r\n                    if (this.xPct.length - range_counter >= 1) {\r\n                        range_counter++;\r\n                    }\r\n                }\r\n                // Rest of relative percentual distance still to be calculated\r\n                rest_rel_distance = distances[xPct_index + range_counter] * rest_factor;\r\n            }\r\n            return value + abs_distance_counter;\r\n        };\r\n        Spectrum.prototype.toStepping = function (value) {\r\n            value = toStepping(this.xVal, this.xPct, value);\r\n            return value;\r\n        };\r\n        Spectrum.prototype.fromStepping = function (value) {\r\n            return fromStepping(this.xVal, this.xPct, value);\r\n        };\r\n        Spectrum.prototype.getStep = function (value) {\r\n            value = getStep(this.xPct, this.xSteps, this.snap, value);\r\n            return value;\r\n        };\r\n        Spectrum.prototype.getDefaultStep = function (value, isDown, size) {\r\n            var j = getJ(value, this.xPct);\r\n            // When at the top or stepping down, look at the previous sub-range\r\n            if (value === 100 || (isDown && value === this.xPct[j - 1])) {\r\n                j = Math.max(j - 1, 1);\r\n            }\r\n            return (this.xVal[j] - this.xVal[j - 1]) / size;\r\n        };\r\n        Spectrum.prototype.getNearbySteps = function (value) {\r\n            var j = getJ(value, this.xPct);\r\n            return {\r\n                stepBefore: {\r\n                    startValue: this.xVal[j - 2],\r\n                    step: this.xNumSteps[j - 2],\r\n                    highestStep: this.xHighestCompleteStep[j - 2],\r\n                },\r\n                thisStep: {\r\n                    startValue: this.xVal[j - 1],\r\n                    step: this.xNumSteps[j - 1],\r\n                    highestStep: this.xHighestCompleteStep[j - 1],\r\n                },\r\n                stepAfter: {\r\n                    startValue: this.xVal[j],\r\n                    step: this.xNumSteps[j],\r\n                    highestStep: this.xHighestCompleteStep[j],\r\n                },\r\n            };\r\n        };\r\n        Spectrum.prototype.countStepDecimals = function () {\r\n            var stepDecimals = this.xNumSteps.map(countDecimals);\r\n            return Math.max.apply(null, stepDecimals);\r\n        };\r\n        Spectrum.prototype.hasNoSize = function () {\r\n            return this.xVal[0] === this.xVal[this.xVal.length - 1];\r\n        };\r\n        // Outside testing\r\n        Spectrum.prototype.convert = function (value) {\r\n            return this.getStep(this.toStepping(value));\r\n        };\r\n        Spectrum.prototype.handleEntryPoint = function (index, value) {\r\n            var percentage;\r\n            // Covert min/max syntax to 0 and 100.\r\n            if (index === \"min\") {\r\n                percentage = 0;\r\n            }\r\n            else if (index === \"max\") {\r\n                percentage = 100;\r\n            }\r\n            else {\r\n                percentage = parseFloat(index);\r\n            }\r\n            // Check for correct input.\r\n            if (!isNumeric(percentage) || !isNumeric(value[0])) {\r\n                throw new Error(\"noUiSlider: 'range' value isn't numeric.\");\r\n            }\r\n            // Store values.\r\n            this.xPct.push(percentage);\r\n            this.xVal.push(value[0]);\r\n            var value1 = Number(value[1]);\r\n            // NaN will evaluate to false too, but to keep\r\n            // logging clear, set step explicitly. Make sure\r\n            // not to override the 'step' setting with false.\r\n            if (!percentage) {\r\n                if (!isNaN(value1)) {\r\n                    this.xSteps[0] = value1;\r\n                }\r\n            }\r\n            else {\r\n                this.xSteps.push(isNaN(value1) ? false : value1);\r\n            }\r\n            this.xHighestCompleteStep.push(0);\r\n        };\r\n        Spectrum.prototype.handleStepPoint = function (i, n) {\r\n            // Ignore 'false' stepping.\r\n            if (!n) {\r\n                return;\r\n            }\r\n            // Step over zero-length ranges (#948);\r\n            if (this.xVal[i] === this.xVal[i + 1]) {\r\n                this.xSteps[i] = this.xHighestCompleteStep[i] = this.xVal[i];\r\n                return;\r\n            }\r\n            // Factor to range ratio\r\n            this.xSteps[i] =\r\n                fromPercentage([this.xVal[i], this.xVal[i + 1]], n, 0) / subRangeRatio(this.xPct[i], this.xPct[i + 1]);\r\n            var totalSteps = (this.xVal[i + 1] - this.xVal[i]) / this.xNumSteps[i];\r\n            var highestStep = Math.ceil(Number(totalSteps.toFixed(3)) - 1);\r\n            var step = this.xVal[i] + this.xNumSteps[i] * highestStep;\r\n            this.xHighestCompleteStep[i] = step;\r\n        };\r\n        return Spectrum;\r\n    }());\r\n    //endregion\r\n    //region Options\r\n    /*\tEvery input option is tested and parsed. This will prevent\r\n        endless validation in internal methods. These tests are\r\n        structured with an item for every option available. An\r\n        option can be marked as required by setting the 'r' flag.\r\n        The testing function is provided with three arguments:\r\n            - The provided value for the option;\r\n            - A reference to the options object;\r\n            - The name for the option;\r\n\r\n        The testing function returns false when an error is detected,\r\n        or true when everything is OK. It can also modify the option\r\n        object, to make sure all values can be correctly looped elsewhere. */\r\n    //region Defaults\r\n    var defaultFormatter = {\r\n        to: function (value) {\r\n            return value === undefined ? \"\" : value.toFixed(2);\r\n        },\r\n        from: Number,\r\n    };\r\n    var cssClasses = {\r\n        target: \"target\",\r\n        base: \"base\",\r\n        origin: \"origin\",\r\n        handle: \"handle\",\r\n        handleLower: \"handle-lower\",\r\n        handleUpper: \"handle-upper\",\r\n        touchArea: \"touch-area\",\r\n        horizontal: \"horizontal\",\r\n        vertical: \"vertical\",\r\n        background: \"background\",\r\n        connect: \"connect\",\r\n        connects: \"connects\",\r\n        ltr: \"ltr\",\r\n        rtl: \"rtl\",\r\n        textDirectionLtr: \"txt-dir-ltr\",\r\n        textDirectionRtl: \"txt-dir-rtl\",\r\n        draggable: \"draggable\",\r\n        drag: \"state-drag\",\r\n        tap: \"state-tap\",\r\n        active: \"active\",\r\n        tooltip: \"tooltip\",\r\n        pips: \"pips\",\r\n        pipsHorizontal: \"pips-horizontal\",\r\n        pipsVertical: \"pips-vertical\",\r\n        marker: \"marker\",\r\n        markerHorizontal: \"marker-horizontal\",\r\n        markerVertical: \"marker-vertical\",\r\n        markerNormal: \"marker-normal\",\r\n        markerLarge: \"marker-large\",\r\n        markerSub: \"marker-sub\",\r\n        value: \"value\",\r\n        valueHorizontal: \"value-horizontal\",\r\n        valueVertical: \"value-vertical\",\r\n        valueNormal: \"value-normal\",\r\n        valueLarge: \"value-large\",\r\n        valueSub: \"value-sub\",\r\n    };\r\n    // Namespaces of internal event listeners\r\n    var INTERNAL_EVENT_NS = {\r\n        tooltips: \".__tooltips\",\r\n        aria: \".__aria\",\r\n    };\r\n    //endregion\r\n    function testStep(parsed, entry) {\r\n        if (!isNumeric(entry)) {\r\n            throw new Error(\"noUiSlider: 'step' is not numeric.\");\r\n        }\r\n        // The step option can still be used to set stepping\r\n        // for linear sliders. Overwritten if set in 'range'.\r\n        parsed.singleStep = entry;\r\n    }\r\n    function testKeyboardPageMultiplier(parsed, entry) {\r\n        if (!isNumeric(entry)) {\r\n            throw new Error(\"noUiSlider: 'keyboardPageMultiplier' is not numeric.\");\r\n        }\r\n        parsed.keyboardPageMultiplier = entry;\r\n    }\r\n    function testKeyboardMultiplier(parsed, entry) {\r\n        if (!isNumeric(entry)) {\r\n            throw new Error(\"noUiSlider: 'keyboardMultiplier' is not numeric.\");\r\n        }\r\n        parsed.keyboardMultiplier = entry;\r\n    }\r\n    function testKeyboardDefaultStep(parsed, entry) {\r\n        if (!isNumeric(entry)) {\r\n            throw new Error(\"noUiSlider: 'keyboardDefaultStep' is not numeric.\");\r\n        }\r\n        parsed.keyboardDefaultStep = entry;\r\n    }\r\n    function testRange(parsed, entry) {\r\n        // Filter incorrect input.\r\n        if (typeof entry !== \"object\" || Array.isArray(entry)) {\r\n            throw new Error(\"noUiSlider: 'range' is not an object.\");\r\n        }\r\n        // Catch missing start or end.\r\n        if (entry.min === undefined || entry.max === undefined) {\r\n            throw new Error(\"noUiSlider: Missing 'min' or 'max' in 'range'.\");\r\n        }\r\n        parsed.spectrum = new Spectrum(entry, parsed.snap || false, parsed.singleStep);\r\n    }\r\n    function testStart(parsed, entry) {\r\n        entry = asArray(entry);\r\n        // Validate input. Values aren't tested, as the public .val method\r\n        // will always provide a valid location.\r\n        if (!Array.isArray(entry) || !entry.length) {\r\n            throw new Error(\"noUiSlider: 'start' option is incorrect.\");\r\n        }\r\n        // Store the number of handles.\r\n        parsed.handles = entry.length;\r\n        // When the slider is initialized, the .val method will\r\n        // be called with the start options.\r\n        parsed.start = entry;\r\n    }\r\n    function testSnap(parsed, entry) {\r\n        if (typeof entry !== \"boolean\") {\r\n            throw new Error(\"noUiSlider: 'snap' option must be a boolean.\");\r\n        }\r\n        // Enforce 100% stepping within subranges.\r\n        parsed.snap = entry;\r\n    }\r\n    function testAnimate(parsed, entry) {\r\n        if (typeof entry !== \"boolean\") {\r\n            throw new Error(\"noUiSlider: 'animate' option must be a boolean.\");\r\n        }\r\n        // Enforce 100% stepping within subranges.\r\n        parsed.animate = entry;\r\n    }\r\n    function testAnimationDuration(parsed, entry) {\r\n        if (typeof entry !== \"number\") {\r\n            throw new Error(\"noUiSlider: 'animationDuration' option must be a number.\");\r\n        }\r\n        parsed.animationDuration = entry;\r\n    }\r\n    function testConnect(parsed, entry) {\r\n        var connect = [false];\r\n        var i;\r\n        // Map legacy options\r\n        if (entry === \"lower\") {\r\n            entry = [true, false];\r\n        }\r\n        else if (entry === \"upper\") {\r\n            entry = [false, true];\r\n        }\r\n        // Handle boolean options\r\n        if (entry === true || entry === false) {\r\n            for (i = 1; i < parsed.handles; i++) {\r\n                connect.push(entry);\r\n            }\r\n            connect.push(false);\r\n        }\r\n        // Reject invalid input\r\n        else if (!Array.isArray(entry) || !entry.length || entry.length !== parsed.handles + 1) {\r\n            throw new Error(\"noUiSlider: 'connect' option doesn't match handle count.\");\r\n        }\r\n        else {\r\n            connect = entry;\r\n        }\r\n        parsed.connect = connect;\r\n    }\r\n    function testOrientation(parsed, entry) {\r\n        // Set orientation to an a numerical value for easy\r\n        // array selection.\r\n        switch (entry) {\r\n            case \"horizontal\":\r\n                parsed.ort = 0;\r\n                break;\r\n            case \"vertical\":\r\n                parsed.ort = 1;\r\n                break;\r\n            default:\r\n                throw new Error(\"noUiSlider: 'orientation' option is invalid.\");\r\n        }\r\n    }\r\n    function testMargin(parsed, entry) {\r\n        if (!isNumeric(entry)) {\r\n            throw new Error(\"noUiSlider: 'margin' option must be numeric.\");\r\n        }\r\n        // Issue #582\r\n        if (entry === 0) {\r\n            return;\r\n        }\r\n        parsed.margin = parsed.spectrum.getDistance(entry);\r\n    }\r\n    function testLimit(parsed, entry) {\r\n        if (!isNumeric(entry)) {\r\n            throw new Error(\"noUiSlider: 'limit' option must be numeric.\");\r\n        }\r\n        parsed.limit = parsed.spectrum.getDistance(entry);\r\n        if (!parsed.limit || parsed.handles < 2) {\r\n            throw new Error(\"noUiSlider: 'limit' option is only supported on linear sliders with 2 or more handles.\");\r\n        }\r\n    }\r\n    function testPadding(parsed, entry) {\r\n        var index;\r\n        if (!isNumeric(entry) && !Array.isArray(entry)) {\r\n            throw new Error(\"noUiSlider: 'padding' option must be numeric or array of exactly 2 numbers.\");\r\n        }\r\n        if (Array.isArray(entry) && !(entry.length === 2 || isNumeric(entry[0]) || isNumeric(entry[1]))) {\r\n            throw new Error(\"noUiSlider: 'padding' option must be numeric or array of exactly 2 numbers.\");\r\n        }\r\n        if (entry === 0) {\r\n            return;\r\n        }\r\n        if (!Array.isArray(entry)) {\r\n            entry = [entry, entry];\r\n        }\r\n        // 'getDistance' returns false for invalid values.\r\n        parsed.padding = [parsed.spectrum.getDistance(entry[0]), parsed.spectrum.getDistance(entry[1])];\r\n        for (index = 0; index < parsed.spectrum.xNumSteps.length - 1; index++) {\r\n            // last \"range\" can't contain step size as it is purely an endpoint.\r\n            if (parsed.padding[0][index] < 0 || parsed.padding[1][index] < 0) {\r\n                throw new Error(\"noUiSlider: 'padding' option must be a positive number(s).\");\r\n            }\r\n        }\r\n        var totalPadding = entry[0] + entry[1];\r\n        var firstValue = parsed.spectrum.xVal[0];\r\n        var lastValue = parsed.spectrum.xVal[parsed.spectrum.xVal.length - 1];\r\n        if (totalPadding / (lastValue - firstValue) > 1) {\r\n            throw new Error(\"noUiSlider: 'padding' option must not exceed 100% of the range.\");\r\n        }\r\n    }\r\n    function testDirection(parsed, entry) {\r\n        // Set direction as a numerical value for easy parsing.\r\n        // Invert connection for RTL sliders, so that the proper\r\n        // handles get the connect/background classes.\r\n        switch (entry) {\r\n            case \"ltr\":\r\n                parsed.dir = 0;\r\n                break;\r\n            case \"rtl\":\r\n                parsed.dir = 1;\r\n                break;\r\n            default:\r\n                throw new Error(\"noUiSlider: 'direction' option was not recognized.\");\r\n        }\r\n    }\r\n    function testBehaviour(parsed, entry) {\r\n        // Make sure the input is a string.\r\n        if (typeof entry !== \"string\") {\r\n            throw new Error(\"noUiSlider: 'behaviour' must be a string containing options.\");\r\n        }\r\n        // Check if the string contains any keywords.\r\n        // None are required.\r\n        var tap = entry.indexOf(\"tap\") >= 0;\r\n        var drag = entry.indexOf(\"drag\") >= 0;\r\n        var fixed = entry.indexOf(\"fixed\") >= 0;\r\n        var snap = entry.indexOf(\"snap\") >= 0;\r\n        var hover = entry.indexOf(\"hover\") >= 0;\r\n        var unconstrained = entry.indexOf(\"unconstrained\") >= 0;\r\n        var dragAll = entry.indexOf(\"drag-all\") >= 0;\r\n        var smoothSteps = entry.indexOf(\"smooth-steps\") >= 0;\r\n        if (fixed) {\r\n            if (parsed.handles !== 2) {\r\n                throw new Error(\"noUiSlider: 'fixed' behaviour must be used with 2 handles\");\r\n            }\r\n            // Use margin to enforce fixed state\r\n            testMargin(parsed, parsed.start[1] - parsed.start[0]);\r\n        }\r\n        if (unconstrained && (parsed.margin || parsed.limit)) {\r\n            throw new Error(\"noUiSlider: 'unconstrained' behaviour cannot be used with margin or limit\");\r\n        }\r\n        parsed.events = {\r\n            tap: tap || snap,\r\n            drag: drag,\r\n            dragAll: dragAll,\r\n            smoothSteps: smoothSteps,\r\n            fixed: fixed,\r\n            snap: snap,\r\n            hover: hover,\r\n            unconstrained: unconstrained,\r\n        };\r\n    }\r\n    function testTooltips(parsed, entry) {\r\n        if (entry === false) {\r\n            return;\r\n        }\r\n        if (entry === true || isValidPartialFormatter(entry)) {\r\n            parsed.tooltips = [];\r\n            for (var i = 0; i < parsed.handles; i++) {\r\n                parsed.tooltips.push(entry);\r\n            }\r\n        }\r\n        else {\r\n            entry = asArray(entry);\r\n            if (entry.length !== parsed.handles) {\r\n                throw new Error(\"noUiSlider: must pass a formatter for all handles.\");\r\n            }\r\n            entry.forEach(function (formatter) {\r\n                if (typeof formatter !== \"boolean\" && !isValidPartialFormatter(formatter)) {\r\n                    throw new Error(\"noUiSlider: 'tooltips' must be passed a formatter or 'false'.\");\r\n                }\r\n            });\r\n            parsed.tooltips = entry;\r\n        }\r\n    }\r\n    function testHandleAttributes(parsed, entry) {\r\n        if (entry.length !== parsed.handles) {\r\n            throw new Error(\"noUiSlider: must pass a attributes for all handles.\");\r\n        }\r\n        parsed.handleAttributes = entry;\r\n    }\r\n    function testAriaFormat(parsed, entry) {\r\n        if (!isValidPartialFormatter(entry)) {\r\n            throw new Error(\"noUiSlider: 'ariaFormat' requires 'to' method.\");\r\n        }\r\n        parsed.ariaFormat = entry;\r\n    }\r\n    function testFormat(parsed, entry) {\r\n        if (!isValidFormatter(entry)) {\r\n            throw new Error(\"noUiSlider: 'format' requires 'to' and 'from' methods.\");\r\n        }\r\n        parsed.format = entry;\r\n    }\r\n    function testKeyboardSupport(parsed, entry) {\r\n        if (typeof entry !== \"boolean\") {\r\n            throw new Error(\"noUiSlider: 'keyboardSupport' option must be a boolean.\");\r\n        }\r\n        parsed.keyboardSupport = entry;\r\n    }\r\n    function testDocumentElement(parsed, entry) {\r\n        // This is an advanced option. Passed values are used without validation.\r\n        parsed.documentElement = entry;\r\n    }\r\n    function testCssPrefix(parsed, entry) {\r\n        if (typeof entry !== \"string\" && entry !== false) {\r\n            throw new Error(\"noUiSlider: 'cssPrefix' must be a string or `false`.\");\r\n        }\r\n        parsed.cssPrefix = entry;\r\n    }\r\n    function testCssClasses(parsed, entry) {\r\n        if (typeof entry !== \"object\") {\r\n            throw new Error(\"noUiSlider: 'cssClasses' must be an object.\");\r\n        }\r\n        if (typeof parsed.cssPrefix === \"string\") {\r\n            parsed.cssClasses = {};\r\n            Object.keys(entry).forEach(function (key) {\r\n                parsed.cssClasses[key] = parsed.cssPrefix + entry[key];\r\n            });\r\n        }\r\n        else {\r\n            parsed.cssClasses = entry;\r\n        }\r\n    }\r\n    // Test all developer settings and parse to assumption-safe values.\r\n    function testOptions(options) {\r\n        // To prove a fix for #537, freeze options here.\r\n        // If the object is modified, an error will be thrown.\r\n        // Object.freeze(options);\r\n        var parsed = {\r\n            margin: null,\r\n            limit: null,\r\n            padding: null,\r\n            animate: true,\r\n            animationDuration: 300,\r\n            ariaFormat: defaultFormatter,\r\n            format: defaultFormatter,\r\n        };\r\n        // Tests are executed in the order they are presented here.\r\n        var tests = {\r\n            step: { r: false, t: testStep },\r\n            keyboardPageMultiplier: { r: false, t: testKeyboardPageMultiplier },\r\n            keyboardMultiplier: { r: false, t: testKeyboardMultiplier },\r\n            keyboardDefaultStep: { r: false, t: testKeyboardDefaultStep },\r\n            start: { r: true, t: testStart },\r\n            connect: { r: true, t: testConnect },\r\n            direction: { r: true, t: testDirection },\r\n            snap: { r: false, t: testSnap },\r\n            animate: { r: false, t: testAnimate },\r\n            animationDuration: { r: false, t: testAnimationDuration },\r\n            range: { r: true, t: testRange },\r\n            orientation: { r: false, t: testOrientation },\r\n            margin: { r: false, t: testMargin },\r\n            limit: { r: false, t: testLimit },\r\n            padding: { r: false, t: testPadding },\r\n            behaviour: { r: true, t: testBehaviour },\r\n            ariaFormat: { r: false, t: testAriaFormat },\r\n            format: { r: false, t: testFormat },\r\n            tooltips: { r: false, t: testTooltips },\r\n            keyboardSupport: { r: true, t: testKeyboardSupport },\r\n            documentElement: { r: false, t: testDocumentElement },\r\n            cssPrefix: { r: true, t: testCssPrefix },\r\n            cssClasses: { r: true, t: testCssClasses },\r\n            handleAttributes: { r: false, t: testHandleAttributes },\r\n        };\r\n        var defaults = {\r\n            connect: false,\r\n            direction: \"ltr\",\r\n            behaviour: \"tap\",\r\n            orientation: \"horizontal\",\r\n            keyboardSupport: true,\r\n            cssPrefix: \"noUi-\",\r\n            cssClasses: cssClasses,\r\n            keyboardPageMultiplier: 5,\r\n            keyboardMultiplier: 1,\r\n            keyboardDefaultStep: 10,\r\n        };\r\n        // AriaFormat defaults to regular format, if any.\r\n        if (options.format && !options.ariaFormat) {\r\n            options.ariaFormat = options.format;\r\n        }\r\n        // Run all options through a testing mechanism to ensure correct\r\n        // input. It should be noted that options might get modified to\r\n        // be handled properly. E.g. wrapping integers in arrays.\r\n        Object.keys(tests).forEach(function (name) {\r\n            // If the option isn't set, but it is required, throw an error.\r\n            if (!isSet(options[name]) && defaults[name] === undefined) {\r\n                if (tests[name].r) {\r\n                    throw new Error(\"noUiSlider: '\" + name + \"' is required.\");\r\n                }\r\n                return;\r\n            }\r\n            tests[name].t(parsed, !isSet(options[name]) ? defaults[name] : options[name]);\r\n        });\r\n        // Forward pips options\r\n        parsed.pips = options.pips;\r\n        // All recent browsers accept unprefixed transform.\r\n        // We need -ms- for IE9 and -webkit- for older Android;\r\n        // Assume use of -webkit- if unprefixed and -ms- are not supported.\r\n        // https://caniuse.com/#feat=transforms2d\r\n        var d = document.createElement(\"div\");\r\n        var msPrefix = d.style.msTransform !== undefined;\r\n        var noPrefix = d.style.transform !== undefined;\r\n        parsed.transformRule = noPrefix ? \"transform\" : msPrefix ? \"msTransform\" : \"webkitTransform\";\r\n        // Pips don't move, so we can place them using left/top.\r\n        var styles = [\r\n            [\"left\", \"top\"],\r\n            [\"right\", \"bottom\"],\r\n        ];\r\n        parsed.style = styles[parsed.dir][parsed.ort];\r\n        return parsed;\r\n    }\r\n    //endregion\r\n    function scope(target, options, originalOptions) {\r\n        var actions = getActions();\r\n        var supportsTouchActionNone = getSupportsTouchActionNone();\r\n        var supportsPassive = supportsTouchActionNone && getSupportsPassive();\r\n        // All variables local to 'scope' are prefixed with 'scope_'\r\n        // Slider DOM Nodes\r\n        var scope_Target = target;\r\n        var scope_Base;\r\n        var scope_Handles;\r\n        var scope_Connects;\r\n        var scope_Pips;\r\n        var scope_Tooltips;\r\n        // Slider state values\r\n        var scope_Spectrum = options.spectrum;\r\n        var scope_Values = [];\r\n        var scope_Locations = [];\r\n        var scope_HandleNumbers = [];\r\n        var scope_ActiveHandlesCount = 0;\r\n        var scope_Events = {};\r\n        // Document Nodes\r\n        var scope_Document = target.ownerDocument;\r\n        var scope_DocumentElement = options.documentElement || scope_Document.documentElement;\r\n        var scope_Body = scope_Document.body;\r\n        // For horizontal sliders in standard ltr documents,\r\n        // make .noUi-origin overflow to the left so the document doesn't scroll.\r\n        var scope_DirOffset = scope_Document.dir === \"rtl\" || options.ort === 1 ? 0 : 100;\r\n        // Creates a node, adds it to target, returns the new node.\r\n        function addNodeTo(addTarget, className) {\r\n            var div = scope_Document.createElement(\"div\");\r\n            if (className) {\r\n                addClass(div, className);\r\n            }\r\n            addTarget.appendChild(div);\r\n            return div;\r\n        }\r\n        // Append a origin to the base\r\n        function addOrigin(base, handleNumber) {\r\n            var origin = addNodeTo(base, options.cssClasses.origin);\r\n            var handle = addNodeTo(origin, options.cssClasses.handle);\r\n            addNodeTo(handle, options.cssClasses.touchArea);\r\n            handle.setAttribute(\"data-handle\", String(handleNumber));\r\n            if (options.keyboardSupport) {\r\n                // https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                // 0 = focusable and reachable\r\n                handle.setAttribute(\"tabindex\", \"0\");\r\n                handle.addEventListener(\"keydown\", function (event) {\r\n                    return eventKeydown(event, handleNumber);\r\n                });\r\n            }\r\n            if (options.handleAttributes !== undefined) {\r\n                var attributes_1 = options.handleAttributes[handleNumber];\r\n                Object.keys(attributes_1).forEach(function (attribute) {\r\n                    handle.setAttribute(attribute, attributes_1[attribute]);\r\n                });\r\n            }\r\n            handle.setAttribute(\"role\", \"slider\");\r\n            handle.setAttribute(\"aria-orientation\", options.ort ? \"vertical\" : \"horizontal\");\r\n            if (handleNumber === 0) {\r\n                addClass(handle, options.cssClasses.handleLower);\r\n            }\r\n            else if (handleNumber === options.handles - 1) {\r\n                addClass(handle, options.cssClasses.handleUpper);\r\n            }\r\n            return origin;\r\n        }\r\n        // Insert nodes for connect elements\r\n        function addConnect(base, add) {\r\n            if (!add) {\r\n                return false;\r\n            }\r\n            return addNodeTo(base, options.cssClasses.connect);\r\n        }\r\n        // Add handles to the slider base.\r\n        function addElements(connectOptions, base) {\r\n            var connectBase = addNodeTo(base, options.cssClasses.connects);\r\n            scope_Handles = [];\r\n            scope_Connects = [];\r\n            scope_Connects.push(addConnect(connectBase, connectOptions[0]));\r\n            // [::::O====O====O====]\r\n            // connectOptions = [0, 1, 1, 1]\r\n            for (var i = 0; i < options.handles; i++) {\r\n                // Keep a list of all added handles.\r\n                scope_Handles.push(addOrigin(base, i));\r\n                scope_HandleNumbers[i] = i;\r\n                scope_Connects.push(addConnect(connectBase, connectOptions[i + 1]));\r\n            }\r\n        }\r\n        // Initialize a single slider.\r\n        function addSlider(addTarget) {\r\n            // Apply classes and data to the target.\r\n            addClass(addTarget, options.cssClasses.target);\r\n            if (options.dir === 0) {\r\n                addClass(addTarget, options.cssClasses.ltr);\r\n            }\r\n            else {\r\n                addClass(addTarget, options.cssClasses.rtl);\r\n            }\r\n            if (options.ort === 0) {\r\n                addClass(addTarget, options.cssClasses.horizontal);\r\n            }\r\n            else {\r\n                addClass(addTarget, options.cssClasses.vertical);\r\n            }\r\n            var textDirection = getComputedStyle(addTarget).direction;\r\n            if (textDirection === \"rtl\") {\r\n                addClass(addTarget, options.cssClasses.textDirectionRtl);\r\n            }\r\n            else {\r\n                addClass(addTarget, options.cssClasses.textDirectionLtr);\r\n            }\r\n            return addNodeTo(addTarget, options.cssClasses.base);\r\n        }\r\n        function addTooltip(handle, handleNumber) {\r\n            if (!options.tooltips || !options.tooltips[handleNumber]) {\r\n                return false;\r\n            }\r\n            return addNodeTo(handle.firstChild, options.cssClasses.tooltip);\r\n        }\r\n        function isSliderDisabled() {\r\n            return scope_Target.hasAttribute(\"disabled\");\r\n        }\r\n        // Disable the slider dragging if any handle is disabled\r\n        function isHandleDisabled(handleNumber) {\r\n            var handleOrigin = scope_Handles[handleNumber];\r\n            return handleOrigin.hasAttribute(\"disabled\");\r\n        }\r\n        function removeTooltips() {\r\n            if (scope_Tooltips) {\r\n                removeEvent(\"update\" + INTERNAL_EVENT_NS.tooltips);\r\n                scope_Tooltips.forEach(function (tooltip) {\r\n                    if (tooltip) {\r\n                        removeElement(tooltip);\r\n                    }\r\n                });\r\n                scope_Tooltips = null;\r\n            }\r\n        }\r\n        // The tooltips option is a shorthand for using the 'update' event.\r\n        function tooltips() {\r\n            removeTooltips();\r\n            // Tooltips are added with options.tooltips in original order.\r\n            scope_Tooltips = scope_Handles.map(addTooltip);\r\n            bindEvent(\"update\" + INTERNAL_EVENT_NS.tooltips, function (values, handleNumber, unencoded) {\r\n                if (!scope_Tooltips || !options.tooltips) {\r\n                    return;\r\n                }\r\n                if (scope_Tooltips[handleNumber] === false) {\r\n                    return;\r\n                }\r\n                var formattedValue = values[handleNumber];\r\n                if (options.tooltips[handleNumber] !== true) {\r\n                    formattedValue = options.tooltips[handleNumber].to(unencoded[handleNumber]);\r\n                }\r\n                scope_Tooltips[handleNumber].innerHTML = formattedValue;\r\n            });\r\n        }\r\n        function aria() {\r\n            removeEvent(\"update\" + INTERNAL_EVENT_NS.aria);\r\n            bindEvent(\"update\" + INTERNAL_EVENT_NS.aria, function (values, handleNumber, unencoded, tap, positions) {\r\n                // Update Aria Values for all handles, as a change in one changes min and max values for the next.\r\n                scope_HandleNumbers.forEach(function (index) {\r\n                    var handle = scope_Handles[index];\r\n                    var min = checkHandlePosition(scope_Locations, index, 0, true, true, true);\r\n                    var max = checkHandlePosition(scope_Locations, index, 100, true, true, true);\r\n                    var now = positions[index];\r\n                    // Formatted value for display\r\n                    var text = String(options.ariaFormat.to(unencoded[index]));\r\n                    // Map to slider range values\r\n                    min = scope_Spectrum.fromStepping(min).toFixed(1);\r\n                    max = scope_Spectrum.fromStepping(max).toFixed(1);\r\n                    now = scope_Spectrum.fromStepping(now).toFixed(1);\r\n                    handle.children[0].setAttribute(\"aria-valuemin\", min);\r\n                    handle.children[0].setAttribute(\"aria-valuemax\", max);\r\n                    handle.children[0].setAttribute(\"aria-valuenow\", now);\r\n                    handle.children[0].setAttribute(\"aria-valuetext\", text);\r\n                });\r\n            });\r\n        }\r\n        function getGroup(pips) {\r\n            // Use the range.\r\n            if (pips.mode === exports.PipsMode.Range || pips.mode === exports.PipsMode.Steps) {\r\n                return scope_Spectrum.xVal;\r\n            }\r\n            if (pips.mode === exports.PipsMode.Count) {\r\n                if (pips.values < 2) {\r\n                    throw new Error(\"noUiSlider: 'values' (>= 2) required for mode 'count'.\");\r\n                }\r\n                // Divide 0 - 100 in 'count' parts.\r\n                var interval = pips.values - 1;\r\n                var spread = 100 / interval;\r\n                var values = [];\r\n                // List these parts and have them handled as 'positions'.\r\n                while (interval--) {\r\n                    values[interval] = interval * spread;\r\n                }\r\n                values.push(100);\r\n                return mapToRange(values, pips.stepped);\r\n            }\r\n            if (pips.mode === exports.PipsMode.Positions) {\r\n                // Map all percentages to on-range values.\r\n                return mapToRange(pips.values, pips.stepped);\r\n            }\r\n            if (pips.mode === exports.PipsMode.Values) {\r\n                // If the value must be stepped, it needs to be converted to a percentage first.\r\n                if (pips.stepped) {\r\n                    return pips.values.map(function (value) {\r\n                        // Convert to percentage, apply step, return to value.\r\n                        return scope_Spectrum.fromStepping(scope_Spectrum.getStep(scope_Spectrum.toStepping(value)));\r\n                    });\r\n                }\r\n                // Otherwise, we can simply use the values.\r\n                return pips.values;\r\n            }\r\n            return []; // pips.mode = never\r\n        }\r\n        function mapToRange(values, stepped) {\r\n            return values.map(function (value) {\r\n                return scope_Spectrum.fromStepping(stepped ? scope_Spectrum.getStep(value) : value);\r\n            });\r\n        }\r\n        function generateSpread(pips) {\r\n            function safeIncrement(value, increment) {\r\n                // Avoid floating point variance by dropping the smallest decimal places.\r\n                return Number((value + increment).toFixed(7));\r\n            }\r\n            var group = getGroup(pips);\r\n            var indexes = {};\r\n            var firstInRange = scope_Spectrum.xVal[0];\r\n            var lastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length - 1];\r\n            var ignoreFirst = false;\r\n            var ignoreLast = false;\r\n            var prevPct = 0;\r\n            // Create a copy of the group, sort it and filter away all duplicates.\r\n            group = unique(group.slice().sort(function (a, b) {\r\n                return a - b;\r\n            }));\r\n            // Make sure the range starts with the first element.\r\n            if (group[0] !== firstInRange) {\r\n                group.unshift(firstInRange);\r\n                ignoreFirst = true;\r\n            }\r\n            // Likewise for the last one.\r\n            if (group[group.length - 1] !== lastInRange) {\r\n                group.push(lastInRange);\r\n                ignoreLast = true;\r\n            }\r\n            group.forEach(function (current, index) {\r\n                // Get the current step and the lower + upper positions.\r\n                var step;\r\n                var i;\r\n                var q;\r\n                var low = current;\r\n                var high = group[index + 1];\r\n                var newPct;\r\n                var pctDifference;\r\n                var pctPos;\r\n                var type;\r\n                var steps;\r\n                var realSteps;\r\n                var stepSize;\r\n                var isSteps = pips.mode === exports.PipsMode.Steps;\r\n                // When using 'steps' mode, use the provided steps.\r\n                // Otherwise, we'll step on to the next subrange.\r\n                if (isSteps) {\r\n                    step = scope_Spectrum.xNumSteps[index];\r\n                }\r\n                // Default to a 'full' step.\r\n                if (!step) {\r\n                    step = high - low;\r\n                }\r\n                // If high is undefined we are at the last subrange. Make sure it iterates once (#1088)\r\n                if (high === undefined) {\r\n                    high = low;\r\n                }\r\n                // Make sure step isn't 0, which would cause an infinite loop (#654)\r\n                step = Math.max(step, 0.0000001);\r\n                // Find all steps in the subrange.\r\n                for (i = low; i <= high; i = safeIncrement(i, step)) {\r\n                    // Get the percentage value for the current step,\r\n                    // calculate the size for the subrange.\r\n                    newPct = scope_Spectrum.toStepping(i);\r\n                    pctDifference = newPct - prevPct;\r\n                    steps = pctDifference / (pips.density || 1);\r\n                    realSteps = Math.round(steps);\r\n                    // This ratio represents the amount of percentage-space a point indicates.\r\n                    // For a density 1 the points/percentage = 1. For density 2, that percentage needs to be re-divided.\r\n                    // Round the percentage offset to an even number, then divide by two\r\n                    // to spread the offset on both sides of the range.\r\n                    stepSize = pctDifference / realSteps;\r\n                    // Divide all points evenly, adding the correct number to this subrange.\r\n                    // Run up to <= so that 100% gets a point, event if ignoreLast is set.\r\n                    for (q = 1; q <= realSteps; q += 1) {\r\n                        // The ratio between the rounded value and the actual size might be ~1% off.\r\n                        // Correct the percentage offset by the number of points\r\n                        // per subrange. density = 1 will result in 100 points on the\r\n                        // full range, 2 for 50, 4 for 25, etc.\r\n                        pctPos = prevPct + q * stepSize;\r\n                        indexes[pctPos.toFixed(5)] = [scope_Spectrum.fromStepping(pctPos), 0];\r\n                    }\r\n                    // Determine the point type.\r\n                    type = group.indexOf(i) > -1 ? exports.PipsType.LargeValue : isSteps ? exports.PipsType.SmallValue : exports.PipsType.NoValue;\r\n                    // Enforce the 'ignoreFirst' option by overwriting the type for 0.\r\n                    if (!index && ignoreFirst && i !== high) {\r\n                        type = 0;\r\n                    }\r\n                    if (!(i === high && ignoreLast)) {\r\n                        // Mark the 'type' of this point. 0 = plain, 1 = real value, 2 = step value.\r\n                        indexes[newPct.toFixed(5)] = [i, type];\r\n                    }\r\n                    // Update the percentage count.\r\n                    prevPct = newPct;\r\n                }\r\n            });\r\n            return indexes;\r\n        }\r\n        function addMarking(spread, filterFunc, formatter) {\r\n            var _a, _b;\r\n            var element = scope_Document.createElement(\"div\");\r\n            var valueSizeClasses = (_a = {},\r\n                _a[exports.PipsType.None] = \"\",\r\n                _a[exports.PipsType.NoValue] = options.cssClasses.valueNormal,\r\n                _a[exports.PipsType.LargeValue] = options.cssClasses.valueLarge,\r\n                _a[exports.PipsType.SmallValue] = options.cssClasses.valueSub,\r\n                _a);\r\n            var markerSizeClasses = (_b = {},\r\n                _b[exports.PipsType.None] = \"\",\r\n                _b[exports.PipsType.NoValue] = options.cssClasses.markerNormal,\r\n                _b[exports.PipsType.LargeValue] = options.cssClasses.markerLarge,\r\n                _b[exports.PipsType.SmallValue] = options.cssClasses.markerSub,\r\n                _b);\r\n            var valueOrientationClasses = [options.cssClasses.valueHorizontal, options.cssClasses.valueVertical];\r\n            var markerOrientationClasses = [options.cssClasses.markerHorizontal, options.cssClasses.markerVertical];\r\n            addClass(element, options.cssClasses.pips);\r\n            addClass(element, options.ort === 0 ? options.cssClasses.pipsHorizontal : options.cssClasses.pipsVertical);\r\n            function getClasses(type, source) {\r\n                var a = source === options.cssClasses.value;\r\n                var orientationClasses = a ? valueOrientationClasses : markerOrientationClasses;\r\n                var sizeClasses = a ? valueSizeClasses : markerSizeClasses;\r\n                return source + \" \" + orientationClasses[options.ort] + \" \" + sizeClasses[type];\r\n            }\r\n            function addSpread(offset, value, type) {\r\n                // Apply the filter function, if it is set.\r\n                type = filterFunc ? filterFunc(value, type) : type;\r\n                if (type === exports.PipsType.None) {\r\n                    return;\r\n                }\r\n                // Add a marker for every point\r\n                var node = addNodeTo(element, false);\r\n                node.className = getClasses(type, options.cssClasses.marker);\r\n                node.style[options.style] = offset + \"%\";\r\n                // Values are only appended for points marked '1' or '2'.\r\n                if (type > exports.PipsType.NoValue) {\r\n                    node = addNodeTo(element, false);\r\n                    node.className = getClasses(type, options.cssClasses.value);\r\n                    node.setAttribute(\"data-value\", String(value));\r\n                    node.style[options.style] = offset + \"%\";\r\n                    node.innerHTML = String(formatter.to(value));\r\n                }\r\n            }\r\n            // Append all points.\r\n            Object.keys(spread).forEach(function (offset) {\r\n                addSpread(offset, spread[offset][0], spread[offset][1]);\r\n            });\r\n            return element;\r\n        }\r\n        function removePips() {\r\n            if (scope_Pips) {\r\n                removeElement(scope_Pips);\r\n                scope_Pips = null;\r\n            }\r\n        }\r\n        function pips(pips) {\r\n            // Fix #669\r\n            removePips();\r\n            var spread = generateSpread(pips);\r\n            var filter = pips.filter;\r\n            var format = pips.format || {\r\n                to: function (value) {\r\n                    return String(Math.round(value));\r\n                },\r\n            };\r\n            scope_Pips = scope_Target.appendChild(addMarking(spread, filter, format));\r\n            return scope_Pips;\r\n        }\r\n        // Shorthand for base dimensions.\r\n        function baseSize() {\r\n            var rect = scope_Base.getBoundingClientRect();\r\n            var alt = (\"offset\" + [\"Width\", \"Height\"][options.ort]);\r\n            return options.ort === 0 ? rect.width || scope_Base[alt] : rect.height || scope_Base[alt];\r\n        }\r\n        // Handler for attaching events trough a proxy.\r\n        function attachEvent(events, element, callback, data) {\r\n            // This function can be used to 'filter' events to the slider.\r\n            // element is a node, not a nodeList\r\n            var method = function (event) {\r\n                var e = fixEvent(event, data.pageOffset, data.target || element);\r\n                // fixEvent returns false if this event has a different target\r\n                // when handling (multi-) touch events;\r\n                if (!e) {\r\n                    return false;\r\n                }\r\n                // doNotReject is passed by all end events to make sure released touches\r\n                // are not rejected, leaving the slider \"stuck\" to the cursor;\r\n                if (isSliderDisabled() && !data.doNotReject) {\r\n                    return false;\r\n                }\r\n                // Stop if an active 'tap' transition is taking place.\r\n                if (hasClass(scope_Target, options.cssClasses.tap) && !data.doNotReject) {\r\n                    return false;\r\n                }\r\n                // Ignore right or middle clicks on start #454\r\n                if (events === actions.start && e.buttons !== undefined && e.buttons > 1) {\r\n                    return false;\r\n                }\r\n                // Ignore right or middle clicks on start #454\r\n                if (data.hover && e.buttons) {\r\n                    return false;\r\n                }\r\n                // 'supportsPassive' is only true if a browser also supports touch-action: none in CSS.\r\n                // iOS safari does not, so it doesn't get to benefit from passive scrolling. iOS does support\r\n                // touch-action: manipulation, but that allows panning, which breaks\r\n                // sliders after zooming/on non-responsive pages.\r\n                // See: https://bugs.webkit.org/show_bug.cgi?id=133112\r\n                if (!supportsPassive) {\r\n                    e.preventDefault();\r\n                }\r\n                e.calcPoint = e.points[options.ort];\r\n                // Call the event handler with the event [ and additional data ].\r\n                callback(e, data);\r\n                return;\r\n            };\r\n            var methods = [];\r\n            // Bind a closure on the target for every event type.\r\n            events.split(\" \").forEach(function (eventName) {\r\n                element.addEventListener(eventName, method, supportsPassive ? { passive: true } : false);\r\n                methods.push([eventName, method]);\r\n            });\r\n            return methods;\r\n        }\r\n        // Provide a clean event with standardized offset values.\r\n        function fixEvent(e, pageOffset, eventTarget) {\r\n            // Filter the event to register the type, which can be\r\n            // touch, mouse or pointer. Offset changes need to be\r\n            // made on an event specific basis.\r\n            var touch = e.type.indexOf(\"touch\") === 0;\r\n            var mouse = e.type.indexOf(\"mouse\") === 0;\r\n            var pointer = e.type.indexOf(\"pointer\") === 0;\r\n            var x = 0;\r\n            var y = 0;\r\n            // IE10 implemented pointer events with a prefix;\r\n            if (e.type.indexOf(\"MSPointer\") === 0) {\r\n                pointer = true;\r\n            }\r\n            // Erroneous events seem to be passed in occasionally on iOS/iPadOS after user finishes interacting with\r\n            // the slider. They appear to be of type MouseEvent, yet they don't have usual properties set. Ignore\r\n            // events that have no touches or buttons associated with them. (#1057, #1079, #1095)\r\n            if (e.type === \"mousedown\" && !e.buttons && !e.touches) {\r\n                return false;\r\n            }\r\n            // The only thing one handle should be concerned about is the touches that originated on top of it.\r\n            if (touch) {\r\n                // Returns true if a touch originated on the target.\r\n                var isTouchOnTarget = function (checkTouch) {\r\n                    var target = checkTouch.target;\r\n                    return (target === eventTarget ||\r\n                        eventTarget.contains(target) ||\r\n                        (e.composed && e.composedPath().shift() === eventTarget));\r\n                };\r\n                // In the case of touchstart events, we need to make sure there is still no more than one\r\n                // touch on the target so we look amongst all touches.\r\n                if (e.type === \"touchstart\") {\r\n                    var targetTouches = Array.prototype.filter.call(e.touches, isTouchOnTarget);\r\n                    // Do not support more than one touch per handle.\r\n                    if (targetTouches.length > 1) {\r\n                        return false;\r\n                    }\r\n                    x = targetTouches[0].pageX;\r\n                    y = targetTouches[0].pageY;\r\n                }\r\n                else {\r\n                    // In the other cases, find on changedTouches is enough.\r\n                    var targetTouch = Array.prototype.find.call(e.changedTouches, isTouchOnTarget);\r\n                    // Cancel if the target touch has not moved.\r\n                    if (!targetTouch) {\r\n                        return false;\r\n                    }\r\n                    x = targetTouch.pageX;\r\n                    y = targetTouch.pageY;\r\n                }\r\n            }\r\n            pageOffset = pageOffset || getPageOffset(scope_Document);\r\n            if (mouse || pointer) {\r\n                x = e.clientX + pageOffset.x;\r\n                y = e.clientY + pageOffset.y;\r\n            }\r\n            e.pageOffset = pageOffset;\r\n            e.points = [x, y];\r\n            e.cursor = mouse || pointer; // Fix #435\r\n            return e;\r\n        }\r\n        // Translate a coordinate in the document to a percentage on the slider\r\n        function calcPointToPercentage(calcPoint) {\r\n            var location = calcPoint - offset(scope_Base, options.ort);\r\n            var proposal = (location * 100) / baseSize();\r\n            // Clamp proposal between 0% and 100%\r\n            // Out-of-bound coordinates may occur when .noUi-base pseudo-elements\r\n            // are used (e.g. contained handles feature)\r\n            proposal = limit(proposal);\r\n            return options.dir ? 100 - proposal : proposal;\r\n        }\r\n        // Find handle closest to a certain percentage on the slider\r\n        function getClosestHandle(clickedPosition) {\r\n            var smallestDifference = 100;\r\n            var handleNumber = false;\r\n            scope_Handles.forEach(function (handle, index) {\r\n                // Disabled handles are ignored\r\n                if (isHandleDisabled(index)) {\r\n                    return;\r\n                }\r\n                var handlePosition = scope_Locations[index];\r\n                var differenceWithThisHandle = Math.abs(handlePosition - clickedPosition);\r\n                // Initial state\r\n                var clickAtEdge = differenceWithThisHandle === 100 && smallestDifference === 100;\r\n                // Difference with this handle is smaller than the previously checked handle\r\n                var isCloser = differenceWithThisHandle < smallestDifference;\r\n                var isCloserAfter = differenceWithThisHandle <= smallestDifference && clickedPosition > handlePosition;\r\n                if (isCloser || isCloserAfter || clickAtEdge) {\r\n                    handleNumber = index;\r\n                    smallestDifference = differenceWithThisHandle;\r\n                }\r\n            });\r\n            return handleNumber;\r\n        }\r\n        // Fire 'end' when a mouse or pen leaves the document.\r\n        function documentLeave(event, data) {\r\n            if (event.type === \"mouseout\" &&\r\n                event.target.nodeName === \"HTML\" &&\r\n                event.relatedTarget === null) {\r\n                eventEnd(event, data);\r\n            }\r\n        }\r\n        // Handle movement on document for handle and range drag.\r\n        function eventMove(event, data) {\r\n            // Fix #498\r\n            // Check value of .buttons in 'start' to work around a bug in IE10 mobile (data.buttonsProperty).\r\n            // https://connect.microsoft.com/IE/feedback/details/927005/mobile-ie10-windows-phone-buttons-property-of-pointermove-event-always-zero\r\n            // IE9 has .buttons and .which zero on mousemove.\r\n            // Firefox breaks the spec MDN defines.\r\n            if (navigator.appVersion.indexOf(\"MSIE 9\") === -1 && event.buttons === 0 && data.buttonsProperty !== 0) {\r\n                return eventEnd(event, data);\r\n            }\r\n            // Check if we are moving up or down\r\n            var movement = (options.dir ? -1 : 1) * (event.calcPoint - data.startCalcPoint);\r\n            // Convert the movement into a percentage of the slider width/height\r\n            var proposal = (movement * 100) / data.baseSize;\r\n            moveHandles(movement > 0, proposal, data.locations, data.handleNumbers, data.connect);\r\n        }\r\n        // Unbind move events on document, call callbacks.\r\n        function eventEnd(event, data) {\r\n            // The handle is no longer active, so remove the class.\r\n            if (data.handle) {\r\n                removeClass(data.handle, options.cssClasses.active);\r\n                scope_ActiveHandlesCount -= 1;\r\n            }\r\n            // Unbind the move and end events, which are added on 'start'.\r\n            data.listeners.forEach(function (c) {\r\n                scope_DocumentElement.removeEventListener(c[0], c[1]);\r\n            });\r\n            if (scope_ActiveHandlesCount === 0) {\r\n                // Remove dragging class.\r\n                removeClass(scope_Target, options.cssClasses.drag);\r\n                setZindex();\r\n                // Remove cursor styles and text-selection events bound to the body.\r\n                if (event.cursor) {\r\n                    scope_Body.style.cursor = \"\";\r\n                    scope_Body.removeEventListener(\"selectstart\", preventDefault);\r\n                }\r\n            }\r\n            if (options.events.smoothSteps) {\r\n                data.handleNumbers.forEach(function (handleNumber) {\r\n                    setHandle(handleNumber, scope_Locations[handleNumber], true, true, false, false);\r\n                });\r\n                data.handleNumbers.forEach(function (handleNumber) {\r\n                    fireEvent(\"update\", handleNumber);\r\n                });\r\n            }\r\n            data.handleNumbers.forEach(function (handleNumber) {\r\n                fireEvent(\"change\", handleNumber);\r\n                fireEvent(\"set\", handleNumber);\r\n                fireEvent(\"end\", handleNumber);\r\n            });\r\n        }\r\n        // Bind move events on document.\r\n        function eventStart(event, data) {\r\n            // Ignore event if any handle is disabled\r\n            if (data.handleNumbers.some(isHandleDisabled)) {\r\n                return;\r\n            }\r\n            var handle;\r\n            if (data.handleNumbers.length === 1) {\r\n                var handleOrigin = scope_Handles[data.handleNumbers[0]];\r\n                handle = handleOrigin.children[0];\r\n                scope_ActiveHandlesCount += 1;\r\n                // Mark the handle as 'active' so it can be styled.\r\n                addClass(handle, options.cssClasses.active);\r\n            }\r\n            // A drag should never propagate up to the 'tap' event.\r\n            event.stopPropagation();\r\n            // Record the event listeners.\r\n            var listeners = [];\r\n            // Attach the move and end events.\r\n            var moveEvent = attachEvent(actions.move, scope_DocumentElement, eventMove, {\r\n                // The event target has changed so we need to propagate the original one so that we keep\r\n                // relying on it to extract target touches.\r\n                target: event.target,\r\n                handle: handle,\r\n                connect: data.connect,\r\n                listeners: listeners,\r\n                startCalcPoint: event.calcPoint,\r\n                baseSize: baseSize(),\r\n                pageOffset: event.pageOffset,\r\n                handleNumbers: data.handleNumbers,\r\n                buttonsProperty: event.buttons,\r\n                locations: scope_Locations.slice(),\r\n            });\r\n            var endEvent = attachEvent(actions.end, scope_DocumentElement, eventEnd, {\r\n                target: event.target,\r\n                handle: handle,\r\n                listeners: listeners,\r\n                doNotReject: true,\r\n                handleNumbers: data.handleNumbers,\r\n            });\r\n            var outEvent = attachEvent(\"mouseout\", scope_DocumentElement, documentLeave, {\r\n                target: event.target,\r\n                handle: handle,\r\n                listeners: listeners,\r\n                doNotReject: true,\r\n                handleNumbers: data.handleNumbers,\r\n            });\r\n            // We want to make sure we pushed the listeners in the listener list rather than creating\r\n            // a new one as it has already been passed to the event handlers.\r\n            listeners.push.apply(listeners, moveEvent.concat(endEvent, outEvent));\r\n            // Text selection isn't an issue on touch devices,\r\n            // so adding cursor styles can be skipped.\r\n            if (event.cursor) {\r\n                // Prevent the 'I' cursor and extend the range-drag cursor.\r\n                scope_Body.style.cursor = getComputedStyle(event.target).cursor;\r\n                // Mark the target with a dragging state.\r\n                if (scope_Handles.length > 1) {\r\n                    addClass(scope_Target, options.cssClasses.drag);\r\n                }\r\n                // Prevent text selection when dragging the handles.\r\n                // In noUiSlider <= 9.2.0, this was handled by calling preventDefault on mouse/touch start/move,\r\n                // which is scroll blocking. The selectstart event is supported by FireFox starting from version 52,\r\n                // meaning the only holdout is iOS Safari. This doesn't matter: text selection isn't triggered there.\r\n                // The 'cursor' flag is false.\r\n                // See: http://caniuse.com/#search=selectstart\r\n                scope_Body.addEventListener(\"selectstart\", preventDefault, false);\r\n            }\r\n            data.handleNumbers.forEach(function (handleNumber) {\r\n                fireEvent(\"start\", handleNumber);\r\n            });\r\n        }\r\n        // Move closest handle to tapped location.\r\n        function eventTap(event) {\r\n            // The tap event shouldn't propagate up\r\n            event.stopPropagation();\r\n            var proposal = calcPointToPercentage(event.calcPoint);\r\n            var handleNumber = getClosestHandle(proposal);\r\n            // Tackle the case that all handles are 'disabled'.\r\n            if (handleNumber === false) {\r\n                return;\r\n            }\r\n            // Flag the slider as it is now in a transitional state.\r\n            // Transition takes a configurable amount of ms (default 300). Re-enable the slider after that.\r\n            if (!options.events.snap) {\r\n                addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);\r\n            }\r\n            setHandle(handleNumber, proposal, true, true);\r\n            setZindex();\r\n            fireEvent(\"slide\", handleNumber, true);\r\n            fireEvent(\"update\", handleNumber, true);\r\n            if (!options.events.snap) {\r\n                fireEvent(\"change\", handleNumber, true);\r\n                fireEvent(\"set\", handleNumber, true);\r\n            }\r\n            else {\r\n                eventStart(event, { handleNumbers: [handleNumber] });\r\n            }\r\n        }\r\n        // Fires a 'hover' event for a hovered mouse/pen position.\r\n        function eventHover(event) {\r\n            var proposal = calcPointToPercentage(event.calcPoint);\r\n            var to = scope_Spectrum.getStep(proposal);\r\n            var value = scope_Spectrum.fromStepping(to);\r\n            Object.keys(scope_Events).forEach(function (targetEvent) {\r\n                if (\"hover\" === targetEvent.split(\".\")[0]) {\r\n                    scope_Events[targetEvent].forEach(function (callback) {\r\n                        callback.call(scope_Self, value);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        // Handles keydown on focused handles\r\n        // Don't move the document when pressing arrow keys on focused handles\r\n        function eventKeydown(event, handleNumber) {\r\n            if (isSliderDisabled() || isHandleDisabled(handleNumber)) {\r\n                return false;\r\n            }\r\n            var horizontalKeys = [\"Left\", \"Right\"];\r\n            var verticalKeys = [\"Down\", \"Up\"];\r\n            var largeStepKeys = [\"PageDown\", \"PageUp\"];\r\n            var edgeKeys = [\"Home\", \"End\"];\r\n            if (options.dir && !options.ort) {\r\n                // On an right-to-left slider, the left and right keys act inverted\r\n                horizontalKeys.reverse();\r\n            }\r\n            else if (options.ort && !options.dir) {\r\n                // On a top-to-bottom slider, the up and down keys act inverted\r\n                verticalKeys.reverse();\r\n                largeStepKeys.reverse();\r\n            }\r\n            // Strip \"Arrow\" for IE compatibility. https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\r\n            var key = event.key.replace(\"Arrow\", \"\");\r\n            var isLargeDown = key === largeStepKeys[0];\r\n            var isLargeUp = key === largeStepKeys[1];\r\n            var isDown = key === verticalKeys[0] || key === horizontalKeys[0] || isLargeDown;\r\n            var isUp = key === verticalKeys[1] || key === horizontalKeys[1] || isLargeUp;\r\n            var isMin = key === edgeKeys[0];\r\n            var isMax = key === edgeKeys[1];\r\n            if (!isDown && !isUp && !isMin && !isMax) {\r\n                return true;\r\n            }\r\n            event.preventDefault();\r\n            var to;\r\n            if (isUp || isDown) {\r\n                var direction = isDown ? 0 : 1;\r\n                var steps = getNextStepsForHandle(handleNumber);\r\n                var step = steps[direction];\r\n                // At the edge of a slider, do nothing\r\n                if (step === null) {\r\n                    return false;\r\n                }\r\n                // No step set, use the default of 10% of the sub-range\r\n                if (step === false) {\r\n                    step = scope_Spectrum.getDefaultStep(scope_Locations[handleNumber], isDown, options.keyboardDefaultStep);\r\n                }\r\n                if (isLargeUp || isLargeDown) {\r\n                    step *= options.keyboardPageMultiplier;\r\n                }\r\n                else {\r\n                    step *= options.keyboardMultiplier;\r\n                }\r\n                // Step over zero-length ranges (#948);\r\n                step = Math.max(step, 0.0000001);\r\n                // Decrement for down steps\r\n                step = (isDown ? -1 : 1) * step;\r\n                to = scope_Values[handleNumber] + step;\r\n            }\r\n            else if (isMax) {\r\n                // End key\r\n                to = options.spectrum.xVal[options.spectrum.xVal.length - 1];\r\n            }\r\n            else {\r\n                // Home key\r\n                to = options.spectrum.xVal[0];\r\n            }\r\n            setHandle(handleNumber, scope_Spectrum.toStepping(to), true, true);\r\n            fireEvent(\"slide\", handleNumber);\r\n            fireEvent(\"update\", handleNumber);\r\n            fireEvent(\"change\", handleNumber);\r\n            fireEvent(\"set\", handleNumber);\r\n            return false;\r\n        }\r\n        // Attach events to several slider parts.\r\n        function bindSliderEvents(behaviour) {\r\n            // Attach the standard drag event to the handles.\r\n            if (!behaviour.fixed) {\r\n                scope_Handles.forEach(function (handle, index) {\r\n                    // These events are only bound to the visual handle\r\n                    // element, not the 'real' origin element.\r\n                    attachEvent(actions.start, handle.children[0], eventStart, {\r\n                        handleNumbers: [index],\r\n                    });\r\n                });\r\n            }\r\n            // Attach the tap event to the slider base.\r\n            if (behaviour.tap) {\r\n                attachEvent(actions.start, scope_Base, eventTap, {});\r\n            }\r\n            // Fire hover events\r\n            if (behaviour.hover) {\r\n                attachEvent(actions.move, scope_Base, eventHover, {\r\n                    hover: true,\r\n                });\r\n            }\r\n            // Make the range draggable.\r\n            if (behaviour.drag) {\r\n                scope_Connects.forEach(function (connect, index) {\r\n                    if (connect === false || index === 0 || index === scope_Connects.length - 1) {\r\n                        return;\r\n                    }\r\n                    var handleBefore = scope_Handles[index - 1];\r\n                    var handleAfter = scope_Handles[index];\r\n                    var eventHolders = [connect];\r\n                    var handlesToDrag = [handleBefore, handleAfter];\r\n                    var handleNumbersToDrag = [index - 1, index];\r\n                    addClass(connect, options.cssClasses.draggable);\r\n                    // When the range is fixed, the entire range can\r\n                    // be dragged by the handles. The handle in the first\r\n                    // origin will propagate the start event upward,\r\n                    // but it needs to be bound manually on the other.\r\n                    if (behaviour.fixed) {\r\n                        eventHolders.push(handleBefore.children[0]);\r\n                        eventHolders.push(handleAfter.children[0]);\r\n                    }\r\n                    if (behaviour.dragAll) {\r\n                        handlesToDrag = scope_Handles;\r\n                        handleNumbersToDrag = scope_HandleNumbers;\r\n                    }\r\n                    eventHolders.forEach(function (eventHolder) {\r\n                        attachEvent(actions.start, eventHolder, eventStart, {\r\n                            handles: handlesToDrag,\r\n                            handleNumbers: handleNumbersToDrag,\r\n                            connect: connect,\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        // Attach an event to this slider, possibly including a namespace\r\n        function bindEvent(namespacedEvent, callback) {\r\n            scope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];\r\n            scope_Events[namespacedEvent].push(callback);\r\n            // If the event bound is 'update,' fire it immediately for all handles.\r\n            if (namespacedEvent.split(\".\")[0] === \"update\") {\r\n                scope_Handles.forEach(function (a, index) {\r\n                    fireEvent(\"update\", index);\r\n                });\r\n            }\r\n        }\r\n        function isInternalNamespace(namespace) {\r\n            return namespace === INTERNAL_EVENT_NS.aria || namespace === INTERNAL_EVENT_NS.tooltips;\r\n        }\r\n        // Undo attachment of event\r\n        function removeEvent(namespacedEvent) {\r\n            var event = namespacedEvent && namespacedEvent.split(\".\")[0];\r\n            var namespace = event ? namespacedEvent.substring(event.length) : namespacedEvent;\r\n            Object.keys(scope_Events).forEach(function (bind) {\r\n                var tEvent = bind.split(\".\")[0];\r\n                var tNamespace = bind.substring(tEvent.length);\r\n                if ((!event || event === tEvent) && (!namespace || namespace === tNamespace)) {\r\n                    // only delete protected internal event if intentional\r\n                    if (!isInternalNamespace(tNamespace) || namespace === tNamespace) {\r\n                        delete scope_Events[bind];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        // External event handling\r\n        function fireEvent(eventName, handleNumber, tap) {\r\n            Object.keys(scope_Events).forEach(function (targetEvent) {\r\n                var eventType = targetEvent.split(\".\")[0];\r\n                if (eventName === eventType) {\r\n                    scope_Events[targetEvent].forEach(function (callback) {\r\n                        callback.call(\r\n                        // Use the slider public API as the scope ('this')\r\n                        scope_Self,\r\n                        // Return values as array, so arg_1[arg_2] is always valid.\r\n                        scope_Values.map(options.format.to),\r\n                        // Handle index, 0 or 1\r\n                        handleNumber,\r\n                        // Un-formatted slider values\r\n                        scope_Values.slice(),\r\n                        // Event is fired by tap, true or false\r\n                        tap || false,\r\n                        // Left offset of the handle, in relation to the slider\r\n                        scope_Locations.slice(),\r\n                        // add the slider public API to an accessible parameter when this is unavailable\r\n                        scope_Self);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        // Split out the handle positioning logic so the Move event can use it, too\r\n        function checkHandlePosition(reference, handleNumber, to, lookBackward, lookForward, getValue, smoothSteps) {\r\n            var distance;\r\n            // For sliders with multiple handles, limit movement to the other handle.\r\n            // Apply the margin option by adding it to the handle positions.\r\n            if (scope_Handles.length > 1 && !options.events.unconstrained) {\r\n                if (lookBackward && handleNumber > 0) {\r\n                    distance = scope_Spectrum.getAbsoluteDistance(reference[handleNumber - 1], options.margin, false);\r\n                    to = Math.max(to, distance);\r\n                }\r\n                if (lookForward && handleNumber < scope_Handles.length - 1) {\r\n                    distance = scope_Spectrum.getAbsoluteDistance(reference[handleNumber + 1], options.margin, true);\r\n                    to = Math.min(to, distance);\r\n                }\r\n            }\r\n            // The limit option has the opposite effect, limiting handles to a\r\n            // maximum distance from another. Limit must be > 0, as otherwise\r\n            // handles would be unmovable.\r\n            if (scope_Handles.length > 1 && options.limit) {\r\n                if (lookBackward && handleNumber > 0) {\r\n                    distance = scope_Spectrum.getAbsoluteDistance(reference[handleNumber - 1], options.limit, false);\r\n                    to = Math.min(to, distance);\r\n                }\r\n                if (lookForward && handleNumber < scope_Handles.length - 1) {\r\n                    distance = scope_Spectrum.getAbsoluteDistance(reference[handleNumber + 1], options.limit, true);\r\n                    to = Math.max(to, distance);\r\n                }\r\n            }\r\n            // The padding option keeps the handles a certain distance from the\r\n            // edges of the slider. Padding must be > 0.\r\n            if (options.padding) {\r\n                if (handleNumber === 0) {\r\n                    distance = scope_Spectrum.getAbsoluteDistance(0, options.padding[0], false);\r\n                    to = Math.max(to, distance);\r\n                }\r\n                if (handleNumber === scope_Handles.length - 1) {\r\n                    distance = scope_Spectrum.getAbsoluteDistance(100, options.padding[1], true);\r\n                    to = Math.min(to, distance);\r\n                }\r\n            }\r\n            if (!smoothSteps) {\r\n                to = scope_Spectrum.getStep(to);\r\n            }\r\n            // Limit percentage to the 0 - 100 range\r\n            to = limit(to);\r\n            // Return false if handle can't move\r\n            if (to === reference[handleNumber] && !getValue) {\r\n                return false;\r\n            }\r\n            return to;\r\n        }\r\n        // Uses slider orientation to create CSS rules. a = base value;\r\n        function inRuleOrder(v, a) {\r\n            var o = options.ort;\r\n            return (o ? a : v) + \", \" + (o ? v : a);\r\n        }\r\n        // Moves handle(s) by a percentage\r\n        // (bool, % to move, [% where handle started, ...], [index in scope_Handles, ...])\r\n        function moveHandles(upward, proposal, locations, handleNumbers, connect) {\r\n            var proposals = locations.slice();\r\n            // Store first handle now, so we still have it in case handleNumbers is reversed\r\n            var firstHandle = handleNumbers[0];\r\n            var smoothSteps = options.events.smoothSteps;\r\n            var b = [!upward, upward];\r\n            var f = [upward, !upward];\r\n            // Copy handleNumbers so we don't change the dataset\r\n            handleNumbers = handleNumbers.slice();\r\n            // Check to see which handle is 'leading'.\r\n            // If that one can't move the second can't either.\r\n            if (upward) {\r\n                handleNumbers.reverse();\r\n            }\r\n            // Step 1: get the maximum percentage that any of the handles can move\r\n            if (handleNumbers.length > 1) {\r\n                handleNumbers.forEach(function (handleNumber, o) {\r\n                    var to = checkHandlePosition(proposals, handleNumber, proposals[handleNumber] + proposal, b[o], f[o], false, smoothSteps);\r\n                    // Stop if one of the handles can't move.\r\n                    if (to === false) {\r\n                        proposal = 0;\r\n                    }\r\n                    else {\r\n                        proposal = to - proposals[handleNumber];\r\n                        proposals[handleNumber] = to;\r\n                    }\r\n                });\r\n            }\r\n            // If using one handle, check backward AND forward\r\n            else {\r\n                b = f = [true];\r\n            }\r\n            var state = false;\r\n            // Step 2: Try to set the handles with the found percentage\r\n            handleNumbers.forEach(function (handleNumber, o) {\r\n                state =\r\n                    setHandle(handleNumber, locations[handleNumber] + proposal, b[o], f[o], false, smoothSteps) || state;\r\n            });\r\n            // Step 3: If a handle moved, fire events\r\n            if (state) {\r\n                handleNumbers.forEach(function (handleNumber) {\r\n                    fireEvent(\"update\", handleNumber);\r\n                    fireEvent(\"slide\", handleNumber);\r\n                });\r\n                // If target is a connect, then fire drag event\r\n                if (connect != undefined) {\r\n                    fireEvent(\"drag\", firstHandle);\r\n                }\r\n            }\r\n        }\r\n        // Takes a base value and an offset. This offset is used for the connect bar size.\r\n        // In the initial design for this feature, the origin element was 1% wide.\r\n        // Unfortunately, a rounding bug in Chrome makes it impossible to implement this feature\r\n        // in this manner: https://bugs.chromium.org/p/chromium/issues/detail?id=798223\r\n        function transformDirection(a, b) {\r\n            return options.dir ? 100 - a - b : a;\r\n        }\r\n        // Updates scope_Locations and scope_Values, updates visual state\r\n        function updateHandlePosition(handleNumber, to) {\r\n            // Update locations.\r\n            scope_Locations[handleNumber] = to;\r\n            // Convert the value to the slider stepping/range.\r\n            scope_Values[handleNumber] = scope_Spectrum.fromStepping(to);\r\n            var translation = transformDirection(to, 0) - scope_DirOffset;\r\n            var translateRule = \"translate(\" + inRuleOrder(translation + \"%\", \"0\") + \")\";\r\n            scope_Handles[handleNumber].style[options.transformRule] = translateRule;\r\n            updateConnect(handleNumber);\r\n            updateConnect(handleNumber + 1);\r\n        }\r\n        // Handles before the slider middle are stacked later = higher,\r\n        // Handles after the middle later is lower\r\n        // [[7] [8] .......... | .......... [5] [4]\r\n        function setZindex() {\r\n            scope_HandleNumbers.forEach(function (handleNumber) {\r\n                var dir = scope_Locations[handleNumber] > 50 ? -1 : 1;\r\n                var zIndex = 3 + (scope_Handles.length + dir * handleNumber);\r\n                scope_Handles[handleNumber].style.zIndex = String(zIndex);\r\n            });\r\n        }\r\n        // Test suggested values and apply margin, step.\r\n        // if exactInput is true, don't run checkHandlePosition, then the handle can be placed in between steps (#436)\r\n        function setHandle(handleNumber, to, lookBackward, lookForward, exactInput, smoothSteps) {\r\n            if (!exactInput) {\r\n                to = checkHandlePosition(scope_Locations, handleNumber, to, lookBackward, lookForward, false, smoothSteps);\r\n            }\r\n            if (to === false) {\r\n                return false;\r\n            }\r\n            updateHandlePosition(handleNumber, to);\r\n            return true;\r\n        }\r\n        // Updates style attribute for connect nodes\r\n        function updateConnect(index) {\r\n            // Skip connects set to false\r\n            if (!scope_Connects[index]) {\r\n                return;\r\n            }\r\n            var l = 0;\r\n            var h = 100;\r\n            if (index !== 0) {\r\n                l = scope_Locations[index - 1];\r\n            }\r\n            if (index !== scope_Connects.length - 1) {\r\n                h = scope_Locations[index];\r\n            }\r\n            // We use two rules:\r\n            // 'translate' to change the left/top offset;\r\n            // 'scale' to change the width of the element;\r\n            // As the element has a width of 100%, a translation of 100% is equal to 100% of the parent (.noUi-base)\r\n            var connectWidth = h - l;\r\n            var translateRule = \"translate(\" + inRuleOrder(transformDirection(l, connectWidth) + \"%\", \"0\") + \")\";\r\n            var scaleRule = \"scale(\" + inRuleOrder(connectWidth / 100, \"1\") + \")\";\r\n            scope_Connects[index].style[options.transformRule] =\r\n                translateRule + \" \" + scaleRule;\r\n        }\r\n        // Parses value passed to .set method. Returns current value if not parse-able.\r\n        function resolveToValue(to, handleNumber) {\r\n            // Setting with null indicates an 'ignore'.\r\n            // Inputting 'false' is invalid.\r\n            if (to === null || to === false || to === undefined) {\r\n                return scope_Locations[handleNumber];\r\n            }\r\n            // If a formatted number was passed, attempt to decode it.\r\n            if (typeof to === \"number\") {\r\n                to = String(to);\r\n            }\r\n            to = options.format.from(to);\r\n            if (to !== false) {\r\n                to = scope_Spectrum.toStepping(to);\r\n            }\r\n            // If parsing the number failed, use the current value.\r\n            if (to === false || isNaN(to)) {\r\n                return scope_Locations[handleNumber];\r\n            }\r\n            return to;\r\n        }\r\n        // Set the slider value.\r\n        function valueSet(input, fireSetEvent, exactInput) {\r\n            var values = asArray(input);\r\n            var isInit = scope_Locations[0] === undefined;\r\n            // Event fires by default\r\n            fireSetEvent = fireSetEvent === undefined ? true : fireSetEvent;\r\n            // Animation is optional.\r\n            // Make sure the initial values were set before using animated placement.\r\n            if (options.animate && !isInit) {\r\n                addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);\r\n            }\r\n            // First pass, without lookAhead but with lookBackward. Values are set from left to right.\r\n            scope_HandleNumbers.forEach(function (handleNumber) {\r\n                setHandle(handleNumber, resolveToValue(values[handleNumber], handleNumber), true, false, exactInput);\r\n            });\r\n            var i = scope_HandleNumbers.length === 1 ? 0 : 1;\r\n            // Spread handles evenly across the slider if the range has no size (min=max)\r\n            if (isInit && scope_Spectrum.hasNoSize()) {\r\n                exactInput = true;\r\n                scope_Locations[0] = 0;\r\n                if (scope_HandleNumbers.length > 1) {\r\n                    var space_1 = 100 / (scope_HandleNumbers.length - 1);\r\n                    scope_HandleNumbers.forEach(function (handleNumber) {\r\n                        scope_Locations[handleNumber] = handleNumber * space_1;\r\n                    });\r\n                }\r\n            }\r\n            // Secondary passes. Now that all base values are set, apply constraints.\r\n            // Iterate all handles to ensure constraints are applied for the entire slider (Issue #1009)\r\n            for (; i < scope_HandleNumbers.length; ++i) {\r\n                scope_HandleNumbers.forEach(function (handleNumber) {\r\n                    setHandle(handleNumber, scope_Locations[handleNumber], true, true, exactInput);\r\n                });\r\n            }\r\n            setZindex();\r\n            scope_HandleNumbers.forEach(function (handleNumber) {\r\n                fireEvent(\"update\", handleNumber);\r\n                // Fire the event only for handles that received a new value, as per #579\r\n                if (values[handleNumber] !== null && fireSetEvent) {\r\n                    fireEvent(\"set\", handleNumber);\r\n                }\r\n            });\r\n        }\r\n        // Reset slider to initial values\r\n        function valueReset(fireSetEvent) {\r\n            valueSet(options.start, fireSetEvent);\r\n        }\r\n        // Set value for a single handle\r\n        function valueSetHandle(handleNumber, value, fireSetEvent, exactInput) {\r\n            // Ensure numeric input\r\n            handleNumber = Number(handleNumber);\r\n            if (!(handleNumber >= 0 && handleNumber < scope_HandleNumbers.length)) {\r\n                throw new Error(\"noUiSlider: invalid handle number, got: \" + handleNumber);\r\n            }\r\n            // Look both backward and forward, since we don't want this handle to \"push\" other handles (#960);\r\n            // The exactInput argument can be used to ignore slider stepping (#436)\r\n            setHandle(handleNumber, resolveToValue(value, handleNumber), true, true, exactInput);\r\n            fireEvent(\"update\", handleNumber);\r\n            if (fireSetEvent) {\r\n                fireEvent(\"set\", handleNumber);\r\n            }\r\n        }\r\n        // Get the slider value.\r\n        function valueGet(unencoded) {\r\n            if (unencoded === void 0) { unencoded = false; }\r\n            if (unencoded) {\r\n                // return a copy of the raw values\r\n                return scope_Values.length === 1 ? scope_Values[0] : scope_Values.slice(0);\r\n            }\r\n            var values = scope_Values.map(options.format.to);\r\n            // If only one handle is used, return a single value.\r\n            if (values.length === 1) {\r\n                return values[0];\r\n            }\r\n            return values;\r\n        }\r\n        // Removes classes from the root and empties it.\r\n        function destroy() {\r\n            // remove protected internal listeners\r\n            removeEvent(INTERNAL_EVENT_NS.aria);\r\n            removeEvent(INTERNAL_EVENT_NS.tooltips);\r\n            Object.keys(options.cssClasses).forEach(function (key) {\r\n                removeClass(scope_Target, options.cssClasses[key]);\r\n            });\r\n            while (scope_Target.firstChild) {\r\n                scope_Target.removeChild(scope_Target.firstChild);\r\n            }\r\n            delete scope_Target.noUiSlider;\r\n        }\r\n        function getNextStepsForHandle(handleNumber) {\r\n            var location = scope_Locations[handleNumber];\r\n            var nearbySteps = scope_Spectrum.getNearbySteps(location);\r\n            var value = scope_Values[handleNumber];\r\n            var increment = nearbySteps.thisStep.step;\r\n            var decrement = null;\r\n            // If snapped, directly use defined step value\r\n            if (options.snap) {\r\n                return [\r\n                    value - nearbySteps.stepBefore.startValue || null,\r\n                    nearbySteps.stepAfter.startValue - value || null,\r\n                ];\r\n            }\r\n            // If the next value in this step moves into the next step,\r\n            // the increment is the start of the next step - the current value\r\n            if (increment !== false) {\r\n                if (value + increment > nearbySteps.stepAfter.startValue) {\r\n                    increment = nearbySteps.stepAfter.startValue - value;\r\n                }\r\n            }\r\n            // If the value is beyond the starting point\r\n            if (value > nearbySteps.thisStep.startValue) {\r\n                decrement = nearbySteps.thisStep.step;\r\n            }\r\n            else if (nearbySteps.stepBefore.step === false) {\r\n                decrement = false;\r\n            }\r\n            // If a handle is at the start of a step, it always steps back into the previous step first\r\n            else {\r\n                decrement = value - nearbySteps.stepBefore.highestStep;\r\n            }\r\n            // Now, if at the slider edges, there is no in/decrement\r\n            if (location === 100) {\r\n                increment = null;\r\n            }\r\n            else if (location === 0) {\r\n                decrement = null;\r\n            }\r\n            // As per #391, the comparison for the decrement step can have some rounding issues.\r\n            var stepDecimals = scope_Spectrum.countStepDecimals();\r\n            // Round per #391\r\n            if (increment !== null && increment !== false) {\r\n                increment = Number(increment.toFixed(stepDecimals));\r\n            }\r\n            if (decrement !== null && decrement !== false) {\r\n                decrement = Number(decrement.toFixed(stepDecimals));\r\n            }\r\n            return [decrement, increment];\r\n        }\r\n        // Get the current step size for the slider.\r\n        function getNextSteps() {\r\n            return scope_HandleNumbers.map(getNextStepsForHandle);\r\n        }\r\n        // Updatable: margin, limit, padding, step, range, animate, snap\r\n        function updateOptions(optionsToUpdate, fireSetEvent) {\r\n            // Spectrum is created using the range, snap, direction and step options.\r\n            // 'snap' and 'step' can be updated.\r\n            // If 'snap' and 'step' are not passed, they should remain unchanged.\r\n            var v = valueGet();\r\n            var updateAble = [\r\n                \"margin\",\r\n                \"limit\",\r\n                \"padding\",\r\n                \"range\",\r\n                \"animate\",\r\n                \"snap\",\r\n                \"step\",\r\n                \"format\",\r\n                \"pips\",\r\n                \"tooltips\",\r\n            ];\r\n            // Only change options that we're actually passed to update.\r\n            updateAble.forEach(function (name) {\r\n                // Check for undefined. null removes the value.\r\n                if (optionsToUpdate[name] !== undefined) {\r\n                    originalOptions[name] = optionsToUpdate[name];\r\n                }\r\n            });\r\n            var newOptions = testOptions(originalOptions);\r\n            // Load new options into the slider state\r\n            updateAble.forEach(function (name) {\r\n                if (optionsToUpdate[name] !== undefined) {\r\n                    options[name] = newOptions[name];\r\n                }\r\n            });\r\n            scope_Spectrum = newOptions.spectrum;\r\n            // Limit, margin and padding depend on the spectrum but are stored outside of it. (#677)\r\n            options.margin = newOptions.margin;\r\n            options.limit = newOptions.limit;\r\n            options.padding = newOptions.padding;\r\n            // Update pips, removes existing.\r\n            if (options.pips) {\r\n                pips(options.pips);\r\n            }\r\n            else {\r\n                removePips();\r\n            }\r\n            // Update tooltips, removes existing.\r\n            if (options.tooltips) {\r\n                tooltips();\r\n            }\r\n            else {\r\n                removeTooltips();\r\n            }\r\n            // Invalidate the current positioning so valueSet forces an update.\r\n            scope_Locations = [];\r\n            valueSet(isSet(optionsToUpdate.start) ? optionsToUpdate.start : v, fireSetEvent);\r\n        }\r\n        // Initialization steps\r\n        function setupSlider() {\r\n            // Create the base element, initialize HTML and set classes.\r\n            // Add handles and connect elements.\r\n            scope_Base = addSlider(scope_Target);\r\n            addElements(options.connect, scope_Base);\r\n            // Attach user events.\r\n            bindSliderEvents(options.events);\r\n            // Use the public value method to set the start values.\r\n            valueSet(options.start);\r\n            if (options.pips) {\r\n                pips(options.pips);\r\n            }\r\n            if (options.tooltips) {\r\n                tooltips();\r\n            }\r\n            aria();\r\n        }\r\n        setupSlider();\r\n        var scope_Self = {\r\n            destroy: destroy,\r\n            steps: getNextSteps,\r\n            on: bindEvent,\r\n            off: removeEvent,\r\n            get: valueGet,\r\n            set: valueSet,\r\n            setHandle: valueSetHandle,\r\n            reset: valueReset,\r\n            // Exposed for unit testing, don't use this in your application.\r\n            __moveHandles: function (upward, proposal, handleNumbers) {\r\n                moveHandles(upward, proposal, scope_Locations, handleNumbers);\r\n            },\r\n            options: originalOptions,\r\n            updateOptions: updateOptions,\r\n            target: scope_Target,\r\n            removePips: removePips,\r\n            removeTooltips: removeTooltips,\r\n            getPositions: function () {\r\n                return scope_Locations.slice();\r\n            },\r\n            getTooltips: function () {\r\n                return scope_Tooltips;\r\n            },\r\n            getOrigins: function () {\r\n                return scope_Handles;\r\n            },\r\n            pips: pips, // Issue #594\r\n        };\r\n        return scope_Self;\r\n    }\r\n    // Run the standard initializer\r\n    function initialize(target, originalOptions) {\r\n        if (!target || !target.nodeName) {\r\n            throw new Error(\"noUiSlider: create requires a single element, got: \" + target);\r\n        }\r\n        // Throw an error if the slider was already initialized.\r\n        if (target.noUiSlider) {\r\n            throw new Error(\"noUiSlider: Slider was already initialized.\");\r\n        }\r\n        // Test the options and create the slider environment;\r\n        var options = testOptions(originalOptions);\r\n        var api = scope(target, options, originalOptions);\r\n        target.noUiSlider = api;\r\n        return api;\r\n    }\r\n    var nouislider = {\r\n        // Exposed for unit testing, don't use this in your application.\r\n        __spectrum: Spectrum,\r\n        // A reference to the default classes, allows global changes.\r\n        // Use the cssClasses option for changes to one slider.\r\n        cssClasses: cssClasses,\r\n        create: initialize,\r\n    };\r\n\r\n    exports.create = initialize;\r\n    exports.cssClasses = cssClasses;\r\n    exports[\"default\"] = nouislider;\r\n\r\n    Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n}));\r\n","// /*\r\n//  * A highly customizable rating widget that supports images, utf8 glyphs and other html elements!\r\n//  * https://github.com/auxiliary/rater\r\n//  */\r\n// ;(function ($, window){\r\n//     $.fn.textWidth = function()\r\n//     {\r\n//         var html_calc = $('<span>' + $(this).html() + '</span>');\r\n//         html_calc.css('font-size',$(this).css('font-size')).hide();\r\n//         html_calc.prependTo('body');\r\n//         var width = html_calc.width();\r\n//         html_calc.remove();\r\n\r\n//         if (width == 0)\r\n//         {\r\n//             var total = 0;\r\n//             $(this).eq(0).children().each(function(){\r\n//                 total += $(this).textWidth();\r\n//             });\r\n//             return total;\r\n//         }\r\n//         return width;\r\n//     };\r\n\r\n//     $.fn.textHeight = function()\r\n//     {\r\n//         var html_calc = $('<span>' + $(this).html() + '</span>');\r\n//         html_calc.css('font-size',$(this).css('font-size')).hide();\r\n//         html_calc.prependTo('body');\r\n//         var height = html_calc.height();\r\n//         html_calc.remove();\r\n//         return height;\r\n//     };\r\n\r\n//     /*\r\n//      * IE8 doesn't support isArray!\r\n//      */\r\n//     Array.isArray = function (obj) {\r\n//         return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n//     };\r\n\r\n//     /*\r\n//      * Utf-32 isn't supported by default, so we have to use Utf-8 surrogates\r\n//      */\r\n//     String.prototype.getCodePointLength = function() {\r\n//         return this.length-this.split(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g).length+1;\r\n//     };\r\n\r\n//     String.fromCodePoint= function() {\r\n//         var chars= Array.prototype.slice.call(arguments);\r\n//         for (var i= chars.length; i-->0;) {\r\n//             var n = chars[i]-0x10000;\r\n//             if (n>=0)\r\n//                 chars.splice(i, 1, 0xD800+(n>>10), 0xDC00+(n&0x3FF));\r\n//         }\r\n//         return String.fromCharCode.apply(null, chars);\r\n//     };\r\n\r\n//     /*\r\n//      * Starting the plugin itself\r\n//      */\r\n//     $.fn.rate = function(options)\r\n//     {\r\n//         if (options === undefined || typeof options === 'object')\r\n//         {\r\n//             return this.each(function(){\r\n//                 if (!$.data(this, \"rate\"))\r\n//                 {\r\n//                     $.data(this, \"rate\", new Rate(this, options));\r\n//                 }\r\n//             });\r\n//         }\r\n//         else if (typeof options === 'string')\r\n//         {\r\n//             var args = arguments;\r\n//             var returns;\r\n//             this.each(function(){\r\n//                 var instance = $.data(this, \"rate\");\r\n//                 if (instance instanceof Rate && typeof instance[options] === 'function')\r\n//                 {\r\n//                     returns = instance[options].apply(instance, Array.prototype.slice.call(args, 1));\r\n//                 }\r\n//                 if (options === 'destroy')\r\n//                 {\r\n//                     // Unbind all events and empty the plugin data from instance\r\n//                     $(instance.element).off();\r\n//                     $.data(this, 'rate', null);\r\n//                 }\r\n//             });\r\n\r\n//             return returns !== undefined ? returns : this;\r\n//         }\r\n//     };\r\n\r\n//     function Rate(element, options)\r\n//     {\r\n//         this.element = element;\r\n//         this.settings = $.extend({}, $.fn.rate.settings, options);\r\n//         this.set_faces = {}; // value, symbol pairs\r\n//         this.build();\r\n//     }\r\n\r\n//     Rate.prototype.build = function()\r\n//     {\r\n//         this.layers = {};\r\n//         this.value = 0;\r\n//         this.raise_select_layer = false;\r\n\r\n//         if (this.settings.initial_value)\r\n//         {\r\n//             this.value = this.settings.initial_value;\r\n//         }\r\n//         if ($(this.element).attr(\"data-rate-value\"))\r\n//         {\r\n//             this.value = $(this.element).attr(\"data-rate-value\");\r\n//         }\r\n\r\n//         /*\r\n//          * Calculate the selected width based on the initial value\r\n//          */\r\n//         var selected_width = this.value / this.settings.max_value * 100;\r\n\r\n//         /*\r\n//          * Let's support single strings as symbols as well as objects\r\n//          */\r\n//         if (typeof this.settings.symbols[this.settings.selected_symbol_type] === 'string')\r\n//         {\r\n//             var symbol = this.settings.symbols[this.settings.selected_symbol_type];\r\n//             this.settings.symbols[this.settings.selected_symbol_type] = {};\r\n//             this.settings.symbols[this.settings.selected_symbol_type]['base'] = symbol;\r\n//             this.settings.symbols[this.settings.selected_symbol_type]['selected'] = symbol;\r\n//             this.settings.symbols[this.settings.selected_symbol_type]['hover'] = symbol;\r\n//         }\r\n\r\n//         /*\r\n//          * Making the three main layers (base, select, hover)\r\n//          */\r\n//         var base_layer = this.addLayer(\"base-layer\", 100, this.settings.symbols[\r\n//             this.settings.selected_symbol_type][\"base\"], true);\r\n\r\n//         var select_layer = this.addLayer(\"select-layer\", selected_width,\r\n//             this.settings.symbols[this.settings.selected_symbol_type][\"selected\"], true);\r\n\r\n//         var hover_layer = this.addLayer(\"hover-layer\", 0, this.settings.symbols[\r\n//             this.settings.selected_symbol_type][\"hover\"], false);\r\n\r\n//         /* var face_layer = this.addLayer(\"face-layer\", 1, this.settings\r\n//             .symbols[this.settings.face_layer_symbol_type][0], true); */\r\n\r\n//         this.layers[\"base_layer\"] = base_layer;\r\n//         this.layers[\"select_layer\"] = select_layer;\r\n//         this.layers[\"hover_layer\"] = hover_layer;\r\n\r\n//         /*\r\n//          * Bind the container to some events\r\n//          */\r\n//         $(this.element).on(\"mousemove\", $.proxy(this.hover, this));\r\n//         $(this.element).on(\"click\", $.proxy(this.select, this));\r\n//         $(this.element).on(\"mouseleave\", $.proxy(this.mouseout, this));\r\n\r\n//         /*\r\n//          * Set the main element as unselectable\r\n//          */\r\n//         $(this.element).css({\r\n//             \"-webkit-touch-callout\": \"none\",\r\n//             \"-webkit-user-select\": \"none\",\r\n//             \"-khtml-user-select\": \"none\",\r\n//             \"-moz-user-select\": \"none\",\r\n//             \"-ms-user-select\": \"none\",\r\n//             \"user-select\": \"none\",\r\n//         });\r\n\r\n//         /*\r\n//          * Update custom input field if provided\r\n//          */\r\n//         if (this.settings.hasOwnProperty(\"update_input_field_name\"))\r\n//         {\r\n//             this.settings.update_input_field_name.val(this.value);\r\n//         }\r\n//     }\r\n\r\n//     /*\r\n//      * Function to add a layer\r\n//      */\r\n//     Rate.prototype.addLayer = function(layer_name, visible_width, symbol, visible)\r\n//     {\r\n//         var layer_body = \"<div>\";\r\n//         for (var i = 0; i < this.settings.max_value; i++)\r\n//         {\r\n//             if (Array.isArray(symbol))\r\n//             {\r\n//                 if (this.settings.convert_to_utf8)\r\n//                 {\r\n//                     symbol[i] = String.fromCodePoint(symbol[i]);\r\n//                 }\r\n//                 layer_body += \"<span>\" + (symbol[i]) + \"</span>\";\r\n//             }\r\n//             else\r\n//             {\r\n//                 if (this.settings.convert_to_utf8)\r\n//                 {\r\n//                     symbol = String.fromCodePoint(symbol);\r\n//                 }\r\n//                 layer_body += \"<span>\" + symbol + \"</span>\";\r\n//             }\r\n//         }\r\n//         layer_body += \"</div>\";\r\n//         var layer = $(layer_body).addClass(\"rate-\" + layer_name).appendTo(this.element);\r\n\r\n//         $(layer).css({\r\n//             width: visible_width + \"%\",\r\n//             height: $(layer).children().eq(0).textHeight(),\r\n//             overflow: 'hidden',\r\n//             position: 'absolute',\r\n//             top: 0,\r\n//             display: visible ? 'block' : 'none',\r\n//             'white-space': 'nowrap'\r\n//         });\r\n//         $(this.element).css({\r\n//             width: $(layer).textWidth() + \"px\",\r\n//             height: $(layer).height(),\r\n//             position: 'relative',\r\n//             cursor: this.settings.cursor,\r\n//         });\r\n\r\n//         return layer;\r\n//     }\r\n\r\n//     Rate.prototype.updateServer = function()\r\n//     {\r\n//         if (this.settings.url != undefined)\r\n//         {\r\n//             $.ajax({\r\n//                 url: this.settings.url,\r\n//                 type: this.settings.ajax_method,\r\n//                 data: $.extend({}, { value: this.getValue() }, this.settings.additional_data),\r\n//                 success: $.proxy(function(data){\r\n//                     $(this.element).trigger(\"updateSuccess\", [data]);\r\n//                 }, this),\r\n//                 error: $.proxy(function(jxhr, msg, err){\r\n//                     $(this.element).trigger(\"updateError\", [jxhr, msg, err]);\r\n//                 }, this)\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     Rate.prototype.getValue = function()\r\n//     {\r\n//         return this.value;\r\n//     }\r\n\r\n//     Rate.prototype.hover = function(ev)\r\n//     {\r\n//         var pad = parseInt($(this.element).css(\"padding-left\").replace(\"px\", \"\"));\r\n//         var x = ev.pageX - $(this.element).offset().left - pad;\r\n//         var val = this.toValue(x, true);\r\n\r\n//         if (val != this.value)\r\n//         {\r\n//             this.raise_select_layer = false;\r\n//         }\r\n\r\n//         if (!this.raise_select_layer && !this.settings.readonly)\r\n//         {\r\n//             var visible_width = this.toWidth(val);\r\n//             this.layers.select_layer.css({display: 'none'});\r\n//             if (!this.settings.only_select_one_symbol)\r\n//             {\r\n//                 this.layers.hover_layer.css({\r\n//                     width: visible_width + \"%\",\r\n//                     display: 'block'\r\n//                 });\r\n//             }\r\n//             else\r\n//             {\r\n//                 var index_value = Math.floor(val);\r\n//                 this.layers.hover_layer.css({\r\n//                     width: \"100%\",\r\n//                     display: 'block'\r\n//                 });\r\n//                 this.layers.hover_layer.children(\"span\").css({\r\n//                     visibility: 'hidden',\r\n//                 });\r\n//                 this.layers.hover_layer.children(\"span\").eq(index_value != 0 ? index_value - 1 : 0).css({\r\n//                     visibility: 'visible',\r\n//                 });\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     /*\r\n//      * Event for when a rating has been selected (clicked)\r\n//      */\r\n//     Rate.prototype.select = function(ev)\r\n//     {\r\n//         if (!this.settings.readonly)\r\n//         {\r\n//             var old_value = this.getValue();\r\n//             var pad = parseInt($(this.element).css(\"padding-left\").replace(\"px\", \"\"));\r\n//             var x = ev.pageX - $(this.element).offset().left - pad;\r\n//             var selected_width = this.toWidth(this.toValue(x, true));\r\n//             this.setValue(this.toValue(selected_width));\r\n//             this.raise_select_layer = true;\r\n//         }\r\n//     }\r\n\r\n//     Rate.prototype.mouseout = function()\r\n//     {\r\n//         this.layers.hover_layer.css({display: 'none'});\r\n//         this.layers.select_layer.css({display: 'block'});\r\n//     }\r\n\r\n//     /*\r\n//      * Takes a width (px) and returns the value it resembles\r\n//      */\r\n//     Rate.prototype.toWidth = function(val)\r\n//     {\r\n//         return val / this.settings.max_value * 100;\r\n//     }\r\n\r\n//     /*\r\n//      * Takes a value and calculates the width of the selected/hovered layer\r\n//      */\r\n//     Rate.prototype.toValue = function(width, in_pixels)\r\n//     {\r\n//         var val;\r\n//         if (in_pixels)\r\n//         {\r\n//             val = width / this.layers.base_layer.textWidth() * this.settings.max_value;\r\n//         }\r\n//         else\r\n//         {\r\n//             val = width / 100 * this.settings.max_value;\r\n//         }\r\n\r\n//         // Make sure the division doesn't cause some small numbers added by\r\n//         // comparing to a small arbitrary number.\r\n//         var temp = val / this.settings.step_size;\r\n//         if (temp - Math.floor(temp) < 0.00005)\r\n//         {\r\n//             val = Math.round(val / this.settings.step_size) * this.settings.step_size;\r\n//         }\r\n//         val = (Math.ceil(val / this.settings.step_size)) * this.settings.step_size;\r\n//         val = val > this.settings.max_value ? this.settings.max_value : val;\r\n//         return val;\r\n//     }\r\n\r\n//     Rate.prototype.getElement = function(layer_name, index)\r\n//     {\r\n//         return $(this.element).find(\".rate-\" + layer_name + \" span\").eq(index - 1);\r\n//     }\r\n\r\n//     Rate.prototype.getLayers = function()\r\n//     {\r\n//         return this.layers;\r\n//     }\r\n\r\n//     Rate.prototype.setFace = function(value, face)\r\n//     {\r\n//         this.set_faces[value] = face;\r\n//     }\r\n\r\n//     Rate.prototype.setAdditionalData = function(data)\r\n//     {\r\n//         this.settings.additional_data = data;\r\n//     }\r\n\r\n//     Rate.prototype.getAdditionalData = function()\r\n//     {\r\n//         return this.settings.additional_data;\r\n//     }\r\n\r\n//     Rate.prototype.removeFace = function(value)\r\n//     {\r\n//         delete this.set_faces[value];\r\n//     }\r\n\r\n//     Rate.prototype.setValue = function(value)\r\n//     {\r\n//         if (!this.settings.readonly)\r\n//         {\r\n//             if (value < 0)\r\n//             {\r\n//                 value = 0;\r\n//             }\r\n//             else if (value > this.settings.max_value)\r\n//             {\r\n//                 value = this.settings.max_value;\r\n//             }\r\n\r\n//             var old_value = this.getValue();\r\n//             this.value = value;\r\n\r\n//             /*\r\n//              * About to change event, should support prevention later\r\n//              */\r\n//             var change_event = $(this.element).trigger(\"change\", {\r\n//                 \"from\": old_value,\r\n//                 \"to\": this.value\r\n//             });\r\n\r\n//             /*\r\n//              * Set/Reset faces\r\n//              */\r\n//             $(this.element).find(\".rate-face\").remove();\r\n//             $(this.element).find(\"span\").css({\r\n//                 visibility: 'visible'\r\n//             });\r\n//             var index_value = Math.ceil(this.value);\r\n//             if (this.set_faces.hasOwnProperty(index_value))\r\n//             {\r\n//                 var face = \"<div>\" + this.set_faces[index_value] + \"</div>\";\r\n//                 var base_layer_element = this.getElement('base-layer', index_value);\r\n//                 var select_layer_element = this.getElement('select-layer', index_value);\r\n//                 var hover_layer_element = this.getElement('hover-layer', index_value);\r\n\r\n//                 var left_pos = base_layer_element.textWidth() * (index_value - 1)\r\n//                     + (base_layer_element.textWidth() - $(face).textWidth()) / 2;\r\n\r\n//                 $(face).appendTo(this.element).css({\r\n//                     display: 'inline-block',\r\n//                     position: 'absolute',\r\n//                     left: left_pos,\r\n//                 }).addClass(\"rate-face\");\r\n\r\n//                 base_layer_element.css({\r\n//                     visibility: 'hidden'\r\n//                 });\r\n//                 select_layer_element.css({\r\n//                     visibility: 'hidden'\r\n//                 });\r\n//                 hover_layer_element.css({\r\n//                     visibility: 'hidden'\r\n//                 });\r\n//             }\r\n\r\n//             /*\r\n//              * Set styles based on width and value\r\n//              */\r\n//             if (!this.settings.only_select_one_symbol)\r\n//             {\r\n//                 var width = this.toWidth(this.value);\r\n//                 this.layers.select_layer.css({\r\n//                     display: 'block',\r\n//                     width: width + \"%\",\r\n//                     height: this.layers.base_layer.css(\"height\")\r\n//                 });\r\n//                 this.layers.hover_layer.css({\r\n//                     display: 'none',\r\n//                     height: this.layers.base_layer.css(\"height\")\r\n//                 });\r\n//             }\r\n//             else\r\n//             {\r\n//                 var width = this.toWidth(this.settings.max_value);\r\n//                 this.layers.select_layer.css({\r\n//                     display: 'block',\r\n//                     width: width + \"%\",\r\n//                     height: this.layers.base_layer.css(\"height\")\r\n//                 });\r\n//                 this.layers.hover_layer.css({\r\n//                     display: 'none',\r\n//                     height: this.layers.base_layer.css(\"height\")\r\n//                 });\r\n//                 this.layers.select_layer.children(\"span\").css({\r\n//                     visibility: 'hidden',\r\n//                 });\r\n//                 this.layers.select_layer.children(\"span\").eq(index_value != 0 ? index_value - 1 : 0).css({\r\n//                     visibility: 'visible',\r\n//                 });\r\n//             }\r\n\r\n//             // Update the data-rate-value attribute\r\n//             $(this.element).attr(\"data-rate-value\", this.value);\r\n\r\n//             if (this.settings.change_once)\r\n//             {\r\n//                 this.settings.readonly = true;\r\n//             }\r\n//             this.updateServer();\r\n\r\n//             /*\r\n//              * After change event\r\n//              */\r\n//             var change_event = $(this.element).trigger(\"afterChange\", {\r\n//                 \"from\": old_value,\r\n//                 \"to\": this.value\r\n//             });\r\n\r\n//             /*\r\n//              * Update custom input field if provided\r\n//              */\r\n//             if (this.settings.hasOwnProperty(\"update_input_field_name\"))\r\n//             {\r\n//                 this.settings.update_input_field_name.val(this.value);\r\n//             }\r\n\r\n//         }\r\n//     }\r\n\r\n//     Rate.prototype.increment = function()\r\n//     {\r\n//         this.setValue(this.getValue() + this.settings.step_size);\r\n//     }\r\n\r\n//     Rate.prototype.decrement = function()\r\n//     {\r\n//         this.setValue(this.getValue() - this.settings.step_size);\r\n//     }\r\n\r\n//     $.fn.rate.settings = {\r\n//         max_value: 5,\r\n//         step_size: 0.5,\r\n//         initial_value: 0,\r\n//         symbols: {\r\n//             utf8_star: {\r\n//                 base: '\\u2606',\r\n//                 hover: '\\u2605',\r\n//                 selected: '\\u2605',\r\n//             },\r\n//             utf8_hexagon: {\r\n//                 base: '\\u2B21',\r\n//                 hover: '\\u2B22',\r\n//                 selected: '\\u2B22',\r\n//             },\r\n//             hearts: '&hearts;',\r\n//             fontawesome_beer: '<i class=\"fas fa-beer\"></i>',\r\n//             fontawesome_star: {\r\n//                 base: '<i class=\"far fa-star\"></i>',\r\n//                 hover: '<i class=\"fas fa-star\"></i>',\r\n//                 selected: '<i class=\"fas fa-star\"></i>',\r\n//             },\r\n//             utf8_emoticons: {\r\n//                 base: [0x1F625, 0x1F613, 0x1F612, 0x1F604],\r\n//                 hover: [0x1F625, 0x1F613, 0x1F612, 0x1F604],\r\n//                 selected: [0x1F625, 0x1F613, 0x1F612, 0x1F604],\r\n//             },\r\n//         },\r\n//         selected_symbol_type: 'utf8_star', // Must be a key from symbols\r\n//         convert_to_utf8: false,\r\n//         cursor: 'default',\r\n//         readonly: false,\r\n//         change_once: false, // Determines if the rating can only be set once\r\n//         only_select_one_symbol: false, // If set to true, only selects the hovered/selected symbol and nothing prior to it\r\n//         ajax_method: 'POST',\r\n//         additional_data: {}, // Additional data to send to the server\r\n//         //update_input_field_name = some input field set by the user\r\n//     };\r\n\r\n// }(jQuery, window));\r\n","const swiper = () => {\n\n  /**\n * Swiper 7.4.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2021 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: December 24, 2021\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * SSR Window 4.0.2\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2021, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: December 13, 2021\n   */\n\n  /* eslint-disable no-param-reassign */\n  function isObject$1(obj) {\n    return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n  }\n\n  function extend$1(target = {}, src = {}) {\n    Object.keys(src).forEach(key => {\n      if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\n        extend$1(target[key], src[key]);\n      }\n    });\n  }\n\n  const ssrDocument = {\n    body: {},\n\n    addEventListener() {},\n\n    removeEventListener() {},\n\n    activeElement: {\n      blur() {},\n\n      nodeName: ''\n    },\n\n    querySelector() {\n      return null;\n    },\n\n    querySelectorAll() {\n      return [];\n    },\n\n    getElementById() {\n      return null;\n    },\n\n    createEvent() {\n      return {\n        initEvent() {}\n\n      };\n    },\n\n    createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n\n        setAttribute() {},\n\n        getElementsByTagName() {\n          return [];\n        }\n\n      };\n    },\n\n    createElementNS() {\n      return {};\n    },\n\n    importNode() {\n      return null;\n    },\n\n    location: {\n      hash: '',\n      host: '',\n      hostname: '',\n      href: '',\n      origin: '',\n      pathname: '',\n      protocol: '',\n      search: ''\n    }\n  };\n\n  function getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend$1(doc, ssrDocument);\n    return doc;\n  }\n\n  const ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n      userAgent: ''\n    },\n    location: {\n      hash: '',\n      host: '',\n      hostname: '',\n      href: '',\n      origin: '',\n      pathname: '',\n      protocol: '',\n      search: ''\n    },\n    history: {\n      replaceState() {},\n\n      pushState() {},\n\n      go() {},\n\n      back() {}\n\n    },\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n\n    addEventListener() {},\n\n    removeEventListener() {},\n\n    getComputedStyle() {\n      return {\n        getPropertyValue() {\n          return '';\n        }\n\n      };\n    },\n\n    Image() {},\n\n    Date() {},\n\n    screen: {},\n\n    setTimeout() {},\n\n    clearTimeout() {},\n\n    matchMedia() {\n      return {};\n    },\n\n    requestAnimationFrame(callback) {\n      if (typeof setTimeout === 'undefined') {\n        callback();\n        return null;\n      }\n\n      return setTimeout(callback, 0);\n    },\n\n    cancelAnimationFrame(id) {\n      if (typeof setTimeout === 'undefined') {\n        return;\n      }\n\n      clearTimeout(id);\n    }\n\n  };\n\n  function getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend$1(win, ssrWindow);\n    return win;\n  }\n\n  /**\n   * Dom7 4.0.2\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * https://framework7.io/docs/dom7.html\n   *\n   * Copyright 2021, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: December 13, 2021\n   */\n  /* eslint-disable no-proto */\n\n  function makeReactive(obj) {\n    const proto = obj.__proto__;\n    Object.defineProperty(obj, '__proto__', {\n      get() {\n        return proto;\n      },\n\n      set(value) {\n        proto.__proto__ = value;\n      }\n\n    });\n  }\n\n  class Dom7 extends Array {\n    constructor(items) {\n      super(...(items || []));\n      makeReactive(this);\n    }\n\n  }\n\n  function arrayFlat(arr = []) {\n    const res = [];\n    arr.forEach(el => {\n      if (Array.isArray(el)) {\n        res.push(...arrayFlat(el));\n      } else {\n        res.push(el);\n      }\n    });\n    return res;\n  }\n\n  function arrayFilter(arr, callback) {\n    return Array.prototype.filter.call(arr, callback);\n  }\n\n  function arrayUnique(arr) {\n    const uniqueArray = [];\n\n    for (let i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n    }\n\n    return uniqueArray;\n  }\n\n\n  function qsa(selector, context) {\n    if (typeof selector !== 'string') {\n      return [selector];\n    }\n\n    const a = [];\n    const res = context.querySelectorAll(selector);\n\n    for (let i = 0; i < res.length; i += 1) {\n      a.push(res[i]);\n    }\n\n    return a;\n  }\n\n  function $(selector, context) {\n    const window = getWindow();\n    const document = getDocument();\n    let arr = [];\n\n    if (!context && selector instanceof Dom7) {\n      return selector;\n    }\n\n    if (!selector) {\n      return new Dom7(arr);\n    }\n\n    if (typeof selector === 'string') {\n      const html = selector.trim();\n\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        const tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n\n        for (let i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        arr = qsa(selector.trim(), context || document);\n      } // arr = qsa(selector, document);\n\n    } else if (selector.nodeType || selector === window || selector === document) {\n      arr.push(selector);\n    } else if (Array.isArray(selector)) {\n      if (selector instanceof Dom7) return selector;\n      arr = selector;\n    }\n\n    return new Dom7(arrayUnique(arr));\n  }\n\n  $.fn = Dom7.prototype; // eslint-disable-next-line\n\n  function addClass(...classes) {\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\n    this.forEach(el => {\n      el.classList.add(...classNames);\n    });\n    return this;\n  }\n\n  function removeClass(...classes) {\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\n    this.forEach(el => {\n      el.classList.remove(...classNames);\n    });\n    return this;\n  }\n\n  function toggleClass(...classes) {\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\n    this.forEach(el => {\n      classNames.forEach(className => {\n        el.classList.toggle(className);\n      });\n    });\n  }\n\n  function hasClass(...classes) {\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\n    return arrayFilter(this, el => {\n      return classNames.filter(className => el.classList.contains(className)).length > 0;\n    }).length > 0;\n  }\n\n  function attr(attrs, value) {\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) return this[0].getAttribute(attrs);\n      return undefined;\n    } // Set attrs\n\n\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        for (const attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function removeAttr(attr) {\n    for (let i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n\n    return this;\n  }\n\n  function transform(transform) {\n    for (let i = 0; i < this.length; i += 1) {\n      this[i].style.transform = transform;\n    }\n\n    return this;\n  }\n\n  function transition$1(duration) {\n    for (let i = 0; i < this.length; i += 1) {\n      this[i].style.transitionDuration = typeof duration !== 'string' ? `${duration}ms` : duration;\n    }\n\n    return this;\n  }\n\n  function on(...args) {\n    let [eventType, targetSelector, listener, capture] = args;\n\n    if (typeof args[1] === 'function') {\n      [eventType, listener, capture] = args;\n      targetSelector = undefined;\n    }\n\n    if (!capture) capture = false;\n\n    function handleLiveEvent(e) {\n      const target = e.target;\n      if (!target) return;\n      const eventData = e.target.dom7EventData || [];\n\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n\n      if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n        const parents = $(target).parents(); // eslint-disable-line\n\n        for (let k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n        }\n      }\n    }\n\n    function handleEvent(e) {\n      const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n\n      listener.apply(this, eventData);\n    }\n\n    const events = eventType.split(' ');\n    let j;\n\n    for (let i = 0; i < this.length; i += 1) {\n      const el = this[i];\n\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          const event = events[j];\n          if (!el.dom7Listeners) el.dom7Listeners = {};\n          if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n          el.dom7Listeners[event].push({\n            listener,\n            proxyListener: handleEvent\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          const event = events[j];\n          if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n          if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n          el.dom7LiveListeners[event].push({\n            listener,\n            proxyListener: handleLiveEvent\n          });\n          el.addEventListener(event, handleLiveEvent, capture);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function off(...args) {\n    let [eventType, targetSelector, listener, capture] = args;\n\n    if (typeof args[1] === 'function') {\n      [eventType, listener, capture] = args;\n      targetSelector = undefined;\n    }\n\n    if (!capture) capture = false;\n    const events = eventType.split(' ');\n\n    for (let i = 0; i < events.length; i += 1) {\n      const event = events[i];\n\n      for (let j = 0; j < this.length; j += 1) {\n        const el = this[j];\n        let handlers;\n\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n\n        if (handlers && handlers.length) {\n          for (let k = handlers.length - 1; k >= 0; k -= 1) {\n            const handler = handlers[k];\n\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function trigger(...args) {\n    const window = getWindow();\n    const events = args[0].split(' ');\n    const eventData = args[1];\n\n    for (let i = 0; i < events.length; i += 1) {\n      const event = events[i];\n\n      for (let j = 0; j < this.length; j += 1) {\n        const el = this[j];\n\n        if (window.CustomEvent) {\n          const evt = new window.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true\n          });\n          el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n          el.dispatchEvent(evt);\n          el.dom7EventData = [];\n          delete el.dom7EventData;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function transitionEnd$1(callback) {\n    const dom = this;\n\n    function fireCallBack(e) {\n      if (e.target !== this) return;\n      callback.call(this, e);\n      dom.off('transitionend', fireCallBack);\n    }\n\n    if (callback) {\n      dom.on('transitionend', fireCallBack);\n    }\n\n    return this;\n  }\n\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        const styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n\n      return this[0].offsetWidth;\n    }\n\n    return null;\n  }\n\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        const styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n\n      return this[0].offsetHeight;\n    }\n\n    return null;\n  }\n\n  function offset() {\n    if (this.length > 0) {\n      const window = getWindow();\n      const document = getDocument();\n      const el = this[0];\n      const box = el.getBoundingClientRect();\n      const body = document.body;\n      const clientTop = el.clientTop || body.clientTop || 0;\n      const clientLeft = el.clientLeft || body.clientLeft || 0;\n      const scrollTop = el === window ? window.scrollY : el.scrollTop;\n      const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n      return {\n        top: box.top + scrollTop - clientTop,\n        left: box.left + scrollLeft - clientLeft\n      };\n    }\n\n    return null;\n  }\n\n  function styles() {\n    const window = getWindow();\n    if (this[0]) return window.getComputedStyle(this[0], null);\n    return {};\n  }\n\n  function css(props, value) {\n    const window = getWindow();\n    let i;\n\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        // .css('width')\n        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n      } else {\n        // .css({ width: '100px' })\n        for (i = 0; i < this.length; i += 1) {\n          for (const prop in props) {\n            this[i].style[prop] = props[prop];\n          }\n        }\n\n        return this;\n      }\n    }\n\n    if (arguments.length === 2 && typeof props === 'string') {\n      // .css('width', '100px')\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n\n      return this;\n    }\n\n    return this;\n  }\n\n  function each(callback) {\n    if (!callback) return this;\n    this.forEach((el, index) => {\n      callback.apply(el, [el, index]);\n    });\n    return this;\n  }\n\n  function filter(callback) {\n    const result = arrayFilter(this, callback);\n    return $(result);\n  }\n\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : null;\n    }\n\n    for (let i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n\n    return this;\n  }\n\n  function text(text) {\n    if (typeof text === 'undefined') {\n      return this[0] ? this[0].textContent.trim() : null;\n    }\n\n    for (let i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n\n    return this;\n  }\n\n  function is(selector) {\n    const window = getWindow();\n    const document = getDocument();\n    const el = this[0];\n    let compareWith;\n    let i;\n    if (!el || typeof selector === 'undefined') return false;\n\n    if (typeof selector === 'string') {\n      if (el.matches) return el.matches(selector);\n      if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n      if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n      compareWith = $(selector);\n\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) return true;\n      }\n\n      return false;\n    }\n\n    if (selector === document) {\n      return el === document;\n    }\n\n    if (selector === window) {\n      return el === window;\n    }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  function index() {\n    let child = this[0];\n    let i;\n\n    if (child) {\n      i = 0; // eslint-disable-next-line\n\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) i += 1;\n      }\n\n      return i;\n    }\n\n    return undefined;\n  }\n\n  function eq(index) {\n    if (typeof index === 'undefined') return this;\n    const length = this.length;\n\n    if (index > length - 1) {\n      return $([]);\n    }\n\n    if (index < 0) {\n      const returnIndex = length + index;\n      if (returnIndex < 0) return $([]);\n      return $([this[returnIndex]]);\n    }\n\n    return $([this[index]]);\n  }\n\n  function append(...els) {\n    let newChild;\n    const document = getDocument();\n\n    for (let k = 0; k < els.length; k += 1) {\n      newChild = els[k];\n\n      for (let i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          const tempDiv = document.createElement('div');\n          tempDiv.innerHTML = newChild;\n\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (let j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function prepend(newChild) {\n    const document = getDocument();\n    let i;\n    let j;\n\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n\n    return this;\n  }\n\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return $([this[0].nextElementSibling]);\n        }\n\n        return $([]);\n      }\n\n      if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n      return $([]);\n    }\n\n    return $([]);\n  }\n\n  function nextAll(selector) {\n    const nextEls = [];\n    let el = this[0];\n    if (!el) return $([]);\n\n    while (el.nextElementSibling) {\n      const next = el.nextElementSibling; // eslint-disable-line\n\n      if (selector) {\n        if ($(next).is(selector)) nextEls.push(next);\n      } else nextEls.push(next);\n\n      el = next;\n    }\n\n    return $(nextEls);\n  }\n\n  function prev(selector) {\n    if (this.length > 0) {\n      const el = this[0];\n\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return $([el.previousElementSibling]);\n        }\n\n        return $([]);\n      }\n\n      if (el.previousElementSibling) return $([el.previousElementSibling]);\n      return $([]);\n    }\n\n    return $([]);\n  }\n\n  function prevAll(selector) {\n    const prevEls = [];\n    let el = this[0];\n    if (!el) return $([]);\n\n    while (el.previousElementSibling) {\n      const prev = el.previousElementSibling; // eslint-disable-line\n\n      if (selector) {\n        if ($(prev).is(selector)) prevEls.push(prev);\n      } else prevEls.push(prev);\n\n      el = prev;\n    }\n\n    return $(prevEls);\n  }\n\n  function parent(selector) {\n    const parents = []; // eslint-disable-line\n\n    for (let i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n\n    return $(parents);\n  }\n\n  function parents(selector) {\n    const parents = []; // eslint-disable-line\n\n    for (let i = 0; i < this.length; i += 1) {\n      let parent = this[i].parentNode; // eslint-disable-line\n\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) parents.push(parent);\n        } else {\n          parents.push(parent);\n        }\n\n        parent = parent.parentNode;\n      }\n    }\n\n    return $(parents);\n  }\n\n  function closest(selector) {\n    let closest = this; // eslint-disable-line\n\n    if (typeof selector === 'undefined') {\n      return $([]);\n    }\n\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n\n    return closest;\n  }\n\n  function find(selector) {\n    const foundElements = [];\n\n    for (let i = 0; i < this.length; i += 1) {\n      const found = this[i].querySelectorAll(selector);\n\n      for (let j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n\n    return $(foundElements);\n  }\n\n  function children(selector) {\n    const children = []; // eslint-disable-line\n\n    for (let i = 0; i < this.length; i += 1) {\n      const childNodes = this[i].children;\n\n      for (let j = 0; j < childNodes.length; j += 1) {\n        if (!selector || $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n\n    return $(children);\n  }\n\n  function remove() {\n    for (let i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n    }\n\n    return this;\n  }\n\n  const Methods = {\n    addClass,\n    removeClass,\n    hasClass,\n    toggleClass,\n    attr,\n    removeAttr,\n    transform,\n    transition: transition$1,\n    on,\n    off,\n    trigger,\n    transitionEnd: transitionEnd$1,\n    outerWidth,\n    outerHeight,\n    styles,\n    offset,\n    css,\n    each,\n    html,\n    text,\n    is,\n    index,\n    eq,\n    append,\n    prepend,\n    next,\n    nextAll,\n    prev,\n    prevAll,\n    parent,\n    parents,\n    closest,\n    find,\n    children,\n    filter,\n    remove\n  };\n  Object.keys(Methods).forEach(methodName => {\n    Object.defineProperty($.fn, methodName, {\n      value: Methods[methodName],\n      writable: true\n    });\n  });\n\n  function deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach(key => {\n      try {\n        object[key] = null;\n      } catch (e) {// no getter for object\n      }\n\n      try {\n        delete object[key];\n      } catch (e) {// something got wrong\n      }\n    });\n  }\n\n  function nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  }\n\n  function now() {\n    return Date.now();\n  }\n\n  function getComputedStyle$1(el) {\n    const window = getWindow();\n    let style;\n\n    if (window.getComputedStyle) {\n      style = window.getComputedStyle(el, null);\n    }\n\n    if (!style && el.currentStyle) {\n      style = el.currentStyle;\n    }\n\n    if (!style) {\n      style = el.style;\n    }\n\n    return style;\n  }\n\n  function getTranslate(el, axis = 'x') {\n    const window = getWindow();\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n    const curStyle = getComputedStyle$1(el);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      } // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n\n\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n\n    return curTransform || 0;\n  }\n\n  function isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n  }\n\n  function isNode(node) {\n    // eslint-disable-next-line\n    if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n      return node instanceof HTMLElement;\n    }\n\n    return node && (node.nodeType === 1 || node.nodeType === 11);\n  }\n\n  function extend(...args) {\n    const to = Object(args[0]);\n    const noExtend = ['__proto__', 'constructor', 'prototype'];\n\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n\n      if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n        const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n          if (desc !== undefined && desc.enumerable) {\n            if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n              if (nextSource[nextKey].__swiper__) {\n                to[nextKey] = nextSource[nextKey];\n              } else {\n                extend(to[nextKey], nextSource[nextKey]);\n              }\n            } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n\n              if (nextSource[nextKey].__swiper__) {\n                to[nextKey] = nextSource[nextKey];\n              } else {\n                extend(to[nextKey], nextSource[nextKey]);\n              }\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n\n    return to;\n  }\n\n  function setCSSProperty(el, varName, varValue) {\n    el.style.setProperty(varName, varValue);\n  }\n\n  function animateCSSModeScroll({\n    swiper,\n    targetPosition,\n    side\n  }) {\n    const window = getWindow();\n    const startPosition = -swiper.translate;\n    let startTime = null;\n    let time;\n    const duration = swiper.params.speed;\n    swiper.wrapperEl.style.scrollSnapType = 'none';\n    window.cancelAnimationFrame(swiper.cssModeFrameID);\n    const dir = targetPosition > startPosition ? 'next' : 'prev';\n\n    const isOutOfBound = (current, target) => {\n      return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n    };\n\n    const animate = () => {\n      time = new Date().getTime();\n\n      if (startTime === null) {\n        startTime = time;\n      }\n\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n      let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n\n      if (isOutOfBound(currentPosition, targetPosition)) {\n        currentPosition = targetPosition;\n      }\n\n      swiper.wrapperEl.scrollTo({\n        [side]: currentPosition\n      });\n\n      if (isOutOfBound(currentPosition, targetPosition)) {\n        swiper.wrapperEl.style.overflow = 'hidden';\n        swiper.wrapperEl.style.scrollSnapType = '';\n        setTimeout(() => {\n          swiper.wrapperEl.style.overflow = '';\n          swiper.wrapperEl.scrollTo({\n            [side]: currentPosition\n          });\n        });\n        window.cancelAnimationFrame(swiper.cssModeFrameID);\n        return;\n      }\n\n      swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n    };\n\n    animate();\n  }\n\n  let support;\n\n  function calcSupport() {\n    const window = getWindow();\n    const document = getDocument();\n    return {\n      smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n      touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\n      passiveListener: function checkPassiveListener() {\n        let supportsPassive = false;\n\n        try {\n          const opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get() {\n              supportsPassive = true;\n            }\n\n          });\n          window.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {// No support\n        }\n\n        return supportsPassive;\n      }(),\n      gestures: function checkGestures() {\n        return 'ongesturestart' in window;\n      }()\n    };\n  }\n\n  function getSupport() {\n    if (!support) {\n      support = calcSupport();\n    }\n\n    return support;\n  }\n\n  let deviceCached;\n\n  function calcDevice({\n    userAgent\n  } = {}) {\n    const support = getSupport();\n    const window = getWindow();\n    const platform = window.navigator.platform;\n    const ua = userAgent || window.navigator.userAgent;\n    const device = {\n      ios: false,\n      android: false\n    };\n    const screenWidth = window.screen.width;\n    const screenHeight = window.screen.height;\n    const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n    let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n    const windows = platform === 'Win32';\n    let macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n    const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n    if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n      ipad = ua.match(/(Version)\\/([\\d.]+)/);\n      if (!ipad) ipad = [0, 1, '13_0_0'];\n      macos = false;\n    } // Android\n\n\n    if (android && !windows) {\n      device.os = 'android';\n      device.android = true;\n    }\n\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    } // Export object\n\n\n    return device;\n  }\n\n  function getDevice(overrides = {}) {\n    if (!deviceCached) {\n      deviceCached = calcDevice(overrides);\n    }\n\n    return deviceCached;\n  }\n\n  let browser;\n\n  function calcBrowser() {\n    const window = getWindow();\n\n    function isSafari() {\n      const ua = window.navigator.userAgent.toLowerCase();\n      return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n    }\n\n    return {\n      isSafari: isSafari(),\n      isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n    };\n  }\n\n  function getBrowser() {\n    if (!browser) {\n      browser = calcBrowser();\n    }\n\n    return browser;\n  }\n\n  function Resize({\n    swiper,\n    on,\n    emit\n  }) {\n    const window = getWindow();\n    let observer = null;\n\n    const resizeHandler = () => {\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\n      emit('beforeResize');\n      emit('resize');\n    };\n\n    const createObserver = () => {\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\n      observer = new ResizeObserver(entries => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n      observer.observe(swiper.el);\n    };\n\n    const removeObserver = () => {\n      if (observer && observer.unobserve && swiper.el) {\n        observer.unobserve(swiper.el);\n        observer = null;\n      }\n    };\n\n    const orientationChangeHandler = () => {\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\n      emit('orientationchange');\n    };\n\n    on('init', () => {\n      if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n        createObserver();\n        return;\n      }\n\n      window.addEventListener('resize', resizeHandler);\n      window.addEventListener('orientationchange', orientationChangeHandler);\n    });\n    on('destroy', () => {\n      removeObserver();\n      window.removeEventListener('resize', resizeHandler);\n      window.removeEventListener('orientationchange', orientationChangeHandler);\n    });\n  }\n\n  function Observer({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    const observers = [];\n    const window = getWindow();\n\n    const attach = (target, options = {}) => {\n      const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n      const observer = new ObserverFunc(mutations => {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          emit('observerUpdate', mutations[0]);\n          return;\n        }\n\n        const observerUpdate = function observerUpdate() {\n          emit('observerUpdate', mutations[0]);\n        };\n\n        if (window.requestAnimationFrame) {\n          window.requestAnimationFrame(observerUpdate);\n        } else {\n          window.setTimeout(observerUpdate, 0);\n        }\n      });\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n      });\n      observers.push(observer);\n    };\n\n    const init = () => {\n      if (!swiper.params.observer) return;\n\n      if (swiper.params.observeParents) {\n        const containerParents = swiper.$el.parents();\n\n        for (let i = 0; i < containerParents.length; i += 1) {\n          attach(containerParents[i]);\n        }\n      } // Observe container\n\n\n      attach(swiper.$el[0], {\n        childList: swiper.params.observeSlideChildren\n      }); // Observe wrapper\n\n      attach(swiper.$wrapperEl[0], {\n        attributes: false\n      });\n    };\n\n    const destroy = () => {\n      observers.forEach(observer => {\n        observer.disconnect();\n      });\n      observers.splice(0, observers.length);\n    };\n\n    extendParams({\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false\n    });\n    on('init', init);\n    on('destroy', destroy);\n  }\n\n  /* eslint-disable no-underscore-dangle */\n  var eventsEmitter = {\n    on(events, handler, priority) {\n      const self = this;\n      if (typeof handler !== 'function') return self;\n      const method = priority ? 'unshift' : 'push';\n      events.split(' ').forEach(event => {\n        if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n        self.eventsListeners[event][method](handler);\n      });\n      return self;\n    },\n\n    once(events, handler, priority) {\n      const self = this;\n      if (typeof handler !== 'function') return self;\n\n      function onceHandler(...args) {\n        self.off(events, onceHandler);\n\n        if (onceHandler.__emitterProxy) {\n          delete onceHandler.__emitterProxy;\n        }\n\n        handler.apply(self, args);\n      }\n\n      onceHandler.__emitterProxy = handler;\n      return self.on(events, onceHandler, priority);\n    },\n\n    onAny(handler, priority) {\n      const self = this;\n      if (typeof handler !== 'function') return self;\n      const method = priority ? 'unshift' : 'push';\n\n      if (self.eventsAnyListeners.indexOf(handler) < 0) {\n        self.eventsAnyListeners[method](handler);\n      }\n\n      return self;\n    },\n\n    offAny(handler) {\n      const self = this;\n      if (!self.eventsAnyListeners) return self;\n      const index = self.eventsAnyListeners.indexOf(handler);\n\n      if (index >= 0) {\n        self.eventsAnyListeners.splice(index, 1);\n      }\n\n      return self;\n    },\n\n    off(events, handler) {\n      const self = this;\n      if (!self.eventsListeners) return self;\n      events.split(' ').forEach(event => {\n        if (typeof handler === 'undefined') {\n          self.eventsListeners[event] = [];\n        } else if (self.eventsListeners[event]) {\n          self.eventsListeners[event].forEach((eventHandler, index) => {\n            if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n              self.eventsListeners[event].splice(index, 1);\n            }\n          });\n        }\n      });\n      return self;\n    },\n\n    emit(...args) {\n      const self = this;\n      if (!self.eventsListeners) return self;\n      let events;\n      let data;\n      let context;\n\n      if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n        events = args[0];\n        data = args.slice(1, args.length);\n        context = self;\n      } else {\n        events = args[0].events;\n        data = args[0].data;\n        context = args[0].context || self;\n      }\n\n      data.unshift(context);\n      const eventsArray = Array.isArray(events) ? events : events.split(' ');\n      eventsArray.forEach(event => {\n        if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n          self.eventsAnyListeners.forEach(eventHandler => {\n            eventHandler.apply(context, [event, ...data]);\n          });\n        }\n\n        if (self.eventsListeners && self.eventsListeners[event]) {\n          self.eventsListeners[event].forEach(eventHandler => {\n            eventHandler.apply(context, data);\n          });\n        }\n      });\n      return self;\n    }\n\n  };\n\n  function updateSize() {\n    const swiper = this;\n    let width;\n    let height;\n    const $el = swiper.$el;\n\n    if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n\n    if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n\n    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n      return;\n    } // Subtract paddings\n\n\n    width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\n    height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\n    if (Number.isNaN(width)) width = 0;\n    if (Number.isNaN(height)) height = 0;\n    Object.assign(swiper, {\n      width,\n      height,\n      size: swiper.isHorizontal() ? width : height\n    });\n  }\n\n  function updateSlides() {\n    const swiper = this;\n\n    function getDirectionLabel(property) {\n      if (swiper.isHorizontal()) {\n        return property;\n      } // prettier-ignore\n\n\n      return {\n        'width': 'height',\n        'margin-top': 'margin-left',\n        'margin-bottom ': 'margin-right',\n        'margin-left': 'margin-top',\n        'margin-right': 'margin-bottom',\n        'padding-left': 'padding-top',\n        'padding-right': 'padding-bottom',\n        'marginRight': 'marginBottom'\n      }[property];\n    }\n\n    function getDirectionPropertyValue(node, label) {\n      return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n    }\n\n    const params = swiper.params;\n    const {\n      $wrapperEl,\n      size: swiperSize,\n      rtlTranslate: rtl,\n      wrongRTL\n    } = swiper;\n    const isVirtual = swiper.virtual && params.virtual.enabled;\n    const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n    const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    let snapGrid = [];\n    const slidesGrid = [];\n    const slidesSizesGrid = [];\n    let offsetBefore = params.slidesOffsetBefore;\n\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    let offsetAfter = params.slidesOffsetAfter;\n\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    const previousSnapGridLength = swiper.snapGrid.length;\n    const previousSlidesGridLength = swiper.slidesGrid.length;\n    let spaceBetween = params.spaceBetween;\n    let slidePosition = -offsetBefore;\n    let prevSlideSize = 0;\n    let index = 0;\n\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween; // reset margins\n\n    if (rtl) slides.css({\n      marginLeft: '',\n      marginBottom: '',\n      marginTop: ''\n    });else slides.css({\n      marginRight: '',\n      marginBottom: '',\n      marginTop: ''\n    }); // reset cssMode offsets\n\n    if (params.centeredSlides && params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', '');\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', '');\n    }\n\n    const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n\n    if (gridEnabled) {\n      swiper.grid.initSlides(slidesLength);\n    } // Calc slides\n\n\n    let slideSize;\n    const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n      return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n    }).length > 0;\n\n    for (let i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      const slide = slides.eq(i);\n\n      if (gridEnabled) {\n        swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n      }\n\n      if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        if (shouldResetSlideSize) {\n          slides[i].style[getDirectionLabel('width')] = ``;\n        }\n\n        const slideStyles = getComputedStyle(slide[0]);\n        const currentTransform = slide[0].style.transform;\n        const currentWebKitTransform = slide[0].style.webkitTransform;\n\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          const width = getDirectionPropertyValue(slideStyles, 'width');\n          const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n          const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n          const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n          const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            const {\n              clientWidth,\n              offsetWidth\n            } = slide[0];\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n          }\n        }\n\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n      } else {\n        slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n        if (slides[i]) {\n          slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n        }\n      }\n\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n\n      slidesSizesGrid.push(slideSize);\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n        if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n        if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n      prevSlideSize = slideSize;\n      index += 1;\n    }\n\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n\n    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({\n        width: `${swiper.virtualSize + params.spaceBetween}px`\n      });\n    }\n\n    if (params.setWrapperSize) {\n      $wrapperEl.css({\n        [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`\n      });\n    }\n\n    if (gridEnabled) {\n      swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n    } // Remove last grid elements depending on width\n\n\n    if (!params.centeredSlides) {\n      const newSlidesGrid = [];\n\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n\n        if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem);\n        }\n      }\n\n      snapGrid = newSlidesGrid;\n\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n\n    if (snapGrid.length === 0) snapGrid = [0];\n\n    if (params.spaceBetween !== 0) {\n      const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n      slides.filter((_, slideIndex) => {\n        if (!params.cssMode) return true;\n\n        if (slideIndex === slides.length - 1) {\n          return false;\n        }\n\n        return true;\n      }).css({\n        [key]: `${spaceBetween}px`\n      });\n    }\n\n    if (params.centeredSlides && params.centeredSlidesBounds) {\n      let allSlidesSize = 0;\n      slidesSizesGrid.forEach(slideSizeValue => {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      const maxSnap = allSlidesSize - swiperSize;\n      snapGrid = snapGrid.map(snap => {\n        if (snap < 0) return -offsetBefore;\n        if (snap > maxSnap) return maxSnap + offsetAfter;\n        return snap;\n      });\n    }\n\n    if (params.centerInsufficientSlides) {\n      let allSlidesSize = 0;\n      slidesSizesGrid.forEach(slideSizeValue => {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n\n      if (allSlidesSize < swiperSize) {\n        const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n        snapGrid.forEach((snap, snapIndex) => {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach((snap, snapIndex) => {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    Object.assign(swiper, {\n      slides,\n      snapGrid,\n      slidesGrid,\n      slidesSizesGrid\n    });\n\n    if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n      const addToSnapGrid = -swiper.snapGrid[0];\n      const addToSlidesGrid = -swiper.slidesGrid[0];\n      swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n      swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n    }\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) swiper.checkOverflow();\n      swiper.emit('snapGridLengthChange');\n    }\n\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight(speed) {\n    const swiper = this;\n    const activeSlides = [];\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let newHeight = 0;\n    let i;\n\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n\n    const getSlideByIndex = index => {\n      if (isVirtual) {\n        return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\n      }\n\n      return swiper.slides.eq(index)[0];\n    }; // Find slides currently in view\n\n\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      if (swiper.params.centeredSlides) {\n        swiper.visibleSlides.each(slide => {\n          activeSlides.push(slide);\n        });\n      } else {\n        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n          const index = swiper.activeIndex + i;\n          if (index > swiper.slides.length && !isVirtual) break;\n          activeSlides.push(getSlideByIndex(index));\n        }\n      }\n    } else {\n      activeSlides.push(getSlideByIndex(swiper.activeIndex));\n    } // Find new height from highest slide in view\n\n\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        const height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    } // Update Height\n\n\n    if (newHeight || newHeight === 0) swiper.$wrapperEl.css('height', `${newHeight}px`);\n  }\n\n  function updateSlidesOffset() {\n    const swiper = this;\n    const slides = swiper.slides;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress(translate = this && this.translate || 0) {\n    const swiper = this;\n    const params = swiper.params;\n    const {\n      slides,\n      rtlTranslate: rtl,\n      snapGrid\n    } = swiper;\n    if (slides.length === 0) return;\n    if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n    let offsetCenter = -translate;\n    if (rtl) offsetCenter = translate; // Visible Slides\n\n    slides.removeClass(params.slideVisibleClass);\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const slide = slides[i];\n      let slideOffset = slide.swiperSlideOffset;\n\n      if (params.cssMode && params.centeredSlides) {\n        slideOffset -= slides[0].swiperSlideOffset;\n      }\n\n      const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n      const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n      const slideBefore = -(offsetCenter - slideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n\n      slide.progress = rtl ? -slideProgress : slideProgress;\n      slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n    }\n\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress(translate) {\n    const swiper = this;\n\n    if (typeof translate === 'undefined') {\n      const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n      translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n    }\n\n    const params = swiper.params;\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    let {\n      progress,\n      isBeginning,\n      isEnd\n    } = swiper;\n    const wasBeginning = isBeginning;\n    const wasEnd = isEnd;\n\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / translatesDiff;\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n\n    Object.assign(swiper, {\n      progress,\n      isBeginning,\n      isEnd\n    });\n    if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n\n    if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses() {\n    const swiper = this;\n    const {\n      slides,\n      params,\n      $wrapperEl,\n      activeIndex,\n      realIndex\n    } = swiper;\n    const isVirtual = swiper.virtual && params.virtual.enabled;\n    slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n    let activeSlide;\n\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    } // Active classes\n\n\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n      }\n    } // Next Slide\n\n\n    let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    } // Prev Slide\n\n\n    let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n      }\n\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n      }\n    }\n\n    swiper.emitSlidesClasses();\n  }\n\n  function updateActiveIndex(newActiveIndex) {\n    const swiper = this;\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    const {\n      slidesGrid,\n      snapGrid,\n      params,\n      activeIndex: previousIndex,\n      realIndex: previousRealIndex,\n      snapIndex: previousSnapIndex\n    } = swiper;\n    let activeIndex = newActiveIndex;\n    let snapIndex;\n\n    if (typeof activeIndex === 'undefined') {\n      for (let i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      } // Normalize slideIndex\n\n\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n      }\n    }\n\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n      snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n    }\n\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n\n      return;\n    } // Get real index\n\n\n    const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n    Object.assign(swiper, {\n      snapIndex,\n      realIndex,\n      previousIndex,\n      activeIndex\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n\n    if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n      swiper.emit('slideChange');\n    }\n  }\n\n  function updateClickedSlide(e) {\n    const swiper = this;\n    const params = swiper.params;\n    const slide = $(e).closest(`.${params.slideClass}`)[0];\n    let slideFound = false;\n    let slideIndex;\n\n    if (slide) {\n      for (let i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) {\n          slideFound = true;\n          slideIndex = i;\n          break;\n        }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = slideIndex;\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize,\n    updateSlides,\n    updateAutoHeight,\n    updateSlidesOffset,\n    updateSlidesProgress,\n    updateProgress,\n    updateSlidesClasses,\n    updateActiveIndex,\n    updateClickedSlide\n  };\n\n  function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n    const swiper = this;\n    const {\n      params,\n      rtlTranslate: rtl,\n      translate,\n      $wrapperEl\n    } = swiper;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    if (params.cssMode) {\n      return translate;\n    }\n\n    let currentTranslate = getTranslate($wrapperEl[0], axis);\n    if (rtl) currentTranslate = -currentTranslate;\n    return currentTranslate || 0;\n  }\n\n  function setTranslate(translate, byController) {\n    const swiper = this;\n    const {\n      rtlTranslate: rtl,\n      params,\n      $wrapperEl,\n      wrapperEl,\n      progress\n    } = swiper;\n    let x = 0;\n    let y = 0;\n    const z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (params.cssMode) {\n      wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n    } else if (!params.virtualTranslate) {\n      $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    }\n\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n    let newProgress;\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n    }\n\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate() {\n    return -this.snapGrid[0];\n  }\n\n  function maxTranslate() {\n    return -this.snapGrid[this.snapGrid.length - 1];\n  }\n\n  function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n    const swiper = this;\n    const {\n      params,\n      wrapperEl\n    } = swiper;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    const minTranslate = swiper.minTranslate();\n    const maxTranslate = swiper.maxTranslate();\n    let newTranslate;\n    if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\n\n    swiper.updateProgress(newTranslate);\n\n    if (params.cssMode) {\n      const isH = swiper.isHorizontal();\n\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      } else {\n        if (!swiper.support.smoothScroll) {\n          animateCSSModeScroll({\n            swiper,\n            targetPosition: -newTranslate,\n            side: isH ? 'left' : 'top'\n          });\n          return true;\n        }\n\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth'\n        });\n      }\n\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(newTranslate);\n\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionEnd');\n      }\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(newTranslate);\n\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionStart');\n      }\n\n      if (!swiper.animating) {\n        swiper.animating = true;\n\n        if (!swiper.onTranslateToWrapperTransitionEnd) {\n          swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.onTranslateToWrapperTransitionEnd = null;\n            delete swiper.onTranslateToWrapperTransitionEnd;\n\n            if (runCallbacks) {\n              swiper.emit('transitionEnd');\n            }\n          };\n        }\n\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  var translate = {\n    getTranslate: getSwiperTranslate,\n    setTranslate,\n    minTranslate,\n    maxTranslate,\n    translateTo\n  };\n\n  function setTransition(duration, byController) {\n    const swiper = this;\n\n    if (!swiper.params.cssMode) {\n      swiper.$wrapperEl.transition(duration);\n    }\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step\n  }) {\n    const {\n      activeIndex,\n      previousIndex\n    } = swiper;\n    let dir = direction;\n\n    if (!dir) {\n      if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n    }\n\n    swiper.emit(`transition${step}`);\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit(`slideResetTransition${step}`);\n        return;\n      }\n\n      swiper.emit(`slideChangeTransition${step}`);\n\n      if (dir === 'next') {\n        swiper.emit(`slideNextTransition${step}`);\n      } else {\n        swiper.emit(`slidePrevTransition${step}`);\n      }\n    }\n  }\n\n  function transitionStart(runCallbacks = true, direction) {\n    const swiper = this;\n    const {\n      params\n    } = swiper;\n    if (params.cssMode) return;\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    transitionEmit({\n      swiper,\n      runCallbacks,\n      direction,\n      step: 'Start'\n    });\n  }\n\n  function transitionEnd(runCallbacks = true, direction) {\n    const swiper = this;\n    const {\n      params\n    } = swiper;\n    swiper.animating = false;\n    if (params.cssMode) return;\n    swiper.setTransition(0);\n    transitionEmit({\n      swiper,\n      runCallbacks,\n      direction,\n      step: 'End'\n    });\n  }\n\n  var transition = {\n    setTransition,\n    transitionStart,\n    transitionEnd\n  };\n\n  function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n    if (typeof index !== 'number' && typeof index !== 'string') {\n      throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`);\n    }\n\n    if (typeof index === 'string') {\n      /**\n       * The `index` argument converted from `string` to `number`.\n       * @type {number}\n       */\n      const indexAsNumber = parseInt(index, 10);\n      /**\n       * Determines whether the `index` argument is a valid `number`\n       * after being converted from the `string` type.\n       * @type {boolean}\n       */\n\n      const isValidNumber = isFinite(indexAsNumber);\n\n      if (!isValidNumber) {\n        throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\n      } // Knowing that the converted `index` is a valid number,\n      // we can update the original argument's value.\n\n\n      index = indexAsNumber;\n    }\n\n    const swiper = this;\n    let slideIndex = index;\n    if (slideIndex < 0) slideIndex = 0;\n    const {\n      params,\n      snapGrid,\n      slidesGrid,\n      previousIndex,\n      activeIndex,\n      rtlTranslate: rtl,\n      wrapperEl,\n      enabled\n    } = swiper;\n\n    if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n      return false;\n    }\n\n    const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n    let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    const translate = -snapGrid[snapIndex]; // Update progress\n\n    swiper.updateProgress(translate); // Normalize slideIndex\n\n    if (params.normalizeSlideIndex) {\n      for (let i = 0; i < slidesGrid.length; i += 1) {\n        const normalizedTranslate = -Math.floor(translate * 100);\n        const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n        const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n            slideIndex = i;\n          } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n            slideIndex = i + 1;\n          }\n        } else if (normalizedTranslate >= normalizedGrid) {\n          slideIndex = i;\n        }\n      }\n    } // Directions locks\n\n\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) return false;\n      }\n    }\n\n    let direction;\n    if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n      swiper.updateActiveIndex(slideIndex); // Update Height\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n\n      swiper.updateSlidesClasses();\n\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n\n      return false;\n    }\n\n    if (params.cssMode) {\n      const isH = swiper.isHorizontal();\n      const t = rtl ? translate : -translate;\n\n      if (speed === 0) {\n        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n        if (isVirtual) {\n          swiper.wrapperEl.style.scrollSnapType = 'none';\n          swiper._immediateVirtual = true;\n        }\n\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n\n        if (isVirtual) {\n          requestAnimationFrame(() => {\n            swiper.wrapperEl.style.scrollSnapType = '';\n            swiper._swiperImmediateVirtual = false;\n          });\n        }\n      } else {\n        if (!swiper.support.smoothScroll) {\n          animateCSSModeScroll({\n            swiper,\n            targetPosition: t,\n            side: isH ? 'left' : 'top'\n          });\n          return true;\n        }\n\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: t,\n          behavior: 'smooth'\n        });\n      }\n\n      return true;\n    }\n\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n\n    if (speed === 0) {\n      swiper.transitionEnd(runCallbacks, direction);\n    } else if (!swiper.animating) {\n      swiper.animating = true;\n\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n\n    return true;\n  }\n\n  function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n    const swiper = this;\n    let newIndex = index;\n\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n    const swiper = this;\n    const {\n      animating,\n      enabled,\n      params\n    } = swiper;\n    if (!enabled) return swiper;\n    let perGroup = params.slidesPerGroup;\n\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n    }\n\n    const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n\n    if (params.loop) {\n      if (animating && params.loopPreventsSlide) return false;\n      swiper.loopFix(); // eslint-disable-next-line\n\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n\n    if (params.rewind && swiper.isEnd) {\n      return swiper.slideTo(0, speed, runCallbacks, internal);\n    }\n\n    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n    const swiper = this;\n    const {\n      params,\n      animating,\n      snapGrid,\n      slidesGrid,\n      rtlTranslate,\n      enabled\n    } = swiper;\n    if (!enabled) return swiper;\n\n    if (params.loop) {\n      if (animating && params.loopPreventsSlide) return false;\n      swiper.loopFix(); // eslint-disable-next-line\n\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n\n    const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n    function normalize(val) {\n      if (val < 0) return -Math.floor(Math.abs(val));\n      return Math.floor(val);\n    }\n\n    const normalizedTranslate = normalize(translate);\n    const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n    let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n    if (typeof prevSnap === 'undefined' && params.cssMode) {\n      let prevSnapIndex;\n      snapGrid.forEach((snap, snapIndex) => {\n        if (normalizedTranslate >= snap) {\n          // prevSnap = snap;\n          prevSnapIndex = snapIndex;\n        }\n      });\n\n      if (typeof prevSnapIndex !== 'undefined') {\n        prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n      }\n    }\n\n    let prevIndex = 0;\n\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n\n      if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n        prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n        prevIndex = Math.max(prevIndex, 0);\n      }\n    }\n\n    if (params.rewind && swiper.isBeginning) {\n      return swiper.slideTo(swiper.slides.length - 1, speed, runCallbacks, internal);\n    }\n\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n    const swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n    const swiper = this;\n    let index = swiper.activeIndex;\n    const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n    const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    if (translate >= swiper.snapGrid[snapIndex]) {\n      // The current translate is on or after the current snap index, so the choice\n      // is between the current index and the one after it.\n      const currentSnap = swiper.snapGrid[snapIndex];\n      const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n        index += swiper.params.slidesPerGroup;\n      }\n    } else {\n      // The current translate is before the current snap index, so the choice\n      // is between the current index and the one before it.\n      const prevSnap = swiper.snapGrid[snapIndex - 1];\n      const currentSnap = swiper.snapGrid[snapIndex];\n\n      if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n        index -= swiper.params.slidesPerGroup;\n      }\n    }\n\n    index = Math.max(index, 0);\n    index = Math.min(index, swiper.slidesGrid.length - 1);\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide() {\n    const swiper = this;\n    const {\n      params,\n      $wrapperEl\n    } = swiper;\n    const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    let slideToIndex = swiper.clickedIndex;\n    let realIndex;\n\n    if (params.loop) {\n      if (swiper.animating) return;\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n\n      if (params.centeredSlides) {\n        if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n          nextTick(() => {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo,\n    slideToLoop,\n    slideNext,\n    slidePrev,\n    slideReset,\n    slideToClosest,\n    slideToClickedSlide\n  };\n\n  function loopCreate() {\n    const swiper = this;\n    const document = getDocument();\n    const {\n      params,\n      $wrapperEl\n    } = swiper; // Remove duplicated slides\n\n    const $selector = $wrapperEl.children().length > 0 ? $($wrapperEl.children()[0].parentNode) : $wrapperEl;\n    $selector.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n    let slides = $selector.children(`.${params.slideClass}`);\n\n    if (params.loopFillGroupWithBlank) {\n      const blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (let i = 0; i < blankSlidesNum; i += 1) {\n          const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n          $selector.append(blankNode);\n        }\n\n        slides = $selector.children(`.${params.slideClass}`);\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n    swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n    swiper.loopedSlides += params.loopAdditionalSlides;\n\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    const prependSlides = [];\n    const appendSlides = [];\n    slides.each((el, index) => {\n      const slide = $(el);\n\n      if (index < swiper.loopedSlides) {\n        appendSlides.push(el);\n      }\n\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\n        prependSlides.push(el);\n      }\n\n      slide.attr('data-swiper-slide-index', index);\n    });\n\n    for (let i = 0; i < appendSlides.length; i += 1) {\n      $selector.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n\n    for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n      $selector.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix() {\n    const swiper = this;\n    swiper.emit('beforeLoopFix');\n    const {\n      activeIndex,\n      slides,\n      loopedSlides,\n      allowSlidePrev,\n      allowSlideNext,\n      snapGrid,\n      rtlTranslate: rtl\n    } = swiper;\n    let newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n    const snapTranslate = -snapGrid[activeIndex];\n    const diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n    if (activeIndex < loopedSlides) {\n      newIndex = slides.length - loopedSlides * 3 + activeIndex;\n      newIndex += loopedSlides;\n      const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if (activeIndex >= slides.length - loopedSlides) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n  }\n\n  function loopDestroy() {\n    const swiper = this;\n    const {\n      $wrapperEl,\n      params,\n      slides\n    } = swiper;\n    $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate,\n    loopFix,\n    loopDestroy\n  };\n\n  function setGrabCursor(moving) {\n    const swiper = this;\n    if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n    const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor() {\n    const swiper = this;\n\n    if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n      return;\n    }\n\n    swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor,\n    unsetGrabCursor\n  };\n\n  function closestElement(selector, base = this) {\n    function __closestFrom(el) {\n      if (!el || el === getDocument() || el === getWindow()) return null;\n      if (el.assignedSlot) el = el.assignedSlot;\n      const found = el.closest(selector);\n      return found || __closestFrom(el.getRootNode().host);\n    }\n\n    return __closestFrom(base);\n  }\n\n  function onTouchStart(event) {\n    const swiper = this;\n    const document = getDocument();\n    const window = getWindow();\n    const data = swiper.touchEventsData;\n    const {\n      params,\n      touches,\n      enabled\n    } = swiper;\n    if (!enabled) return;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n\n    if (!swiper.animating && params.cssMode && params.loop) {\n      swiper.loopFix();\n    }\n\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    let $targetEl = $(e.target);\n\n    if (params.touchEventsTarget === 'wrapper') {\n      if (!$targetEl.closest(swiper.wrapperEl).length) return;\n    }\n\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n    if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n\n    const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n\n    if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {\n      $targetEl = $(event.path[0]);\n    }\n\n    const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n    const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n\n    if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, e.target) : $targetEl.closest(noSwipingSelector)[0])) {\n      swiper.allowClick = true;\n      return;\n    }\n\n    if (params.swipeHandler) {\n      if (!$targetEl.closest(params.swipeHandler)[0]) return;\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    const startX = touches.currentX;\n    const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n    const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n      if (edgeSwipeDetection === 'prevent') {\n        event.preventDefault();\n      } else {\n        return;\n      }\n    }\n\n    Object.assign(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined\n    });\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) data.allowThresholdMove = false;\n\n    if (e.type !== 'touchstart') {\n      let preventDefault = true;\n      if ($targetEl.is(data.focusableElements)) preventDefault = false;\n\n      if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {\n        document.activeElement.blur();\n      }\n\n      const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n      if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\n        e.preventDefault();\n      }\n    }\n\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove(event) {\n    const document = getDocument();\n    const swiper = this;\n    const data = swiper.touchEventsData;\n    const {\n      params,\n      touches,\n      rtlTranslate: rtl,\n      enabled\n    } = swiper;\n    if (!enabled) return;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent;\n\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n\n      return;\n    }\n\n    if (data.isTouchEvent && e.type !== 'touchmove') return;\n    const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n    const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n    const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n\n      if (data.isTouched) {\n        Object.assign(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY\n        });\n        data.touchStartTime = now();\n      }\n\n      return;\n    }\n\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n        return;\n      }\n    }\n\n    if (data.isTouchEvent && document.activeElement) {\n      if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n\n    if (e.targetTouches && e.targetTouches.length > 1) return;\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n    const diffX = touches.currentX - touches.startX;\n    const diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n\n    if (typeof data.isScrolling === 'undefined') {\n      let touchAngle;\n\n      if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if (diffX * diffX + diffY * diffY >= 25) {\n          touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n        }\n      }\n    }\n\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n\n    if (!data.startMoving) {\n      return;\n    }\n\n    swiper.allowClick = false;\n\n    if (!params.cssMode && e.cancelable) {\n      e.preventDefault();\n    }\n\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop && !params.cssMode) {\n        swiper.loopFix();\n      }\n\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n\n      data.allowMomentumBounce = false; // Grab Cursor\n\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n\n      swiper.emit('sliderFirstMove', e);\n    }\n\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n    let diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n    diff *= params.touchRatio;\n    if (rtl) diff = -diff;\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n    let disableParentSwiper = true;\n    let resistanceRatio = params.resistanceRatio;\n\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n\n    if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    } // Directions locks\n\n\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n      data.currentTranslate = data.startTranslate;\n    } // Threshold\n\n\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n\n    if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n      swiper.freeMode.onTouchMove();\n    } // Update progress\n\n\n    swiper.updateProgress(data.currentTranslate); // Update translate\n\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd(event) {\n    const swiper = this;\n    const data = swiper.touchEventsData;\n    const {\n      params,\n      touches,\n      rtlTranslate: rtl,\n      slidesGrid,\n      enabled\n    } = swiper;\n    if (!enabled) return;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent;\n\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n\n    data.allowTouchCallbacks = false;\n\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    } // Return Grab Cursor\n\n\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    } // Time diff\n\n\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n    if (swiper.allowClick) {\n      const pathTree = e.path || e.composedPath && e.composedPath();\n      swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n      swiper.emit('tap click', e);\n\n      if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n        swiper.emit('doubleTap doubleClick', e);\n      }\n    }\n\n    data.lastClickTime = now();\n    nextTick(() => {\n      if (!swiper.destroyed) swiper.allowClick = true;\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    let currentPos;\n\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.cssMode) {\n      return;\n    }\n\n    if (swiper.params.freeMode && params.freeMode.enabled) {\n      swiper.freeMode.onTouchEnd({\n        currentPos\n      });\n      return;\n    } // Find current slide\n\n\n    let stopIndex = 0;\n    let groupSize = swiper.slidesSizesGrid[0];\n\n    for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n      const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n      if (typeof slidesGrid[i + increment] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + increment] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    } // Find current slide size\n\n\n    const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n    const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n      if (!isNavButtonTarget) {\n        if (swiper.swipeDirection === 'next') {\n          swiper.slideTo(stopIndex + increment);\n        }\n\n        if (swiper.swipeDirection === 'prev') {\n          swiper.slideTo(stopIndex);\n        }\n      } else if (e.target === swiper.navigation.nextEl) {\n        swiper.slideTo(stopIndex + increment);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize() {\n    const swiper = this;\n    const {\n      params,\n      el\n    } = swiper;\n    if (el && el.offsetWidth === 0) return; // Breakpoints\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Save locks\n\n\n    const {\n      allowSlideNext,\n      allowSlidePrev,\n      snapGrid\n    } = swiper; // Disable locks on resize\n\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateSlidesClasses();\n\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n      swiper.autoplay.run();\n    } // Return locks after resize\n\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick(e) {\n    const swiper = this;\n    if (!swiper.enabled) return;\n\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) e.preventDefault();\n\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function onScroll() {\n    const swiper = this;\n    const {\n      wrapperEl,\n      rtlTranslate,\n      enabled\n    } = swiper;\n    if (!enabled) return;\n    swiper.previousTranslate = swiper.translate;\n\n    if (swiper.isHorizontal()) {\n      swiper.translate = -wrapperEl.scrollLeft;\n    } else {\n      swiper.translate = -wrapperEl.scrollTop;\n    } // eslint-disable-next-line\n\n\n    if (swiper.translate === -0) swiper.translate = 0;\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n    let newProgress;\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n    }\n\n    if (newProgress !== swiper.progress) {\n      swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, false);\n  }\n\n  let dummyEventAttached = false;\n\n  function dummyEventListener() {}\n\n  const events = (swiper, method) => {\n    const document = getDocument();\n    const {\n      params,\n      touchEvents,\n      el,\n      wrapperEl,\n      device,\n      support\n    } = swiper;\n    const capture = !!params.nested;\n    const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    const swiperMethod = method; // Touch Events\n\n    if (!support.touch) {\n      el[domMethod](touchEvents.start, swiper.onTouchStart, false);\n      document[domMethod](touchEvents.move, swiper.onTouchMove, capture);\n      document[domMethod](touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      const passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);\n      el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n        passive: false,\n        capture\n      } : capture);\n      el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n      if (touchEvents.cancel) {\n        el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n    } // Prevent Links Clicks\n\n\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el[domMethod]('click', swiper.onClick, true);\n    }\n\n    if (params.cssMode) {\n      wrapperEl[domMethod]('scroll', swiper.onScroll);\n    } // Resize handler\n\n\n    if (params.updateOnWindowResize) {\n      swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n    } else {\n      swiper[swiperMethod]('observerUpdate', onResize, true);\n    }\n  };\n\n  function attachEvents() {\n    const swiper = this;\n    const document = getDocument();\n    const {\n      params,\n      support\n    } = swiper;\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n    if (params.cssMode) {\n      swiper.onScroll = onScroll.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    if (support.touch && !dummyEventAttached) {\n      document.addEventListener('touchstart', dummyEventListener);\n      dummyEventAttached = true;\n    }\n\n    events(swiper, 'on');\n  }\n\n  function detachEvents() {\n    const swiper = this;\n    events(swiper, 'off');\n  }\n\n  var events$1 = {\n    attachEvents,\n    detachEvents\n  };\n\n  const isGridEnabled = (swiper, params) => {\n    return swiper.grid && params.grid && params.grid.rows > 1;\n  };\n\n  function setBreakpoint() {\n    const swiper = this;\n    const {\n      activeIndex,\n      initialized,\n      loopedSlides = 0,\n      params,\n      $el\n    } = swiper;\n    const breakpoints = params.breakpoints;\n    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n    const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n    if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const wasMultiRow = isGridEnabled(swiper, params);\n    const isMultiRow = isGridEnabled(swiper, breakpointParams);\n    const wasEnabled = params.enabled;\n\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\n      swiper.emitContainerClasses();\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(`${params.containerModifierClass}grid`);\n\n      if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n        $el.addClass(`${params.containerModifierClass}grid-column`);\n      }\n\n      swiper.emitContainerClasses();\n    }\n\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    extend(swiper.params, breakpointParams);\n    const isEnabled = swiper.params.enabled;\n    Object.assign(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev\n    });\n\n    if (wasEnabled && !isEnabled) {\n      swiper.disable();\n    } else if (!wasEnabled && isEnabled) {\n      swiper.enable();\n    }\n\n    swiper.currentBreakpoint = breakpoint;\n    swiper.emit('_beforeBreakpoint', breakpointParams);\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n\n  function getBreakpoint(breakpoints, base = 'window', containerEl) {\n    if (!breakpoints || base === 'container' && !containerEl) return undefined;\n    let breakpoint = false;\n    const window = getWindow();\n    const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n    const points = Object.keys(breakpoints).map(point => {\n      if (typeof point === 'string' && point.indexOf('@') === 0) {\n        const minRatio = parseFloat(point.substr(1));\n        const value = currentHeight * minRatio;\n        return {\n          value,\n          point\n        };\n      }\n\n      return {\n        value: point,\n        point\n      };\n    });\n    points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n\n    for (let i = 0; i < points.length; i += 1) {\n      const {\n        point,\n        value\n      } = points[i];\n\n      if (base === 'window') {\n        if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n          breakpoint = point;\n        }\n      } else if (value <= containerEl.clientWidth) {\n        breakpoint = point;\n      }\n    }\n\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = {\n    setBreakpoint,\n    getBreakpoint\n  };\n\n  function prepareClasses(entries, prefix) {\n    const resultClasses = [];\n    entries.forEach(item => {\n      if (typeof item === 'object') {\n        Object.keys(item).forEach(classNames => {\n          if (item[classNames]) {\n            resultClasses.push(prefix + classNames);\n          }\n        });\n      } else if (typeof item === 'string') {\n        resultClasses.push(prefix + item);\n      }\n    });\n    return resultClasses;\n  }\n\n  function addClasses() {\n    const swiper = this;\n    const {\n      classNames,\n      params,\n      rtl,\n      $el,\n      device,\n      support\n    } = swiper; // prettier-ignore\n\n    const suffixes = prepareClasses(['initialized', params.direction, {\n      'pointer-events': !support.touch\n    }, {\n      'free-mode': swiper.params.freeMode && params.freeMode.enabled\n    }, {\n      'autoheight': params.autoHeight\n    }, {\n      'rtl': rtl\n    }, {\n      'grid': params.grid && params.grid.rows > 1\n    }, {\n      'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n    }, {\n      'android': device.android\n    }, {\n      'ios': device.ios\n    }, {\n      'css-mode': params.cssMode\n    }, {\n      'centered': params.cssMode && params.centeredSlides\n    }], params.containerModifierClass);\n    classNames.push(...suffixes);\n    $el.addClass([...classNames].join(' '));\n    swiper.emitContainerClasses();\n  }\n\n  function removeClasses() {\n    const swiper = this;\n    const {\n      $el,\n      classNames\n    } = swiper;\n    $el.removeClass(classNames.join(' '));\n    swiper.emitContainerClasses();\n  }\n\n  var classes = {\n    addClasses,\n    removeClasses\n  };\n\n  function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n    const window = getWindow();\n    let image;\n\n    function onReady() {\n      if (callback) callback();\n    }\n\n    const isPicture = $(imageEl).parent('picture')[0];\n\n    if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n      if (src) {\n        image = new window.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n\n        if (sizes) {\n          image.sizes = sizes;\n        }\n\n        if (srcset) {\n          image.srcset = srcset;\n        }\n\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages() {\n    const swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n      if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) swiper.update();\n        swiper.emit('imagesReady');\n      }\n    }\n\n    for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      const imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n    }\n  }\n\n  var images = {\n    loadImage,\n    preloadImages\n  };\n\n  function checkOverflow() {\n    const swiper = this;\n    const {\n      isLocked: wasLocked,\n      params\n    } = swiper;\n    const {\n      slidesOffsetBefore\n    } = params;\n\n    if (slidesOffsetBefore) {\n      const lastSlideIndex = swiper.slides.length - 1;\n      const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n      swiper.isLocked = swiper.size > lastSlideRightEdge;\n    } else {\n      swiper.isLocked = swiper.snapGrid.length === 1;\n    }\n\n    if (params.allowSlideNext === true) {\n      swiper.allowSlideNext = !swiper.isLocked;\n    }\n\n    if (params.allowSlidePrev === true) {\n      swiper.allowSlidePrev = !swiper.isLocked;\n    }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n    }\n\n    if (wasLocked !== swiper.isLocked) {\n      swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n    }\n  }\n\n  var checkOverflow$1 = {\n    checkOverflow\n  };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'wrapper',\n    initialSlide: 0,\n    speed: 300,\n    cssMode: false,\n    updateOnWindowResize: true,\n    resizeObserver: true,\n    nested: false,\n    createElements: false,\n    enabled: true,\n    focusableElements: 'input, select, option, textarea, button, video, label',\n    // Overrides\n    width: null,\n    height: null,\n    //\n    preventInteractionOnTransition: false,\n    // ssr\n    userAgent: null,\n    url: null,\n    // To support iOS's swipe-to-go-back gesture (when being used in-app).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n    // Autoheight\n    autoHeight: false,\n    // Set wrapper width\n    setWrapperSize: false,\n    // Virtual Translate\n    virtualTranslate: false,\n    // Effects\n    effect: 'slide',\n    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsBase: 'window',\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    slidesPerGroupAuto: false,\n    centeredSlides: false,\n    centeredSlidesBounds: false,\n    slidesOffsetBefore: 0,\n    // in px\n    slidesOffsetAfter: 0,\n    // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: true,\n    // Round length\n    roundLengths: false,\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: false,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n    // Progress\n    watchSlidesProgress: false,\n    // Cursor\n    grabCursor: false,\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n    loopPreventsSlide: true,\n    // rewind\n    rewind: false,\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null,\n    // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n    // Passive Listeners\n    passiveListeners: true,\n    // NS\n    containerModifierClass: 'swiper-',\n    // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n    // Callbacks\n    runCallbacksOnInit: true,\n    // Internals\n    _emitClasses: false\n  };\n\n  function moduleExtendParams(params, allModulesParams) {\n    return function extendParams(obj = {}) {\n      const moduleParamName = Object.keys(obj)[0];\n      const moduleParams = obj[moduleParamName];\n\n      if (typeof moduleParams !== 'object' || moduleParams === null) {\n        extend(allModulesParams, obj);\n        return;\n      }\n\n      if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n        params[moduleParamName] = {\n          auto: true\n        };\n      }\n\n      if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n        extend(allModulesParams, obj);\n        return;\n      }\n\n      if (params[moduleParamName] === true) {\n        params[moduleParamName] = {\n          enabled: true\n        };\n      }\n\n      if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n        params[moduleParamName].enabled = true;\n      }\n\n      if (!params[moduleParamName]) params[moduleParamName] = {\n        enabled: false\n      };\n      extend(allModulesParams, obj);\n    };\n  }\n\n  /* eslint no-param-reassign: \"off\" */\n  const prototypes = {\n    eventsEmitter,\n    update,\n    translate,\n    transition,\n    slide,\n    loop,\n    grabCursor,\n    events: events$1,\n    breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes,\n    images\n  };\n  const extendedDefaults = {};\n\n  class Swiper {\n    constructor(...args) {\n      let el;\n      let params;\n\n      if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n        params = args[0];\n      } else {\n        [el, params] = args;\n      }\n\n      if (!params) params = {};\n      params = extend({}, params);\n      if (el && !params.el) params.el = el;\n\n      if (params.el && $(params.el).length > 1) {\n        const swipers = [];\n        $(params.el).each(containerEl => {\n          const newParams = extend({}, params, {\n            el: containerEl\n          });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      } // Swiper Instance\n\n\n      const swiper = this;\n      swiper.__swiper__ = true;\n      swiper.support = getSupport();\n      swiper.device = getDevice({\n        userAgent: params.userAgent\n      });\n      swiper.browser = getBrowser();\n      swiper.eventsListeners = {};\n      swiper.eventsAnyListeners = [];\n      swiper.modules = [...swiper.__modules__];\n\n      if (params.modules && Array.isArray(params.modules)) {\n        swiper.modules.push(...params.modules);\n      }\n\n      const allModulesParams = {};\n      swiper.modules.forEach(mod => {\n        mod({\n          swiper,\n          extendParams: moduleExtendParams(params, allModulesParams),\n          on: swiper.on.bind(swiper),\n          once: swiper.once.bind(swiper),\n          off: swiper.off.bind(swiper),\n          emit: swiper.emit.bind(swiper)\n        });\n      }); // Extend defaults with modules params\n\n      const swiperParams = extend({}, defaults, allModulesParams); // Extend defaults with passed params\n\n      swiper.params = extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = extend({}, swiper.params);\n      swiper.passedParams = extend({}, params); // add event listeners\n\n      if (swiper.params && swiper.params.on) {\n        Object.keys(swiper.params.on).forEach(eventName => {\n          swiper.on(eventName, swiper.params.on[eventName]);\n        });\n      }\n\n      if (swiper.params && swiper.params.onAny) {\n        swiper.onAny(swiper.params.onAny);\n      } // Save Dom lib\n\n\n      swiper.$ = $; // Extend Swiper\n\n      Object.assign(swiper, {\n        enabled: swiper.params.enabled,\n        el,\n        // Classes\n        classNames: [],\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n\n        isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n        //\n        isBeginning: true,\n        isEnd: false,\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n        // Touch Events\n        touchEvents: function touchEvents() {\n          const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n          const desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n            cancel: touch[3]\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2]\n          };\n          return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }(),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          focusableElements: swiper.params.focusableElements,\n          // Last click time\n          lastClickTime: now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined\n        },\n        // Clicks\n        allowClick: true,\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0\n        },\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0\n      });\n      swiper.emit('_swiper'); // Init\n\n      if (swiper.params.init) {\n        swiper.init();\n      } // Return app instance\n\n\n      return swiper;\n    }\n\n    enable() {\n      const swiper = this;\n      if (swiper.enabled) return;\n      swiper.enabled = true;\n\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      swiper.emit('enable');\n    }\n\n    disable() {\n      const swiper = this;\n      if (!swiper.enabled) return;\n      swiper.enabled = false;\n\n      if (swiper.params.grabCursor) {\n        swiper.unsetGrabCursor();\n      }\n\n      swiper.emit('disable');\n    }\n\n    setProgress(progress, speed) {\n      const swiper = this;\n      progress = Math.min(Math.max(progress, 0), 1);\n      const min = swiper.minTranslate();\n      const max = swiper.maxTranslate();\n      const current = (max - min) * progress + min;\n      swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    emitContainerClasses() {\n      const swiper = this;\n      if (!swiper.params._emitClasses || !swiper.el) return;\n      const cls = swiper.el.className.split(' ').filter(className => {\n        return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n      });\n      swiper.emit('_containerClasses', cls.join(' '));\n    }\n\n    getSlideClasses(slideEl) {\n      const swiper = this;\n      return slideEl.className.split(' ').filter(className => {\n        return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n      }).join(' ');\n    }\n\n    emitSlidesClasses() {\n      const swiper = this;\n      if (!swiper.params._emitClasses || !swiper.el) return;\n      const updates = [];\n      swiper.slides.each(slideEl => {\n        const classNames = swiper.getSlideClasses(slideEl);\n        updates.push({\n          slideEl,\n          classNames\n        });\n        swiper.emit('_slideClass', slideEl, classNames);\n      });\n      swiper.emit('_slideClasses', updates);\n    }\n\n    slidesPerViewDynamic(view = 'current', exact = false) {\n      const swiper = this;\n      const {\n        params,\n        slides,\n        slidesGrid,\n        slidesSizesGrid,\n        size: swiperSize,\n        activeIndex\n      } = swiper;\n      let spv = 1;\n\n      if (params.centeredSlides) {\n        let slideSize = slides[activeIndex].swiperSlideSize;\n        let breakLoop;\n\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) breakLoop = true;\n          }\n        }\n\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) breakLoop = true;\n          }\n        }\n      } else {\n        // eslint-disable-next-line\n        if (view === 'current') {\n          for (let i = activeIndex + 1; i < slides.length; i += 1) {\n            const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n\n            if (slideInView) {\n              spv += 1;\n            }\n          }\n        } else {\n          // previous\n          for (let i = activeIndex - 1; i >= 0; i -= 1) {\n            const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n\n            if (slideInView) {\n              spv += 1;\n            }\n          }\n        }\n      }\n\n      return spv;\n    }\n\n    update() {\n      const swiper = this;\n      if (!swiper || swiper.destroyed) return;\n      const {\n        snapGrid,\n        params\n      } = swiper; // Breakpoints\n\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      let translated;\n\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n        setTranslate();\n\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n\n        if (!translated) {\n          setTranslate();\n        }\n      }\n\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n\n      swiper.emit('update');\n    }\n\n    changeDirection(newDirection, needUpdate = true) {\n      const swiper = this;\n      const currentDirection = swiper.params.direction;\n\n      if (!newDirection) {\n        // eslint-disable-next-line\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n      }\n\n      if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n        return swiper;\n      }\n\n      swiper.$el.removeClass(`${swiper.params.containerModifierClass}${currentDirection}`).addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n      swiper.emitContainerClasses();\n      swiper.params.direction = newDirection;\n      swiper.slides.each(slideEl => {\n        if (newDirection === 'vertical') {\n          slideEl.style.width = '';\n        } else {\n          slideEl.style.height = '';\n        }\n      });\n      swiper.emit('changeDirection');\n      if (needUpdate) swiper.update();\n      return swiper;\n    }\n\n    mount(el) {\n      const swiper = this;\n      if (swiper.mounted) return true; // Find el\n\n      const $el = $(el || swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return false;\n      }\n\n      el.swiper = swiper;\n\n      const getWrapperSelector = () => {\n        return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n      };\n\n      const getWrapper = () => {\n        if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n          const res = $(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\n\n          res.children = options => $el.children(options);\n\n          return res;\n        }\n\n        return $el.children(getWrapperSelector());\n      }; // Find Wrapper\n\n\n      let $wrapperEl = getWrapper();\n\n      if ($wrapperEl.length === 0 && swiper.params.createElements) {\n        const document = getDocument();\n        const wrapper = document.createElement('div');\n        $wrapperEl = $(wrapper);\n        wrapper.className = swiper.params.wrapperClass;\n        $el.append(wrapper);\n        $el.children(`.${swiper.params.slideClass}`).each(slideEl => {\n          $wrapperEl.append(slideEl);\n        });\n      }\n\n      Object.assign(swiper, {\n        $el,\n        el,\n        $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n        mounted: true,\n        // RTL\n        rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box'\n      });\n      return true;\n    }\n\n    init(el) {\n      const swiper = this;\n      if (swiper.initialized) return swiper;\n      const mounted = swiper.mount(el);\n      if (mounted === false) return swiper;\n      swiper.emit('beforeInit'); // Set breakpoint\n\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      } // Add Classes\n\n\n      swiper.addClasses(); // Create loop\n\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      } // Update size\n\n\n      swiper.updateSize(); // Update slides\n\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      } // Set Grab Cursor\n\n\n      if (swiper.params.grabCursor && swiper.enabled) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      } // Slide To Initial Slide\n\n\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n      } // Attach events\n\n\n      swiper.attachEvents(); // Init Flag\n\n      swiper.initialized = true; // Emit\n\n      swiper.emit('init');\n      swiper.emit('afterInit');\n      return swiper;\n    }\n\n    destroy(deleteInstance = true, cleanStyles = true) {\n      const swiper = this;\n      const {\n        params,\n        $el,\n        $wrapperEl,\n        slides\n      } = swiper;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy'); // Init Flag\n\n      swiper.initialized = false; // Detach events\n\n      swiper.detachEvents(); // Destroy loop\n\n      if (params.loop) {\n        swiper.loopDestroy();\n      } // Cleanup styles\n\n\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n\n        if (slides && slides.length) {\n          slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n        }\n      }\n\n      swiper.emit('destroy'); // Detach emitter events\n\n      Object.keys(swiper.eventsListeners).forEach(eventName => {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        deleteProps(swiper);\n      }\n\n      swiper.destroyed = true;\n      return null;\n    }\n\n    static extendDefaults(newDefaults) {\n      extend(extendedDefaults, newDefaults);\n    }\n\n    static get extendedDefaults() {\n      return extendedDefaults;\n    }\n\n    static get defaults() {\n      return defaults;\n    }\n\n    static installModule(mod) {\n      if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n      const modules = Swiper.prototype.__modules__;\n\n      if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n        modules.push(mod);\n      }\n    }\n\n    static use(module) {\n      if (Array.isArray(module)) {\n        module.forEach(m => Swiper.installModule(m));\n        return Swiper;\n      }\n\n      Swiper.installModule(module);\n      return Swiper;\n    }\n\n  }\n\n  Object.keys(prototypes).forEach(prototypeGroup => {\n    Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n      Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n    });\n  });\n  Swiper.use([Resize, Observer]);\n\n  function Virtual({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        renderExternalUpdate: true,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0\n      }\n    });\n    let cssModeTimeout;\n    swiper.virtual = {\n      cache: {},\n      from: undefined,\n      to: undefined,\n      slides: [],\n      offset: 0,\n      slidesGrid: []\n    };\n\n    function renderSlide(slide, index) {\n      const params = swiper.params.virtual;\n\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n\n      const $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n      if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n      if (params.cache) swiper.virtual.cache[index] = $slideEl;\n      return $slideEl;\n    }\n\n    function update(force) {\n      const {\n        slidesPerView,\n        slidesPerGroup,\n        centeredSlides\n      } = swiper.params;\n      const {\n        addSlidesBefore,\n        addSlidesAfter\n      } = swiper.params.virtual;\n      const {\n        from: previousFrom,\n        to: previousTo,\n        slides,\n        slidesGrid: previousSlidesGrid,\n        offset: previousOffset\n      } = swiper.virtual;\n\n      if (!swiper.params.cssMode) {\n        swiper.updateActiveIndex();\n      }\n\n      const activeIndex = swiper.activeIndex || 0;\n      let offsetProp;\n      if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n      let slidesAfter;\n      let slidesBefore;\n\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n        slidesBefore = slidesPerGroup + addSlidesBefore;\n      }\n\n      const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n      Object.assign(swiper.virtual, {\n        from,\n        to,\n        offset,\n        slidesGrid: swiper.slidesGrid\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, `${offset}px`);\n        }\n\n        swiper.updateProgress();\n        return;\n      }\n\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset,\n          from,\n          to,\n          slides: function getSlides() {\n            const slidesToRender = [];\n\n            for (let i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n\n            return slidesToRender;\n          }()\n        });\n\n        if (swiper.params.virtual.renderExternalUpdate) {\n          onRendered();\n        }\n\n        return;\n      }\n\n      const prependIndexes = [];\n      const appendIndexes = [];\n\n      if (force) {\n        swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n      } else {\n        for (let i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n          }\n        }\n      }\n\n      for (let i = 0; i < slides.length; i += 1) {\n        if (i >= from && i <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i);\n          } else {\n            if (i > previousTo) appendIndexes.push(i);\n            if (i < previousFrom) prependIndexes.push(i);\n          }\n        }\n      }\n\n      appendIndexes.forEach(index => {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort((a, b) => b - a).forEach(index => {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n      onRendered();\n    }\n\n    function appendSlide(slides) {\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) swiper.virtual.slides.push(slides[i]);\n        }\n      } else {\n        swiper.virtual.slides.push(slides);\n      }\n\n      update(true);\n    }\n\n    function prependSlide(slides) {\n      const activeIndex = swiper.activeIndex;\n      let newActiveIndex = activeIndex + 1;\n      let numberOfNewSlides = 1;\n\n      if (Array.isArray(slides)) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n        }\n\n        newActiveIndex = activeIndex + slides.length;\n        numberOfNewSlides = slides.length;\n      } else {\n        swiper.virtual.slides.unshift(slides);\n      }\n\n      if (swiper.params.virtual.cache) {\n        const cache = swiper.virtual.cache;\n        const newCache = {};\n        Object.keys(cache).forEach(cachedIndex => {\n          const $cachedEl = cache[cachedIndex];\n          const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n\n          if (cachedElIndex) {\n            $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n          }\n\n          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n        });\n        swiper.virtual.cache = newCache;\n      }\n\n      update(true);\n      swiper.slideTo(newActiveIndex, 0);\n    }\n\n    function removeSlide(slidesIndexes) {\n      if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n      let activeIndex = swiper.activeIndex;\n\n      if (Array.isArray(slidesIndexes)) {\n        for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n          swiper.virtual.slides.splice(slidesIndexes[i], 1);\n\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes[i]];\n          }\n\n          if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n          activeIndex = Math.max(activeIndex, 0);\n        }\n      } else {\n        swiper.virtual.slides.splice(slidesIndexes, 1);\n\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes];\n        }\n\n        if (slidesIndexes < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n\n      update(true);\n      swiper.slideTo(activeIndex, 0);\n    }\n\n    function removeAllSlides() {\n      swiper.virtual.slides = [];\n\n      if (swiper.params.virtual.cache) {\n        swiper.virtual.cache = {};\n      }\n\n      update(true);\n      swiper.slideTo(0, 0);\n    }\n\n    on('beforeInit', () => {\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.slides = swiper.params.virtual.slides;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n\n      if (!swiper.params.initialSlide) {\n        update();\n      }\n    });\n    on('setTranslate', () => {\n      if (!swiper.params.virtual.enabled) return;\n\n      if (swiper.params.cssMode && !swiper._immediateVirtual) {\n        clearTimeout(cssModeTimeout);\n        cssModeTimeout = setTimeout(() => {\n          update();\n        }, 100);\n      } else {\n        update();\n      }\n    });\n    on('init update resize', () => {\n      if (!swiper.params.virtual.enabled) return;\n\n      if (swiper.params.cssMode) {\n        setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n      }\n    });\n    Object.assign(swiper.virtual, {\n      appendSlide,\n      prependSlide,\n      removeSlide,\n      removeAllSlides,\n      update\n    });\n  }\n\n  /* eslint-disable consistent-return */\n  function Keyboard({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    const document = getDocument();\n    const window = getWindow();\n    swiper.keyboard = {\n      enabled: false\n    };\n    extendParams({\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n        pageUpDown: true\n      }\n    });\n\n    function handle(event) {\n      if (!swiper.enabled) return;\n      const {\n        rtlTranslate: rtl\n      } = swiper;\n      let e = event;\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n      const kc = e.keyCode || e.charCode;\n      const pageUpDown = swiper.params.keyboard.pageUpDown;\n      const isPageUp = pageUpDown && kc === 33;\n      const isPageDown = pageUpDown && kc === 34;\n      const isArrowLeft = kc === 37;\n      const isArrowRight = kc === 39;\n      const isArrowUp = kc === 38;\n      const isArrowDown = kc === 40; // Directions locks\n\n      if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n        return false;\n      }\n\n      if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n        return false;\n      }\n\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n\n      if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n\n      if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n        let inView = false; // Check that swiper should be inside of visible area of window\n\n        if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n          return undefined;\n        }\n\n        const $el = swiper.$el;\n        const swiperWidth = $el[0].clientWidth;\n        const swiperHeight = $el[0].clientHeight;\n        const windowWidth = window.innerWidth;\n        const windowHeight = window.innerHeight;\n        const swiperOffset = swiper.$el.offset();\n        if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n        const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n\n        for (let i = 0; i < swiperCoord.length; i += 1) {\n          const point = swiperCoord[i];\n\n          if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n            if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n            inView = true;\n          }\n        }\n\n        if (!inView) return undefined;\n      }\n\n      if (swiper.isHorizontal()) {\n        if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n          if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        }\n\n        if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n        if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n      } else {\n        if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n          if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        }\n\n        if (isPageDown || isArrowDown) swiper.slideNext();\n        if (isPageUp || isArrowUp) swiper.slidePrev();\n      }\n\n      emit('keyPress', kc);\n      return undefined;\n    }\n\n    function enable() {\n      if (swiper.keyboard.enabled) return;\n      $(document).on('keydown', handle);\n      swiper.keyboard.enabled = true;\n    }\n\n    function disable() {\n      if (!swiper.keyboard.enabled) return;\n      $(document).off('keydown', handle);\n      swiper.keyboard.enabled = false;\n    }\n\n    on('init', () => {\n      if (swiper.params.keyboard.enabled) {\n        enable();\n      }\n    });\n    on('destroy', () => {\n      if (swiper.keyboard.enabled) {\n        disable();\n      }\n    });\n    Object.assign(swiper.keyboard, {\n      enable,\n      disable\n    });\n  }\n\n  /* eslint-disable consistent-return */\n  function Mousewheel({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    const window = getWindow();\n    extendParams({\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarget: 'container',\n        thresholdDelta: null,\n        thresholdTime: null\n      }\n    });\n    swiper.mousewheel = {\n      enabled: false\n    };\n    let timeout;\n    let lastScrollTime = now();\n    let lastEventBeforeSnap;\n    const recentWheelEvents = [];\n\n    function normalize(e) {\n      // Reasonable defaults\n      const PIXEL_STEP = 10;\n      const LINE_HEIGHT = 40;\n      const PAGE_HEIGHT = 800;\n      let sX = 0;\n      let sY = 0; // spinX, spinY\n\n      let pX = 0;\n      let pY = 0; // pixelX, pixelY\n      // Legacy\n\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      } // side scrolling on FF with DOMMouseScroll\n\n\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if (e.shiftKey && !pX) {\n        // if user scrolls with shift he wants horizontal scroll\n        pX = pY;\n        pY = 0;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) {\n          // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else {\n          // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      } // Fall-back if spin cannot be determined\n\n\n      if (pX && !sX) {\n        sX = pX < 1 ? -1 : 1;\n      }\n\n      if (pY && !sY) {\n        sY = pY < 1 ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY\n      };\n    }\n\n    function handleMouseEnter() {\n      if (!swiper.enabled) return;\n      swiper.mouseEntered = true;\n    }\n\n    function handleMouseLeave() {\n      if (!swiper.enabled) return;\n      swiper.mouseEntered = false;\n    }\n\n    function animateSlider(newEvent) {\n      if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n        // Prevent if delta of wheel scroll delta is below configured threshold\n        return false;\n      }\n\n      if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n        // Prevent if time between scrolls is below configured threshold\n        return false;\n      } // If the movement is NOT big enough and\n      // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n      //   Don't go any further (avoid insignificant scroll movement).\n\n\n      if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n        // Return false as a default\n        return true;\n      } // If user is scrolling towards the end:\n      //   If the slider hasn't hit the latest slide or\n      //   if the slider is a loop and\n      //   if the slider isn't moving right now:\n      //     Go to next slide and\n      //     emit a scroll event.\n      // Else (the user is scrolling towards the beginning) and\n      // if the slider hasn't hit the first slide or\n      // if the slider is a loop and\n      // if the slider isn't moving right now:\n      //   Go to prev slide and\n      //   emit a scroll event.\n\n\n      if (newEvent.direction < 0) {\n        if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n          swiper.slideNext();\n          emit('scroll', newEvent.raw);\n        }\n      } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n        swiper.slidePrev();\n        emit('scroll', newEvent.raw);\n      } // If you got here is because an animation has been triggered so store the current time\n\n\n      lastScrollTime = new window.Date().getTime(); // Return false as a default\n\n      return false;\n    }\n\n    function releaseScroll(newEvent) {\n      const params = swiper.params.mousewheel;\n\n      if (newEvent.direction < 0) {\n        if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n          // Return true to animate scroll on edges\n          return true;\n        }\n      } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n\n      return false;\n    }\n\n    function handle(event) {\n      let e = event;\n      let disableParentSwiper = true;\n      if (!swiper.enabled) return;\n      const params = swiper.params.mousewheel;\n\n      if (swiper.params.cssMode) {\n        e.preventDefault();\n      }\n\n      let target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n      let delta = 0;\n      const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n      const data = normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) return true;\n      if (params.invert) delta = -delta; // Get the scroll positions\n\n      let positions = swiper.getTranslate() + delta * params.sensitivity;\n      if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n      if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\n      //     the disableParentSwiper will be true.\n      // When loop is false:\n      //     if the scroll positions is not on edge,\n      //     then the disableParentSwiper will be true.\n      //     if the scroll on edge positions,\n      //     then the disableParentSwiper will be false.\n\n      disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n      if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n\n      if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n        // Register the new event in a variable which stores the relevant data\n        const newEvent = {\n          time: now(),\n          delta: Math.abs(delta),\n          direction: Math.sign(delta),\n          raw: event\n        }; // Keep the most recent events\n\n        if (recentWheelEvents.length >= 2) {\n          recentWheelEvents.shift(); // only store the last N events\n        }\n\n        const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n        recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n        //   If direction has changed or\n        //   if the scroll is quicker than the previous one:\n        //     Animate the slider.\n        // Else (this is the first time the wheel is moved):\n        //     Animate the slider.\n\n        if (prevEvent) {\n          if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n            animateSlider(newEvent);\n          }\n        } else {\n          animateSlider(newEvent);\n        } // If it's time to release the scroll:\n        //   Return now so you don't hit the preventDefault.\n\n\n        if (releaseScroll(newEvent)) {\n          return true;\n        }\n      } else {\n        // Freemode or scrollContainer:\n        // If we recently snapped after a momentum scroll, then ignore wheel events\n        // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n        // or if it's a new scroll (larger delta or inverse sign as last event before\n        // an end-of-momentum snap).\n        const newEvent = {\n          time: now(),\n          delta: Math.abs(delta),\n          direction: Math.sign(delta)\n        };\n        const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n\n        if (!ignoreWheelEvents) {\n          lastEventBeforeSnap = undefined;\n\n          if (swiper.params.loop) {\n            swiper.loopFix();\n          }\n\n          let position = swiper.getTranslate() + delta * params.sensitivity;\n          const wasBeginning = swiper.isBeginning;\n          const wasEnd = swiper.isEnd;\n          if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n          if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n          swiper.setTransition(0);\n          swiper.setTranslate(position);\n          swiper.updateProgress();\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n\n          if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n            swiper.updateSlidesClasses();\n          }\n\n          if (swiper.params.freeMode.sticky) {\n            // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n            // the end of a momentum scroll by storing recent (N=15?) wheel events.\n            // 1. do all N events have decreasing or same (absolute value) delta?\n            // 2. did all N events arrive in the last M (M=500?) msecs?\n            // 3. does the earliest event have an (absolute value) delta that's\n            //    at least P (P=1?) larger than the most recent event's delta?\n            // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n            // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n            // Snap immediately and ignore remaining wheel events in this scroll.\n            // See comment above for \"remaining wheel events in this scroll\" determination.\n            // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n            clearTimeout(timeout);\n            timeout = undefined;\n\n            if (recentWheelEvents.length >= 15) {\n              recentWheelEvents.shift(); // only store the last N events\n            }\n\n            const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n            const firstEvent = recentWheelEvents[0];\n            recentWheelEvents.push(newEvent);\n\n            if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n              // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n              recentWheelEvents.splice(0);\n            } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n              // We're at the end of the deceleration of a momentum scroll, so there's no need\n              // to wait for more events. Snap ASAP on the next tick.\n              // Also, because there's some remaining momentum we'll bias the snap in the\n              // direction of the ongoing scroll because it's better UX for the scroll to snap\n              // in the same direction as the scroll instead of reversing to snap.  Therefore,\n              // if it's already scrolled more than 20% in the current direction, keep going.\n              const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              timeout = nextTick(() => {\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n              }, 0); // no delay; move on next tick\n            }\n\n            if (!timeout) {\n              // if we get here, then we haven't detected the end of a momentum scroll, so\n              // we'll consider a scroll \"complete\" when there haven't been any wheel events\n              // for 500ms.\n              timeout = nextTick(() => {\n                const snapToThreshold = 0.5;\n                lastEventBeforeSnap = newEvent;\n                recentWheelEvents.splice(0);\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n              }, 500);\n            }\n          } // Emit event\n\n\n          if (!ignoreWheelEvents) emit('scroll', e); // Stop autoplay\n\n          if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\n\n          if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n        }\n      }\n\n      if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      return false;\n    }\n\n    function events(method) {\n      let target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      target[method]('mouseenter', handleMouseEnter);\n      target[method]('mouseleave', handleMouseLeave);\n      target[method]('wheel', handle);\n    }\n\n    function enable() {\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.removeEventListener('wheel', handle);\n        return true;\n      }\n\n      if (swiper.mousewheel.enabled) return false;\n      events('on');\n      swiper.mousewheel.enabled = true;\n      return true;\n    }\n\n    function disable() {\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.addEventListener(event, handle);\n        return true;\n      }\n\n      if (!swiper.mousewheel.enabled) return false;\n      events('off');\n      swiper.mousewheel.enabled = false;\n      return true;\n    }\n\n    on('init', () => {\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n        disable();\n      }\n\n      if (swiper.params.mousewheel.enabled) enable();\n    });\n    on('destroy', () => {\n      if (swiper.params.cssMode) {\n        enable();\n      }\n\n      if (swiper.mousewheel.enabled) disable();\n    });\n    Object.assign(swiper.mousewheel, {\n      enable,\n      disable\n    });\n  }\n\n  function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n    const document = getDocument();\n\n    if (swiper.params.createElements) {\n      Object.keys(checkProps).forEach(key => {\n        if (!params[key] && params.auto === true) {\n          let element = swiper.$el.children(`.${checkProps[key]}`)[0];\n\n          if (!element) {\n            element = document.createElement('div');\n            element.className = checkProps[key];\n            swiper.$el.append(element);\n          }\n\n          params[key] = element;\n          originalParams[key] = element;\n        }\n      });\n    }\n\n    return params;\n  }\n\n  function Navigation({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    extendParams({\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock'\n      }\n    });\n    swiper.navigation = {\n      nextEl: null,\n      $nextEl: null,\n      prevEl: null,\n      $prevEl: null\n    };\n\n    function getEl(el) {\n      let $el;\n\n      if (el) {\n        $el = $(el);\n\n        if (swiper.params.uniqueNavElements && typeof el === 'string' && $el.length > 1 && swiper.$el.find(el).length === 1) {\n          $el = swiper.$el.find(el);\n        }\n      }\n\n      return $el;\n    }\n\n    function toggleEl($el, disabled) {\n      const params = swiper.params.navigation;\n\n      if ($el && $el.length > 0) {\n        $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);\n        if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n        }\n      }\n    }\n\n    function update() {\n      // Update Navigation Buttons\n      if (swiper.params.loop) return;\n      const {\n        $nextEl,\n        $prevEl\n      } = swiper.navigation;\n      toggleEl($prevEl, swiper.isBeginning && !swiper.params.rewind);\n      toggleEl($nextEl, swiper.isEnd && !swiper.params.rewind);\n    }\n\n    function onPrevClick(e) {\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n      swiper.slidePrev();\n    }\n\n    function onNextClick(e) {\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n      swiper.slideNext();\n    }\n\n    function init() {\n      const params = swiper.params.navigation;\n      swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n        nextEl: 'swiper-button-next',\n        prevEl: 'swiper-button-prev'\n      });\n      if (!(params.nextEl || params.prevEl)) return;\n      const $nextEl = getEl(params.nextEl);\n      const $prevEl = getEl(params.prevEl);\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', onNextClick);\n      }\n\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', onPrevClick);\n      }\n\n      Object.assign(swiper.navigation, {\n        $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl,\n        prevEl: $prevEl && $prevEl[0]\n      });\n\n      if (!swiper.enabled) {\n        if ($nextEl) $nextEl.addClass(params.lockClass);\n        if ($prevEl) $prevEl.addClass(params.lockClass);\n      }\n    }\n\n    function destroy() {\n      const {\n        $nextEl,\n        $prevEl\n      } = swiper.navigation;\n\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    }\n\n    on('init', () => {\n      init();\n      update();\n    });\n    on('toEdge fromEdge lock unlock', () => {\n      update();\n    });\n    on('destroy', () => {\n      destroy();\n    });\n    on('enable disable', () => {\n      const {\n        $nextEl,\n        $prevEl\n      } = swiper.navigation;\n\n      if ($nextEl) {\n        $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n      }\n\n      if ($prevEl) {\n        $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n      }\n    });\n    on('click', (_s, e) => {\n      const {\n        $nextEl,\n        $prevEl\n      } = swiper.navigation;\n      const targetEl = e.target;\n\n      if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n        if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n        let isHidden;\n\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n\n        if (isHidden === true) {\n          emit('navigationShow');\n        } else {\n          emit('navigationHide');\n        }\n\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    });\n    Object.assign(swiper.navigation, {\n      update,\n      init,\n      destroy\n    });\n  }\n\n  function classesToSelector(classes = '') {\n    return `.${classes.trim().replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\n.replace(/ /g, '.')}`;\n  }\n\n  function Pagination({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    const pfx = 'swiper-pagination';\n    extendParams({\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets',\n        // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: number => number,\n        formatFractionTotal: number => number,\n        bulletClass: `${pfx}-bullet`,\n        bulletActiveClass: `${pfx}-bullet-active`,\n        modifierClass: `${pfx}-`,\n        currentClass: `${pfx}-current`,\n        totalClass: `${pfx}-total`,\n        hiddenClass: `${pfx}-hidden`,\n        progressbarFillClass: `${pfx}-progressbar-fill`,\n        progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n        clickableClass: `${pfx}-clickable`,\n        lockClass: `${pfx}-lock`,\n        horizontalClass: `${pfx}-horizontal`,\n        verticalClass: `${pfx}-vertical`\n      }\n    });\n    swiper.pagination = {\n      el: null,\n      $el: null,\n      bullets: []\n    };\n    let bulletSize;\n    let dynamicBulletIndex = 0;\n\n    function isPaginationDisabled() {\n      return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;\n    }\n\n    function setSideBullets($bulletEl, position) {\n      const {\n        bulletActiveClass\n      } = swiper.params.pagination;\n      $bulletEl[position]().addClass(`${bulletActiveClass}-${position}`)[position]().addClass(`${bulletActiveClass}-${position}-${position}`);\n    }\n\n    function update() {\n      // Render || Update Pagination bullets/items\n      const rtl = swiper.rtl;\n      const params = swiper.params.pagination;\n      if (isPaginationDisabled()) return;\n      const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      const $el = swiper.pagination.$el; // Current/Total\n\n      let current;\n      const total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n\n        if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n          current -= slidesLength - swiper.loopedSlides * 2;\n        }\n\n        if (current > total - 1) current -= total;\n        if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      } // Types\n\n\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        const bullets = swiper.pagination.bullets;\n        let firstIndex;\n        let lastIndex;\n        let midIndex;\n\n        if (params.dynamicBullets) {\n          bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', `${bulletSize * (params.dynamicMainBullets + 4)}px`);\n\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            dynamicBulletIndex += current - (swiper.previousIndex - swiper.loopedSlides || 0);\n\n            if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n              dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (dynamicBulletIndex < 0) {\n              dynamicBulletIndex = 0;\n            }\n          }\n\n          firstIndex = Math.max(current - dynamicBulletIndex, 0);\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n\n        bullets.removeClass(['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`).join(' '));\n\n        if ($el.length > 1) {\n          bullets.each(bullet => {\n            const $bullet = $(bullet);\n            const bulletIndex = $bullet.index();\n\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(`${params.bulletActiveClass}-main`);\n              }\n\n              if (bulletIndex === firstIndex) {\n                setSideBullets($bullet, 'prev');\n              }\n\n              if (bulletIndex === lastIndex) {\n                setSideBullets($bullet, 'next');\n              }\n            }\n          });\n        } else {\n          const $bullet = bullets.eq(current);\n          const bulletIndex = $bullet.index();\n          $bullet.addClass(params.bulletActiveClass);\n\n          if (params.dynamicBullets) {\n            const $firstDisplayedBullet = bullets.eq(firstIndex);\n            const $lastDisplayedBullet = bullets.eq(lastIndex);\n\n            for (let i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n            }\n\n            if (swiper.params.loop) {\n              if (bulletIndex >= bullets.length) {\n                for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                  bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n                }\n\n                bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n              } else {\n                setSideBullets($firstDisplayedBullet, 'prev');\n                setSideBullets($lastDisplayedBullet, 'next');\n              }\n            } else {\n              setSideBullets($firstDisplayedBullet, 'prev');\n              setSideBullets($lastDisplayedBullet, 'next');\n            }\n          }\n        }\n\n        if (params.dynamicBullets) {\n          const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n          const offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n        }\n      }\n\n      if (params.type === 'fraction') {\n        $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\n        $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n      }\n\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n\n        $el.find(classesToSelector(params.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n      }\n\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        emit('paginationRender', $el[0]);\n      } else {\n        emit('paginationUpdate', $el[0]);\n      }\n\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    }\n\n    function render() {\n      // Render Container\n      const params = swiper.params.pagination;\n      if (isPaginationDisabled()) return;\n      const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      const $el = swiper.pagination.$el;\n      let paginationHTML = '';\n\n      if (params.type === 'bullets') {\n        let numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n        if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) {\n          numberOfBullets = slidesLength;\n        }\n\n        for (let i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n          }\n        }\n\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n      }\n\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n        }\n\n        $el.html(paginationHTML);\n      }\n\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n        }\n\n        $el.html(paginationHTML);\n      }\n\n      if (params.type !== 'custom') {\n        emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    }\n\n    function init() {\n      swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n        el: 'swiper-pagination'\n      });\n      const params = swiper.params.pagination;\n      if (!params.el) return;\n      let $el = $(params.el);\n      if ($el.length === 0) return;\n\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\n        $el = swiper.$el.find(params.el); // check if it belongs to another nested Swiper\n\n        if ($el.length > 1) {\n          $el = $el.filter(el => {\n            if ($(el).parents('.swiper')[0] !== swiper.el) return false;\n            return true;\n          });\n        }\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n      $el.addClass(params.modifierClass + swiper.params.direction);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\n          e.preventDefault();\n          let index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) index += swiper.loopedSlides;\n          swiper.slideTo(index);\n        });\n      }\n\n      Object.assign(swiper.pagination, {\n        $el,\n        el: $el[0]\n      });\n\n      if (!swiper.enabled) {\n        $el.addClass(params.lockClass);\n      }\n    }\n\n    function destroy() {\n      const params = swiper.params.pagination;\n      if (isPaginationDisabled()) return;\n      const $el = swiper.pagination.$el;\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      $el.removeClass(params.modifierClass + swiper.params.direction);\n      if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n\n      if (params.clickable) {\n        $el.off('click', classesToSelector(params.bulletClass));\n      }\n    }\n\n    on('init', () => {\n      init();\n      render();\n      update();\n    });\n    on('activeIndexChange', () => {\n      if (swiper.params.loop) {\n        update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        update();\n      }\n    });\n    on('snapIndexChange', () => {\n      if (!swiper.params.loop) {\n        update();\n      }\n    });\n    on('slidesLengthChange', () => {\n      if (swiper.params.loop) {\n        render();\n        update();\n      }\n    });\n    on('snapGridLengthChange', () => {\n      if (!swiper.params.loop) {\n        render();\n        update();\n      }\n    });\n    on('destroy', () => {\n      destroy();\n    });\n    on('enable disable', () => {\n      const {\n        $el\n      } = swiper.pagination;\n\n      if ($el) {\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);\n      }\n    });\n    on('lock unlock', () => {\n      update();\n    });\n    on('click', (_s, e) => {\n      const targetEl = e.target;\n      const {\n        $el\n      } = swiper.pagination;\n\n      if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\n        if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n        const isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);\n\n        if (isHidden === true) {\n          emit('paginationShow');\n        } else {\n          emit('paginationHide');\n        }\n\n        $el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    });\n    Object.assign(swiper.pagination, {\n      render,\n      update,\n      init,\n      destroy\n    });\n  }\n\n  function Scrollbar({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    const document = getDocument();\n    let isTouched = false;\n    let timeout = null;\n    let dragTimeout = null;\n    let dragStartPos;\n    let dragSize;\n    let trackSize;\n    let divider;\n    extendParams({\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag'\n      }\n    });\n    swiper.scrollbar = {\n      el: null,\n      dragEl: null,\n      $el: null,\n      $dragEl: null\n    };\n\n    function setTranslate() {\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      const {\n        scrollbar,\n        rtlTranslate: rtl,\n        progress\n      } = swiper;\n      const {\n        $dragEl,\n        $el\n      } = scrollbar;\n      const params = swiper.params.scrollbar;\n      let newSize = dragSize;\n      let newPos = (trackSize - dragSize) * progress;\n\n      if (rtl) {\n        newPos = -newPos;\n\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n        $dragEl[0].style.width = `${newSize}px`;\n      } else {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n        $dragEl[0].style.height = `${newSize}px`;\n      }\n\n      if (params.hide) {\n        clearTimeout(timeout);\n        $el[0].style.opacity = 1;\n        timeout = setTimeout(() => {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    }\n\n    function setTransition(duration) {\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      swiper.scrollbar.$dragEl.transition(duration);\n    }\n\n    function updateSize() {\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      const {\n        scrollbar\n      } = swiper;\n      const {\n        $dragEl,\n        $el\n      } = scrollbar;\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n      divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = `${dragSize}px`;\n      } else {\n        $dragEl[0].style.height = `${dragSize}px`;\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n\n      if (swiper.params.scrollbar.hide) {\n        $el[0].style.opacity = 0;\n      }\n\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n      }\n    }\n\n    function getPointerPosition(e) {\n      if (swiper.isHorizontal()) {\n        return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\n      }\n\n      return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\n    }\n\n    function setDragPosition(e) {\n      const {\n        scrollbar,\n        rtlTranslate: rtl\n      } = swiper;\n      const {\n        $el\n      } = scrollbar;\n      let positionRatio;\n      positionRatio = (getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    function onDragStart(e) {\n      const params = swiper.params.scrollbar;\n      const {\n        scrollbar,\n        $wrapperEl\n      } = swiper;\n      const {\n        $el,\n        $dragEl\n      } = scrollbar;\n      isTouched = true;\n      dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n      e.preventDefault();\n      e.stopPropagation();\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      setDragPosition(e);\n      clearTimeout(dragTimeout);\n      $el.transition(0);\n\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', 'none');\n      }\n\n      emit('scrollbarDragStart', e);\n    }\n\n    function onDragMove(e) {\n      const {\n        scrollbar,\n        $wrapperEl\n      } = swiper;\n      const {\n        $el,\n        $dragEl\n      } = scrollbar;\n      if (!isTouched) return;\n      if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      emit('scrollbarDragMove', e);\n    }\n\n    function onDragEnd(e) {\n      const params = swiper.params.scrollbar;\n      const {\n        scrollbar,\n        $wrapperEl\n      } = swiper;\n      const {\n        $el\n      } = scrollbar;\n      if (!isTouched) return;\n      isTouched = false;\n\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', '');\n        $wrapperEl.transition('');\n      }\n\n      if (params.hide) {\n        clearTimeout(dragTimeout);\n        dragTimeout = nextTick(() => {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n\n      emit('scrollbarDragEnd', e);\n\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    }\n\n    function events(method) {\n      const {\n        scrollbar,\n        touchEventsTouch,\n        touchEventsDesktop,\n        params,\n        support\n      } = swiper;\n      const $el = scrollbar.$el;\n      const target = $el[0];\n      const activeListener = support.passiveListener && params.passiveListeners ? {\n        passive: false,\n        capture: false\n      } : false;\n      const passiveListener = support.passiveListener && params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      if (!target) return;\n      const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n\n      if (!support.touch) {\n        target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);\n        document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);\n        document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);\n      } else {\n        target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);\n        target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);\n        target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);\n      }\n    }\n\n    function enableDraggable() {\n      if (!swiper.params.scrollbar.el) return;\n      events('on');\n    }\n\n    function disableDraggable() {\n      if (!swiper.params.scrollbar.el) return;\n      events('off');\n    }\n\n    function init() {\n      const {\n        scrollbar,\n        $el: $swiperEl\n      } = swiper;\n      swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n        el: 'swiper-scrollbar'\n      });\n      const params = swiper.params.scrollbar;\n      if (!params.el) return;\n      let $el = $(params.el);\n\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n\n      if ($dragEl.length === 0) {\n        $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n        $el.append($dragEl);\n      }\n\n      Object.assign(scrollbar, {\n        $el,\n        el: $el[0],\n        $dragEl,\n        dragEl: $dragEl[0]\n      });\n\n      if (params.draggable) {\n        enableDraggable();\n      }\n\n      if ($el) {\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n      }\n    }\n\n    function destroy() {\n      disableDraggable();\n    }\n\n    on('init', () => {\n      init();\n      updateSize();\n      setTranslate();\n    });\n    on('update resize observerUpdate lock unlock', () => {\n      updateSize();\n    });\n    on('setTranslate', () => {\n      setTranslate();\n    });\n    on('setTransition', (_s, duration) => {\n      setTransition(duration);\n    });\n    on('enable disable', () => {\n      const {\n        $el\n      } = swiper.scrollbar;\n\n      if ($el) {\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n      }\n    });\n    on('destroy', () => {\n      destroy();\n    });\n    Object.assign(swiper.scrollbar, {\n      updateSize,\n      setTranslate,\n      init,\n      destroy\n    });\n  }\n\n  function Parallax({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      parallax: {\n        enabled: false\n      }\n    });\n\n    const setTransform = (el, progress) => {\n      const {\n        rtl\n      } = swiper;\n      const $el = $(el);\n      const rtlFactor = rtl ? -1 : 1;\n      const p = $el.attr('data-swiper-parallax') || '0';\n      let x = $el.attr('data-swiper-parallax-x');\n      let y = $el.attr('data-swiper-parallax-y');\n      const scale = $el.attr('data-swiper-parallax-scale');\n      const opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if (x.indexOf('%') >= 0) {\n        x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n      } else {\n        x = `${x * progress * rtlFactor}px`;\n      }\n\n      if (y.indexOf('%') >= 0) {\n        y = `${parseInt(y, 10) * progress}%`;\n      } else {\n        y = `${y * progress}px`;\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n        $el[0].style.opacity = currentOpacity;\n      }\n\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform(`translate3d(${x}, ${y}, 0px)`);\n      } else {\n        const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n        $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n      }\n    };\n\n    const setTranslate = () => {\n      const {\n        $el,\n        slides,\n        progress,\n        snapGrid\n      } = swiper;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n        setTransform(el, progress);\n      });\n      slides.each((slideEl, slideIndex) => {\n        let slideProgress = slideEl.progress;\n\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n        }\n\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n          setTransform(el, slideProgress);\n        });\n      });\n    };\n\n    const setTransition = (duration = swiper.params.speed) => {\n      const {\n        $el\n      } = swiper;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n    };\n\n    on('beforeInit', () => {\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    });\n    on('init', () => {\n      if (!swiper.params.parallax.enabled) return;\n      setTranslate();\n    });\n    on('setTranslate', () => {\n      if (!swiper.params.parallax.enabled) return;\n      setTranslate();\n    });\n    on('setTransition', (_swiper, duration) => {\n      if (!swiper.params.parallax.enabled) return;\n      setTransition(duration);\n    });\n  }\n\n  function Zoom({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    const window = getWindow();\n    extendParams({\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed'\n      }\n    });\n    swiper.zoom = {\n      enabled: false\n    };\n    let currentScale = 1;\n    let isScaling = false;\n    let gesturesEnabled;\n    let fakeGestureTouched;\n    let fakeGestureMoved;\n    const gesture = {\n      $slideEl: undefined,\n      slideWidth: undefined,\n      slideHeight: undefined,\n      $imageEl: undefined,\n      $imageWrapEl: undefined,\n      maxRatio: 3\n    };\n    const image = {\n      isTouched: undefined,\n      isMoved: undefined,\n      currentX: undefined,\n      currentY: undefined,\n      minX: undefined,\n      minY: undefined,\n      maxX: undefined,\n      maxY: undefined,\n      width: undefined,\n      height: undefined,\n      startX: undefined,\n      startY: undefined,\n      touchesStart: {},\n      touchesCurrent: {}\n    };\n    const velocity = {\n      x: undefined,\n      y: undefined,\n      prevPositionX: undefined,\n      prevPositionY: undefined,\n      prevTime: undefined\n    };\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n\n      set(value) {\n        if (scale !== value) {\n          const imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;\n          const slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;\n          emit('zoomChange', value, imageEl, slideEl);\n        }\n\n        scale = value;\n      }\n\n    });\n\n    function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) return 1;\n      const x1 = e.targetTouches[0].pageX;\n      const y1 = e.targetTouches[0].pageY;\n      const x2 = e.targetTouches[1].pageX;\n      const y2 = e.targetTouches[1].pageY;\n      const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n      return distance;\n    } // Events\n\n\n    function onGestureStart(e) {\n      const support = swiper.support;\n      const params = swiper.params.zoom;\n      fakeGestureTouched = false;\n      fakeGestureMoved = false;\n\n      if (!support.gestures) {\n        if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n          return;\n        }\n\n        fakeGestureTouched = true;\n        gesture.scaleStart = getDistanceBetweenTouches(e);\n      }\n\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n        if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n        gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transition(0);\n      }\n\n      isScaling = true;\n    }\n\n    function onGestureChange(e) {\n      const support = swiper.support;\n      const params = swiper.params.zoom;\n      const zoom = swiper.zoom;\n\n      if (!support.gestures) {\n        if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n          return;\n        }\n\n        fakeGestureMoved = true;\n        gesture.scaleMove = getDistanceBetweenTouches(e);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n        if (e.type === 'gesturechange') onGestureStart(e);\n        return;\n      }\n\n      if (support.gestures) {\n        zoom.scale = e.scale * currentScale;\n      } else {\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n      }\n\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n      }\n\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n      }\n\n      gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    }\n\n    function onGestureEnd(e) {\n      const device = swiper.device;\n      const support = swiper.support;\n      const params = swiper.params.zoom;\n      const zoom = swiper.zoom;\n\n      if (!support.gestures) {\n        if (!fakeGestureTouched || !fakeGestureMoved) {\n          return;\n        }\n\n        if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\n          return;\n        }\n\n        fakeGestureTouched = false;\n        fakeGestureMoved = false;\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n      currentScale = zoom.scale;\n      isScaling = false;\n      if (zoom.scale === 1) gesture.$slideEl = undefined;\n    }\n\n    function onTouchStart(e) {\n      const device = swiper.device;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      if (image.isTouched) return;\n      if (device.android && e.cancelable) e.preventDefault();\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    }\n\n    function onTouchMove(e) {\n      const zoom = swiper.zoom;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) return;\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n      } // Define if we need image drag\n\n\n      const scaledWidth = image.width * zoom.scale;\n      const scaledHeight = image.height * zoom.scale;\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n      image.maxY = -image.minY;\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !isScaling) {\n        if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n          image.isTouched = false;\n          return;\n        }\n\n        if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n          image.isTouched = false;\n          return;\n        }\n      }\n\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n\n      e.stopPropagation();\n      image.isMoved = true;\n      image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n      image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n      }\n\n      if (image.currentX > image.maxX) {\n        image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n      }\n\n      if (image.currentY > image.maxY) {\n        image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n      } // Velocity\n\n\n      if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n      if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n      if (!velocity.prevTime) velocity.prevTime = Date.now();\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n      gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n    }\n\n    function onTouchEnd() {\n      const zoom = swiper.zoom;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n\n      image.isTouched = false;\n      image.isMoved = false;\n      let momentumDurationX = 300;\n      let momentumDurationY = 300;\n      const momentumDistanceX = velocity.x * momentumDurationX;\n      const newPositionX = image.currentX + momentumDistanceX;\n      const momentumDistanceY = velocity.y * momentumDurationY;\n      const newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n      if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n      if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n      const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n      image.currentX = newPositionX;\n      image.currentY = newPositionY; // Define if we need image drag\n\n      const scaledWidth = image.width * zoom.scale;\n      const scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n      gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n    }\n\n    function onTransitionEnd() {\n      const zoom = swiper.zoom;\n\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        if (gesture.$imageEl) {\n          gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        }\n\n        if (gesture.$imageWrapEl) {\n          gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n        }\n\n        zoom.scale = 1;\n        currentScale = 1;\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n      }\n    }\n\n    function zoomIn(e) {\n      const zoom = swiper.zoom;\n      const params = swiper.params.zoom;\n\n      if (!gesture.$slideEl) {\n        if (e && e.target) {\n          gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n        }\n\n        if (!gesture.$slideEl) {\n          if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n            gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n          } else {\n            gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n          }\n        }\n\n        gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n        gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.style.overflow = 'hidden';\n        swiper.wrapperEl.style.touchAction = 'none';\n      }\n\n      gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n      let touchX;\n      let touchY;\n      let offsetX;\n      let offsetY;\n      let diffX;\n      let diffY;\n      let translateX;\n      let translateY;\n      let imageWidth;\n      let imageHeight;\n      let scaledWidth;\n      let scaledHeight;\n      let translateMinX;\n      let translateMinY;\n      let translateMaxX;\n      let translateMaxY;\n      let slideWidth;\n      let slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left + window.scrollX;\n        offsetY = gesture.$slideEl.offset().top + window.scrollY;\n        diffX = offsetX + slideWidth / 2 - touchX;\n        diffY = offsetY + slideHeight / 2 - touchY;\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n        translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n        translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n\n      gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n      gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    }\n\n    function zoomOut() {\n      const zoom = swiper.zoom;\n      const params = swiper.params.zoom;\n\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n\n        gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n        gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.style.touchAction = '';\n      }\n\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n      gesture.$slideEl = undefined;\n    } // Toggle Zoom\n\n\n    function zoomToggle(e) {\n      const zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoomOut();\n      } else {\n        // Zoom In\n        zoomIn(e);\n      }\n    }\n\n    function getListeners() {\n      const support = swiper.support;\n      const passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      const activeListenerWithCapture = support.passiveListener ? {\n        passive: false,\n        capture: true\n      } : true;\n      return {\n        passiveListener,\n        activeListenerWithCapture\n      };\n    }\n\n    function getSlideSelector() {\n      return `.${swiper.params.slideClass}`;\n    }\n\n    function toggleGestures(method) {\n      const {\n        passiveListener\n      } = getListeners();\n      const slideSelector = getSlideSelector();\n      swiper.$wrapperEl[method]('gesturestart', slideSelector, onGestureStart, passiveListener);\n      swiper.$wrapperEl[method]('gesturechange', slideSelector, onGestureChange, passiveListener);\n      swiper.$wrapperEl[method]('gestureend', slideSelector, onGestureEnd, passiveListener);\n    }\n\n    function enableGestures() {\n      if (gesturesEnabled) return;\n      gesturesEnabled = true;\n      toggleGestures('on');\n    }\n\n    function disableGestures() {\n      if (!gesturesEnabled) return;\n      gesturesEnabled = false;\n      toggleGestures('off');\n    } // Attach/Detach Events\n\n\n    function enable() {\n      const zoom = swiper.zoom;\n      if (zoom.enabled) return;\n      zoom.enabled = true;\n      const support = swiper.support;\n      const {\n        passiveListener,\n        activeListenerWithCapture\n      } = getListeners();\n      const slideSelector = getSlideSelector(); // Scale image\n\n      if (support.gestures) {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n        }\n      } // Move image\n\n\n      swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n    }\n\n    function disable() {\n      const zoom = swiper.zoom;\n      if (!zoom.enabled) return;\n      const support = swiper.support;\n      zoom.enabled = false;\n      const {\n        passiveListener,\n        activeListenerWithCapture\n      } = getListeners();\n      const slideSelector = getSlideSelector(); // Scale image\n\n      if (support.gestures) {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n        }\n      } // Move image\n\n\n      swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n    }\n\n    on('init', () => {\n      if (swiper.params.zoom.enabled) {\n        enable();\n      }\n    });\n    on('destroy', () => {\n      disable();\n    });\n    on('touchStart', (_s, e) => {\n      if (!swiper.zoom.enabled) return;\n      onTouchStart(e);\n    });\n    on('touchEnd', (_s, e) => {\n      if (!swiper.zoom.enabled) return;\n      onTouchEnd();\n    });\n    on('doubleTap', (_s, e) => {\n      if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        zoomToggle(e);\n      }\n    });\n    on('transitionEnd', () => {\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        onTransitionEnd();\n      }\n    });\n    on('slideChange', () => {\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n        onTransitionEnd();\n      }\n    });\n    Object.assign(swiper.zoom, {\n      enable,\n      disable,\n      in: zoomIn,\n      out: zoomOut,\n      toggle: zoomToggle\n    });\n  }\n\n  function Lazy({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    extendParams({\n      lazy: {\n        checkInView: false,\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n        scrollingElement: '',\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader'\n      }\n    });\n    swiper.lazy = {};\n    let scrollHandlerAttached = false;\n    let initialImageLoaded = false;\n\n    function loadInSlide(index, loadInDuplicate = true) {\n      const params = swiper.params.lazy;\n      if (typeof index === 'undefined') return;\n      if (swiper.slides.length === 0) return;\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      const $slideEl = isVirtual ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`) : swiper.slides.eq(index);\n      const $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images.push($slideEl[0]);\n      }\n\n      if ($images.length === 0) return;\n      $images.each(imageEl => {\n        const $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n        const background = $imageEl.attr('data-background');\n        const src = $imageEl.attr('data-src');\n        const srcset = $imageEl.attr('data-srcset');\n        const sizes = $imageEl.attr('data-sizes');\n        const $pictureEl = $imageEl.parent('picture');\n        swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, () => {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\n\n          if (background) {\n            $imageEl.css('background-image', `url(\"${background}\")`);\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n\n            if ($pictureEl.length) {\n              $pictureEl.children('source').each(sourceEl => {\n                const $source = $(sourceEl);\n\n                if ($source.attr('data-srcset')) {\n                  $source.attr('srcset', $source.attr('data-srcset'));\n                  $source.removeAttr('data-srcset');\n                }\n              });\n            }\n\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find(`.${params.preloaderClass}`).remove();\n\n          if (swiper.params.loop && loadInDuplicate) {\n            const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n              loadInSlide(originalSlide.index(), false);\n            } else {\n              const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n              loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n\n          emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n\n          if (swiper.params.autoHeight) {\n            swiper.updateAutoHeight();\n          }\n        });\n        emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    }\n\n    function load() {\n      const {\n        $wrapperEl,\n        params: swiperParams,\n        slides,\n        activeIndex\n      } = swiper;\n      const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      const params = swiperParams.lazy;\n      let slidesPerView = swiperParams.slidesPerView;\n\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n            return true;\n          }\n        } else if (slides[index]) return true;\n\n        return false;\n      }\n\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n\n        return $(slideEl).index();\n      }\n\n      if (!initialImageLoaded) initialImageLoaded = true;\n\n      if (swiper.params.watchSlidesProgress) {\n        $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each(slideEl => {\n          const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) loadInSlide(i);\n        }\n      } else {\n        loadInSlide(activeIndex);\n      }\n\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n          const amount = params.loadPrevNextAmount;\n          const spv = slidesPerView;\n          const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n\n          for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n            if (slideExist(i)) loadInSlide(i);\n          } // Prev Slides\n\n\n          for (let i = minIndex; i < activeIndex; i += 1) {\n            if (slideExist(i)) loadInSlide(i);\n          }\n        } else {\n          const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n          if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide));\n          const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n          if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide));\n        }\n      }\n    }\n\n    function checkInViewOnLoad() {\n      const window = getWindow();\n      if (!swiper || swiper.destroyed) return;\n      const $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);\n      const isWindow = $scrollElement[0] === window;\n      const scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\n      const scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\n      const swiperOffset = swiper.$el.offset();\n      const {\n        rtlTranslate: rtl\n      } = swiper;\n      let inView = false;\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\n\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n\n        if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n          inView = true;\n        }\n      }\n\n      const passiveListener = swiper.touchEvents.start === 'touchstart' && swiper.support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n\n      if (inView) {\n        load();\n        $scrollElement.off('scroll', checkInViewOnLoad, passiveListener);\n      } else if (!scrollHandlerAttached) {\n        scrollHandlerAttached = true;\n        $scrollElement.on('scroll', checkInViewOnLoad, passiveListener);\n      }\n    }\n\n    on('beforeInit', () => {\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    });\n    on('init', () => {\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.checkInView) {\n          checkInViewOnLoad();\n        } else {\n          load();\n        }\n      }\n    });\n    on('scroll', () => {\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.freeMode.sticky) {\n        load();\n      }\n    });\n    on('scrollbarDragMove resize _freeModeNoMomentumRelease', () => {\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.checkInView) {\n          checkInViewOnLoad();\n        } else {\n          load();\n        }\n      }\n    });\n    on('transitionStart', () => {\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded) {\n          if (swiper.params.lazy.checkInView) {\n            checkInViewOnLoad();\n          } else {\n            load();\n          }\n        }\n      }\n    });\n    on('transitionEnd', () => {\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        if (swiper.params.lazy.checkInView) {\n          checkInViewOnLoad();\n        } else {\n          load();\n        }\n      }\n    });\n    on('slideChange', () => {\n      const {\n        lazy,\n        cssMode,\n        watchSlidesProgress,\n        touchReleaseOnEdges,\n        resistanceRatio\n      } = swiper.params;\n\n      if (lazy.enabled && (cssMode || watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0))) {\n        load();\n      }\n    });\n    Object.assign(swiper.lazy, {\n      load,\n      loadInSlide\n    });\n  }\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n  function Controller({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide' // or 'container'\n\n      }\n    });\n    swiper.controller = {\n      control: undefined\n    };\n\n    function LinearSpline(x, y) {\n      const binarySearch = function search() {\n        let maxIndex;\n        let minIndex;\n        let guess;\n        return (array, val) => {\n          minIndex = -1;\n          maxIndex = array.length;\n\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n\n          return maxIndex;\n        };\n      }();\n\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n\n      let i1;\n      let i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\n        return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n      };\n\n      return this;\n    } // xxx: for now i will just save one spline function to to\n\n\n    function getInterpolateFunction(c) {\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    }\n\n    function setTranslate(_t, byController) {\n      const controlled = swiper.controller.control;\n      let multiplier;\n      let controlledTranslate;\n      const Swiper = swiper.constructor;\n\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n\n        if (swiper.params.controller.by === 'slide') {\n          getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n\n      if (Array.isArray(controlled)) {\n        for (let i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    }\n\n    function setTransition(duration, byController) {\n      const Swiper = swiper.constructor;\n      const controlled = swiper.controller.control;\n      let i;\n\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n\n        if (duration !== 0) {\n          c.transitionStart();\n\n          if (c.params.autoHeight) {\n            nextTick(() => {\n              c.updateAutoHeight();\n            });\n          }\n\n          c.$wrapperEl.transitionEnd(() => {\n            if (!controlled) return;\n\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n\n            c.transitionEnd();\n          });\n        }\n      }\n\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    }\n\n    function removeSpline() {\n      if (!swiper.controller.control) return;\n\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    }\n\n    on('beforeInit', () => {\n      swiper.controller.control = swiper.params.controller.control;\n    });\n    on('update', () => {\n      removeSpline();\n    });\n    on('resize', () => {\n      removeSpline();\n    });\n    on('observerUpdate', () => {\n      removeSpline();\n    });\n    on('setTranslate', (_s, translate, byController) => {\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    });\n    on('setTransition', (_s, duration, byController) => {\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    });\n    Object.assign(swiper.controller, {\n      setTranslate,\n      setTransition\n    });\n  }\n\n  function A11y({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n        slideLabelMessage: '{{index}} / {{slidesLength}}',\n        containerMessage: null,\n        containerRoleDescriptionMessage: null,\n        itemRoleDescriptionMessage: null,\n        slideRole: 'group'\n      }\n    });\n    let liveRegion = null;\n\n    function notify(message) {\n      const notification = liveRegion;\n      if (notification.length === 0) return;\n      notification.html('');\n      notification.html(message);\n    }\n\n    function getRandomNumber(size = 16) {\n      const randomChar = () => Math.round(16 * Math.random()).toString(16);\n\n      return 'x'.repeat(size).replace(/x/g, randomChar);\n    }\n\n    function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n    }\n\n    function makeElNotFocusable($el) {\n      $el.attr('tabIndex', '-1');\n    }\n\n    function addElRole($el, role) {\n      $el.attr('role', role);\n    }\n\n    function addElRoleDescription($el, description) {\n      $el.attr('aria-roledescription', description);\n    }\n\n    function addElControls($el, controls) {\n      $el.attr('aria-controls', controls);\n    }\n\n    function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n    }\n\n    function addElId($el, id) {\n      $el.attr('id', id);\n    }\n\n    function addElLive($el, live) {\n      $el.attr('aria-live', live);\n    }\n\n    function disableEl($el) {\n      $el.attr('aria-disabled', true);\n    }\n\n    function enableEl($el) {\n      $el.attr('aria-disabled', false);\n    }\n\n    function onEnterOrSpaceKey(e) {\n      if (e.keyCode !== 13 && e.keyCode !== 32) return;\n      const params = swiper.params.a11y;\n      const $targetEl = $(e.target);\n\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n\n        if (swiper.isEnd) {\n          notify(params.lastSlideMessage);\n        } else {\n          notify(params.nextSlideMessage);\n        }\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n\n        if (swiper.isBeginning) {\n          notify(params.firstSlideMessage);\n        } else {\n          notify(params.prevSlideMessage);\n        }\n      }\n\n      if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {\n        $targetEl[0].click();\n      }\n    }\n\n    function updateNavigation() {\n      if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n      const {\n        $nextEl,\n        $prevEl\n      } = swiper.navigation;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          disableEl($prevEl);\n          makeElNotFocusable($prevEl);\n        } else {\n          enableEl($prevEl);\n          makeElFocusable($prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          disableEl($nextEl);\n          makeElNotFocusable($nextEl);\n        } else {\n          enableEl($nextEl);\n          makeElFocusable($nextEl);\n        }\n      }\n    }\n\n    function hasPagination() {\n      return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n    }\n\n    function hasClickablePagination() {\n      return hasPagination() && swiper.params.pagination.clickable;\n    }\n\n    function updatePagination() {\n      const params = swiper.params.a11y;\n      if (!hasPagination()) return;\n      swiper.pagination.bullets.each(bulletEl => {\n        const $bulletEl = $(bulletEl);\n\n        if (swiper.params.pagination.clickable) {\n          makeElFocusable($bulletEl);\n\n          if (!swiper.params.pagination.renderBullet) {\n            addElRole($bulletEl, 'button');\n            addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n          }\n        }\n\n        if ($bulletEl.is(`.${swiper.params.pagination.bulletActiveClass}`)) {\n          $bulletEl.attr('aria-current', 'true');\n        } else {\n          $bulletEl.removeAttr('aria-current');\n        }\n      });\n    }\n\n    const initNavEl = ($el, wrapperId, message) => {\n      makeElFocusable($el);\n\n      if ($el[0].tagName !== 'BUTTON') {\n        addElRole($el, 'button');\n        $el.on('keydown', onEnterOrSpaceKey);\n      }\n\n      addElLabel($el, message);\n      addElControls($el, wrapperId);\n    };\n\n    function init() {\n      const params = swiper.params.a11y;\n      swiper.$el.append(liveRegion); // Container\n\n      const $containerEl = swiper.$el;\n\n      if (params.containerRoleDescriptionMessage) {\n        addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n      }\n\n      if (params.containerMessage) {\n        addElLabel($containerEl, params.containerMessage);\n      } // Wrapper\n\n\n      const $wrapperEl = swiper.$wrapperEl;\n      const wrapperId = $wrapperEl.attr('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n      const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n      addElId($wrapperEl, wrapperId);\n      addElLive($wrapperEl, live); // Slide\n\n      if (params.itemRoleDescriptionMessage) {\n        addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\n      }\n\n      addElRole($(swiper.slides), params.slideRole);\n      const slidesLength = swiper.params.loop ? swiper.slides.filter(el => !el.classList.contains(swiper.params.slideDuplicateClass)).length : swiper.slides.length;\n      swiper.slides.each((slideEl, index) => {\n        const $slideEl = $(slideEl);\n        const slideIndex = swiper.params.loop ? parseInt($slideEl.attr('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel($slideEl, ariaLabelMessage);\n      }); // Navigation\n\n      let $nextEl;\n      let $prevEl;\n\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n\n      if ($nextEl && $nextEl.length) {\n        initNavEl($nextEl, wrapperId, params.nextSlideMessage);\n      }\n\n      if ($prevEl && $prevEl.length) {\n        initNavEl($prevEl, wrapperId, params.prevSlideMessage);\n      } // Pagination\n\n\n      if (hasClickablePagination()) {\n        swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n      }\n    }\n\n    function destroy() {\n      if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n      let $nextEl;\n      let $prevEl;\n\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n\n      if ($nextEl) {\n        $nextEl.off('keydown', onEnterOrSpaceKey);\n      }\n\n      if ($prevEl) {\n        $prevEl.off('keydown', onEnterOrSpaceKey);\n      } // Pagination\n\n\n      if (hasClickablePagination()) {\n        swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n      }\n    }\n\n    on('beforeInit', () => {\n      liveRegion = $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`);\n    });\n    on('afterInit', () => {\n      if (!swiper.params.a11y.enabled) return;\n      init();\n      updateNavigation();\n    });\n    on('toEdge', () => {\n      if (!swiper.params.a11y.enabled) return;\n      updateNavigation();\n    });\n    on('fromEdge', () => {\n      if (!swiper.params.a11y.enabled) return;\n      updateNavigation();\n    });\n    on('paginationUpdate', () => {\n      if (!swiper.params.a11y.enabled) return;\n      updatePagination();\n    });\n    on('destroy', () => {\n      if (!swiper.params.a11y.enabled) return;\n      destroy();\n    });\n  }\n\n  function History({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      history: {\n        enabled: false,\n        root: '',\n        replaceState: false,\n        key: 'slides'\n      }\n    });\n    let initialized = false;\n    let paths = {};\n\n    const slugify = text => {\n      return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n    };\n\n    const getPathValues = urlOverride => {\n      const window = getWindow();\n      let location;\n\n      if (urlOverride) {\n        location = new URL(urlOverride);\n      } else {\n        location = window.location;\n      }\n\n      const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n      const total = pathArray.length;\n      const key = pathArray[total - 2];\n      const value = pathArray[total - 1];\n      return {\n        key,\n        value\n      };\n    };\n\n    const setHistory = (key, index) => {\n      const window = getWindow();\n      if (!initialized || !swiper.params.history.enabled) return;\n      let location;\n\n      if (swiper.params.url) {\n        location = new URL(swiper.params.url);\n      } else {\n        location = window.location;\n      }\n\n      const slide = swiper.slides.eq(index);\n      let value = slugify(slide.attr('data-history'));\n\n      if (swiper.params.history.root.length > 0) {\n        let root = swiper.params.history.root;\n        if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n        value = `${root}/${key}/${value}`;\n      } else if (!location.pathname.includes(key)) {\n        value = `${key}/${value}`;\n      }\n\n      const currentState = window.history.state;\n\n      if (currentState && currentState.value === value) {\n        return;\n      }\n\n      if (swiper.params.history.replaceState) {\n        window.history.replaceState({\n          value\n        }, null, value);\n      } else {\n        window.history.pushState({\n          value\n        }, null, value);\n      }\n    };\n\n    const scrollToSlide = (speed, value, runCallbacks) => {\n      if (value) {\n        for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n          const slide = swiper.slides.eq(i);\n          const slideHistory = slugify(slide.attr('data-history'));\n\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            const index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    };\n\n    const setHistoryPopState = () => {\n      paths = getPathValues(swiper.params.url);\n      scrollToSlide(swiper.params.speed, swiper.paths.value, false);\n    };\n\n    const init = () => {\n      const window = getWindow();\n      if (!swiper.params.history) return;\n\n      if (!window.history || !window.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n\n      initialized = true;\n      paths = getPathValues(swiper.params.url);\n      if (!paths.key && !paths.value) return;\n      scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n    };\n\n    const destroy = () => {\n      const window = getWindow();\n\n      if (!swiper.params.history.replaceState) {\n        window.removeEventListener('popstate', setHistoryPopState);\n      }\n    };\n\n    on('init', () => {\n      if (swiper.params.history.enabled) {\n        init();\n      }\n    });\n    on('destroy', () => {\n      if (swiper.params.history.enabled) {\n        destroy();\n      }\n    });\n    on('transitionEnd _freeModeNoMomentumRelease', () => {\n      if (initialized) {\n        setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    });\n    on('slideChange', () => {\n      if (initialized && swiper.params.cssMode) {\n        setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    });\n  }\n\n  function HashNavigation({\n    swiper,\n    extendParams,\n    emit,\n    on\n  }) {\n    let initialized = false;\n    const document = getDocument();\n    const window = getWindow();\n    extendParams({\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false\n      }\n    });\n\n    const onHashChange = () => {\n      emit('hashChange');\n      const newHash = document.location.hash.replace('#', '');\n      const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n\n      if (newHash !== activeSlideHash) {\n        const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n        if (typeof newIndex === 'undefined') return;\n        swiper.slideTo(newIndex);\n      }\n    };\n\n    const setHash = () => {\n      if (!initialized || !swiper.params.hashNavigation.enabled) return;\n\n      if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n        window.history.replaceState(null, null, `#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || '');\n        emit('hashSet');\n      } else {\n        const slide = swiper.slides.eq(swiper.activeIndex);\n        const hash = slide.attr('data-hash') || slide.attr('data-history');\n        document.location.hash = hash || '';\n        emit('hashSet');\n      }\n    };\n\n    const init = () => {\n      if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n      initialized = true;\n      const hash = document.location.hash.replace('#', '');\n\n      if (hash) {\n        const speed = 0;\n\n        for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n          const slide = swiper.slides.eq(i);\n          const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            const index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n\n      if (swiper.params.hashNavigation.watchState) {\n        $(window).on('hashchange', onHashChange);\n      }\n    };\n\n    const destroy = () => {\n      if (swiper.params.hashNavigation.watchState) {\n        $(window).off('hashchange', onHashChange);\n      }\n    };\n\n    on('init', () => {\n      if (swiper.params.hashNavigation.enabled) {\n        init();\n      }\n    });\n    on('destroy', () => {\n      if (swiper.params.hashNavigation.enabled) {\n        destroy();\n      }\n    });\n    on('transitionEnd _freeModeNoMomentumRelease', () => {\n      if (initialized) {\n        setHash();\n      }\n    });\n    on('slideChange', () => {\n      if (initialized && swiper.params.cssMode) {\n        setHash();\n      }\n    });\n  }\n\n  /* eslint no-underscore-dangle: \"off\" */\n  function Autoplay({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    let timeout;\n    swiper.autoplay = {\n      running: false,\n      paused: false\n    };\n    extendParams({\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n        pauseOnMouseEnter: false\n      }\n    });\n\n    function run() {\n      const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      let delay = swiper.params.autoplay.delay;\n\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n\n      clearTimeout(timeout);\n      timeout = nextTick(() => {\n        let autoplayResult;\n\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n            emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n            emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            emit('autoplay');\n          } else {\n            stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.isEnd) {\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n          emit('autoplay');\n        } else {\n          stop();\n        }\n\n        if (swiper.params.cssMode && swiper.autoplay.running) run();else if (autoplayResult === false) {\n          run();\n        }\n      }, delay);\n    }\n\n    function start() {\n      if (typeof timeout !== 'undefined') return false;\n      if (swiper.autoplay.running) return false;\n      swiper.autoplay.running = true;\n      emit('autoplayStart');\n      run();\n      return true;\n    }\n\n    function stop() {\n      if (!swiper.autoplay.running) return false;\n      if (typeof timeout === 'undefined') return false;\n\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n\n      swiper.autoplay.running = false;\n      emit('autoplayStop');\n      return true;\n    }\n\n    function pause(speed) {\n      if (!swiper.autoplay.running) return;\n      if (swiper.autoplay.paused) return;\n      if (timeout) clearTimeout(timeout);\n      swiper.autoplay.paused = true;\n\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        run();\n      } else {\n        ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n          swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);\n        });\n      }\n    }\n\n    function onVisibilityChange() {\n      const document = getDocument();\n\n      if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n        pause();\n      }\n\n      if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n        run();\n        swiper.autoplay.paused = false;\n      }\n    }\n\n    function onTransitionEnd(e) {\n      if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n      if (e.target !== swiper.$wrapperEl[0]) return;\n      ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n        swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n      });\n      swiper.autoplay.paused = false;\n\n      if (!swiper.autoplay.running) {\n        stop();\n      } else {\n        run();\n      }\n    }\n\n    function onMouseEnter() {\n      if (swiper.params.autoplay.disableOnInteraction) {\n        stop();\n      } else {\n        pause();\n      }\n\n      ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n        swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n      });\n    }\n\n    function onMouseLeave() {\n      if (swiper.params.autoplay.disableOnInteraction) {\n        return;\n      }\n\n      swiper.autoplay.paused = false;\n      run();\n    }\n\n    function attachMouseEvents() {\n      if (swiper.params.autoplay.pauseOnMouseEnter) {\n        swiper.$el.on('mouseenter', onMouseEnter);\n        swiper.$el.on('mouseleave', onMouseLeave);\n      }\n    }\n\n    function detachMouseEvents() {\n      swiper.$el.off('mouseenter', onMouseEnter);\n      swiper.$el.off('mouseleave', onMouseLeave);\n    }\n\n    on('init', () => {\n      if (swiper.params.autoplay.enabled) {\n        start();\n        const document = getDocument();\n        document.addEventListener('visibilitychange', onVisibilityChange);\n        attachMouseEvents();\n      }\n    });\n    on('beforeTransitionStart', (_s, speed, internal) => {\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          stop();\n        }\n      }\n    });\n    on('sliderFirstMove', () => {\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          stop();\n        } else {\n          pause();\n        }\n      }\n    });\n    on('touchEnd', () => {\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n        run();\n      }\n    });\n    on('destroy', () => {\n      detachMouseEvents();\n\n      if (swiper.autoplay.running) {\n        stop();\n      }\n\n      const document = getDocument();\n      document.removeEventListener('visibilitychange', onVisibilityChange);\n    });\n    Object.assign(swiper.autoplay, {\n      pause,\n      run,\n      start,\n      stop\n    });\n  }\n\n  function Thumb({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      thumbs: {\n        swiper: null,\n        multipleActiveThumbs: true,\n        autoScrollOffset: 0,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-thumbs'\n      }\n    });\n    let initialized = false;\n    let swiperCreated = false;\n    swiper.thumbs = {\n      swiper: null\n    };\n\n    function onThumbClick() {\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      const clickedIndex = thumbsSwiper.clickedIndex;\n      const clickedSlide = thumbsSwiper.clickedSlide;\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n      let slideToIndex;\n\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n\n      if (swiper.params.loop) {\n        let currentIndex = swiper.activeIndex;\n\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix(); // eslint-disable-next-line\n\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n\n        const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n        const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n        if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;\n      }\n\n      swiper.slideTo(slideToIndex);\n    }\n\n    function init() {\n      const {\n        thumbs: thumbsParams\n      } = swiper.params;\n      if (initialized) return false;\n      initialized = true;\n      const SwiperClass = swiper.constructor;\n\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        Object.assign(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n        Object.assign(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n      } else if (isObject(thumbsParams.swiper)) {\n        const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n        Object.assign(thumbsSwiperParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n        swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n        swiperCreated = true;\n      }\n\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', onThumbClick);\n      return true;\n    }\n\n    function update(initial) {\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n      const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n      const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n        let currentThumbsIndex = thumbsSwiper.activeIndex;\n        let newThumbsIndex;\n        let direction;\n\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix(); // eslint-disable-next-line\n\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          } // Find actual thumbs index to slide to\n\n\n          const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n          const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n\n          if (typeof prevThumbsIndex === 'undefined') {\n            newThumbsIndex = nextThumbsIndex;\n          } else if (typeof nextThumbsIndex === 'undefined') {\n            newThumbsIndex = prevThumbsIndex;\n          } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n            newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\n          } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n            newThumbsIndex = nextThumbsIndex;\n          } else {\n            newThumbsIndex = prevThumbsIndex;\n          }\n\n          direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n        } else {\n          newThumbsIndex = swiper.realIndex;\n          direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n        }\n\n        if (useOffset) {\n          newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n        }\n\n        if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) ;\n\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      } // Activate thumbs\n\n\n      let thumbsToActivate = 1;\n      const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      if (!swiper.params.thumbs.multipleActiveThumbs) {\n        thumbsToActivate = 1;\n      }\n\n      thumbsToActivate = Math.floor(thumbsToActivate);\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n\n      if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n        for (let i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n        }\n      } else {\n        for (let i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n        }\n      }\n    }\n\n    on('beforeInit', () => {\n      const {\n        thumbs\n      } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      init();\n      update(true);\n    });\n    on('slideChange update resize observerUpdate', () => {\n      if (!swiper.thumbs.swiper) return;\n      update();\n    });\n    on('setTransition', (_s, duration) => {\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    });\n    on('beforeDestroy', () => {\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n\n      if (swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    });\n    Object.assign(swiper.thumbs, {\n      init,\n      update\n    });\n  }\n\n  function freeMode({\n    swiper,\n    extendParams,\n    emit,\n    once\n  }) {\n    extendParams({\n      freeMode: {\n        enabled: false,\n        momentum: true,\n        momentumRatio: 1,\n        momentumBounce: true,\n        momentumBounceRatio: 1,\n        momentumVelocityRatio: 1,\n        sticky: false,\n        minimumVelocity: 0.02\n      }\n    });\n\n    function onTouchMove() {\n      const {\n        touchEventsData: data,\n        touches\n      } = swiper; // Velocity\n\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime\n        });\n      }\n\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: now()\n      });\n    }\n\n    function onTouchEnd({\n      currentPos\n    }) {\n      const {\n        params,\n        $wrapperEl,\n        rtlTranslate: rtl,\n        snapGrid,\n        touchEventsData: data\n      } = swiper; // Time diff\n\n      const touchEndTime = now();\n      const timeDiff = touchEndTime - data.touchStartTime;\n\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n\n        return;\n      }\n\n      if (params.freeMode.momentum) {\n        if (data.velocities.length > 1) {\n          const lastMoveEvent = data.velocities.pop();\n          const velocityEvent = data.velocities.pop();\n          const distance = lastMoveEvent.position - velocityEvent.position;\n          const time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n\n          if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n            swiper.velocity = 0;\n          } // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n\n\n          if (time > 150 || now() - lastMoveEvent.time > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n\n        swiper.velocity *= params.freeMode.momentumVelocityRatio;\n        data.velocities.length = 0;\n        let momentumDuration = 1000 * params.freeMode.momentumRatio;\n        const momentumDistance = swiper.velocity * momentumDuration;\n        let newPosition = swiper.translate + momentumDistance;\n        if (rtl) newPosition = -newPosition;\n        let doBounce = false;\n        let afterBouncePosition;\n        const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n        let needsLoopFix;\n\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeMode.momentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeMode.momentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\n        } else if (params.freeMode.sticky) {\n          let nextSlide;\n\n          for (let j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n\n          newPosition = -newPosition;\n        }\n\n        if (needsLoopFix) {\n          once('transitionEnd', () => {\n            swiper.loopFix();\n          });\n        } // Fix duration\n\n\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n\n          if (params.freeMode.sticky) {\n            // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n            // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n            // It's easy to see this when simulating touch with mouse events. To fix this,\n            // limit single-slide swipes to the default slide duration. This also has the\n            // nice side effect of matching slide speed if the user stopped moving before\n            // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n            // For faster swipes, also apply limits (albeit higher ones).\n            const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n            const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n            if (moveDistance < currentSlideSize) {\n              momentumDuration = params.speed;\n            } else if (moveDistance < 2 * currentSlideSize) {\n              momentumDuration = params.speed * 1.5;\n            } else {\n              momentumDuration = params.speed * 2.5;\n            }\n          }\n        } else if (params.freeMode.sticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeMode.momentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n            emit('momentumBounce');\n            swiper.setTransition(params.speed);\n            setTimeout(() => {\n              swiper.setTranslate(afterBouncePosition);\n              $wrapperEl.transitionEnd(() => {\n                if (!swiper || swiper.destroyed) return;\n                swiper.transitionEnd();\n              });\n            }, 0);\n          });\n        } else if (swiper.velocity) {\n          emit('_freeModeNoMomentumRelease');\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(() => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      } else if (params.freeMode) {\n        emit('_freeModeNoMomentumRelease');\n      }\n\n      if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n    }\n\n    Object.assign(swiper, {\n      freeMode: {\n        onTouchMove,\n        onTouchEnd\n      }\n    });\n  }\n\n  function Grid({\n    swiper,\n    extendParams\n  }) {\n    extendParams({\n      grid: {\n        rows: 1,\n        fill: 'column'\n      }\n    });\n    let slidesNumberEvenToRows;\n    let slidesPerRow;\n    let numFullColumns;\n\n    const initSlides = slidesLength => {\n      const {\n        slidesPerView\n      } = swiper.params;\n      const {\n        rows,\n        fill\n      } = swiper.params.grid;\n      slidesPerRow = slidesNumberEvenToRows / rows;\n      numFullColumns = Math.floor(slidesLength / rows);\n\n      if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n      }\n\n      if (slidesPerView !== 'auto' && fill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n      }\n    };\n\n    const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n      const {\n        slidesPerGroup,\n        spaceBetween\n      } = swiper.params;\n      const {\n        rows,\n        fill\n      } = swiper.params.grid; // Set slides order\n\n      let newSlideOrderIndex;\n      let column;\n      let row;\n\n      if (fill === 'row' && slidesPerGroup > 1) {\n        const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n        const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n        const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n        slide.css({\n          '-webkit-order': newSlideOrderIndex,\n          order: newSlideOrderIndex\n        });\n      } else if (fill === 'column') {\n        column = Math.floor(i / rows);\n        row = i - column * rows;\n\n        if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n          row += 1;\n\n          if (row >= rows) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - row * slidesPerRow;\n      }\n\n      slide.css(getDirectionLabel('margin-top'), row !== 0 ? spaceBetween && `${spaceBetween}px` : '');\n    };\n\n    const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n      const {\n        spaceBetween,\n        centeredSlides,\n        roundLengths\n      } = swiper.params;\n      const {\n        rows\n      } = swiper.params.grid;\n      swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n      swiper.$wrapperEl.css({\n        [getDirectionLabel('width')]: `${swiper.virtualSize + spaceBetween}px`\n      });\n\n      if (centeredSlides) {\n        snapGrid.splice(0, snapGrid.length);\n        const newSlidesGrid = [];\n\n        for (let i = 0; i < snapGrid.length; i += 1) {\n          let slidesGridItem = snapGrid[i];\n          if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n          if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n        }\n\n        snapGrid.push(...newSlidesGrid);\n      }\n    };\n\n    swiper.grid = {\n      initSlides,\n      updateSlide,\n      updateWrapperSize\n    };\n  }\n\n  function appendSlide(slides) {\n    const swiper = this;\n    const {\n      $wrapperEl,\n      params\n    } = swiper;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) $wrapperEl.append(slides[i]);\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!params.observer) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide(slides) {\n    const swiper = this;\n    const {\n      params,\n      $wrapperEl,\n      activeIndex\n    } = swiper;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    let newActiveIndex = activeIndex + 1;\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) $wrapperEl.prepend(slides[i]);\n      }\n\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!params.observer) {\n      swiper.update();\n    }\n\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide(index, slides) {\n    const swiper = this;\n    const {\n      $wrapperEl,\n      params,\n      activeIndex\n    } = swiper;\n    let activeIndexBuffer = activeIndex;\n\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n\n    const baseLength = swiper.slides.length;\n\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n\n    let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n    const slidesBuffer = [];\n\n    for (let i = baseLength - 1; i >= index; i -= 1) {\n      const currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) $wrapperEl.append(slides[i]);\n      }\n\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (let i = 0; i < slidesBuffer.length; i += 1) {\n      $wrapperEl.append(slidesBuffer[i]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!params.observer) {\n      swiper.update();\n    }\n\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide(slidesIndexes) {\n    const swiper = this;\n    const {\n      params,\n      $wrapperEl,\n      activeIndex\n    } = swiper;\n    let activeIndexBuffer = activeIndex;\n\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n\n    let newActiveIndex = activeIndexBuffer;\n    let indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (let i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n      }\n\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!params.observer) {\n      swiper.update();\n    }\n\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides() {\n    const swiper = this;\n    const slidesIndexes = [];\n\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  function Manipulation({\n    swiper\n  }) {\n    Object.assign(swiper, {\n      appendSlide: appendSlide.bind(swiper),\n      prependSlide: prependSlide.bind(swiper),\n      addSlide: addSlide.bind(swiper),\n      removeSlide: removeSlide.bind(swiper),\n      removeAllSlides: removeAllSlides.bind(swiper)\n    });\n  }\n\n  function effectInit(params) {\n    const {\n      effect,\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      overwriteParams,\n      perspective\n    } = params;\n    on('beforeInit', () => {\n      if (swiper.params.effect !== effect) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n\n      if (perspective && perspective()) {\n        swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      }\n\n      const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n      Object.assign(swiper.params, overwriteParamsResult);\n      Object.assign(swiper.originalParams, overwriteParamsResult);\n    });\n    on('setTranslate', () => {\n      if (swiper.params.effect !== effect) return;\n      setTranslate();\n    });\n    on('setTransition', (_s, duration) => {\n      if (swiper.params.effect !== effect) return;\n      setTransition(duration);\n    });\n  }\n\n  function effectTarget(effectParams, $slideEl) {\n    if (effectParams.transformEl) {\n      return $slideEl.find(effectParams.transformEl).css({\n        'backface-visibility': 'hidden',\n        '-webkit-backface-visibility': 'hidden'\n      });\n    }\n\n    return $slideEl;\n  }\n\n  function effectVirtualTransitionEnd({\n    swiper,\n    duration,\n    transformEl,\n    allSlides\n  }) {\n    const {\n      slides,\n      activeIndex,\n      $wrapperEl\n    } = swiper;\n\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      let $transitionEndTarget;\n\n      if (allSlides) {\n        $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;\n      } else {\n        $transitionEndTarget = transformEl ? slides.eq(activeIndex).find(transformEl) : slides.eq(activeIndex);\n      }\n\n      $transitionEndTarget.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  }\n\n  function EffectFade({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      fadeEffect: {\n        crossFade: false,\n        transformEl: null\n      }\n    });\n\n    const setTranslate = () => {\n      const {\n        slides\n      } = swiper;\n      const params = swiper.params.fadeEffect;\n\n      for (let i = 0; i < slides.length; i += 1) {\n        const $slideEl = swiper.slides.eq(i);\n        const offset = $slideEl[0].swiperSlideOffset;\n        let tx = -offset;\n        if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n        let ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n\n        const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        const $targetEl = effectTarget(params, $slideEl);\n        $targetEl.css({\n          opacity: slideOpacity\n        }).transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n      }\n    };\n\n    const setTransition = duration => {\n      const {\n        transformEl\n      } = swiper.params.fadeEffect;\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n      $transitionElements.transition(duration);\n      effectVirtualTransitionEnd({\n        swiper,\n        duration,\n        transformEl,\n        allSlides: true\n      });\n    };\n\n    effectInit({\n      effect: 'fade',\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      overwriteParams: () => ({\n        slidesPerView: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: !swiper.params.cssMode\n      })\n    });\n  }\n\n  function EffectCube({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94\n      }\n    });\n\n    const setTranslate = () => {\n      const {\n        $el,\n        $wrapperEl,\n        slides,\n        width: swiperWidth,\n        height: swiperHeight,\n        rtlTranslate: rtl,\n        size: swiperSize,\n        browser\n      } = swiper;\n      const params = swiper.params.cubeEffect;\n      const isHorizontal = swiper.isHorizontal();\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      let wrapperRotate = 0;\n      let $cubeShadowEl;\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n\n          $cubeShadowEl.css({\n            height: `${swiperWidth}px`\n          });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n\n      for (let i = 0; i < slides.length; i += 1) {\n        const $slideEl = slides.eq(i);\n        let slideIndex = i;\n\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n\n        let slideAngle = slideIndex * 90;\n        let round = Math.floor(slideAngle / 360);\n\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n\n        const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        let tx = 0;\n        let ty = 0;\n        let tz = 0;\n\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + round * 4 * swiperSize;\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = 3 * swiperSize + swiperSize * 4 * round;\n        }\n\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = slideIndex * 90 + progress * 90;\n          if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n        }\n\n        $slideEl.transform(transform);\n\n        if (params.slideShadows) {\n          // Set shadows\n          let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if (shadowBefore.length === 0) {\n            shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n            $slideEl.append(shadowBefore);\n          }\n\n          if (shadowAfter.length === 0) {\n            shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n            $slideEl.append(shadowAfter);\n          }\n\n          if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n          if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n        }\n      }\n\n      $wrapperEl.css({\n        '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n        'transform-origin': `50% 50% -${swiperSize / 2}px`\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n        } else {\n          const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n          const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n          const scale1 = params.shadowScale;\n          const scale2 = params.shadowScale / multiplier;\n          const offset = params.shadowOffset;\n          $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n        }\n      }\n\n      const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n      $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n    };\n\n    const setTransition = duration => {\n      const {\n        $el,\n        slides\n      } = swiper;\n      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    };\n\n    effectInit({\n      effect: 'cube',\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      perspective: () => true,\n      overwriteParams: () => ({\n        slidesPerView: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true\n      })\n    });\n  }\n\n  function createShadow(params, $slideEl, side) {\n    const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n    const $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;\n    let $shadowEl = $shadowContainer.children(`.${shadowClass}`);\n\n    if (!$shadowEl.length) {\n      $shadowEl = $(`<div class=\"swiper-slide-shadow${side ? `-${side}` : ''}\"></div>`);\n      $shadowContainer.append($shadowEl);\n    }\n\n    return $shadowEl;\n  }\n\n  function EffectFlip({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n        transformEl: null\n      }\n    });\n\n    const setTranslate = () => {\n      const {\n        slides,\n        rtlTranslate: rtl\n      } = swiper;\n      const params = swiper.params.flipEffect;\n\n      for (let i = 0; i < slides.length; i += 1) {\n        const $slideEl = slides.eq(i);\n        let progress = $slideEl[0].progress;\n\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n\n        const offset = $slideEl[0].swiperSlideOffset;\n        const rotate = -180 * progress;\n        let rotateY = rotate;\n        let rotateX = 0;\n        let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n        let ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (params.slideShadows) {\n          // Set shadows\n          let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if (shadowBefore.length === 0) {\n            shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\n          }\n\n          if (shadowAfter.length === 0) {\n            shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n          }\n\n          if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n          if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n        }\n\n        const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n        const $targetEl = effectTarget(params, $slideEl);\n        $targetEl.transform(transform);\n      }\n    };\n\n    const setTransition = duration => {\n      const {\n        transformEl\n      } = swiper.params.flipEffect;\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n      $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n      effectVirtualTransitionEnd({\n        swiper,\n        duration,\n        transformEl\n      });\n    };\n\n    effectInit({\n      effect: 'flip',\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      perspective: () => true,\n      overwriteParams: () => ({\n        slidesPerView: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: !swiper.params.cssMode\n      })\n    });\n  }\n\n  function EffectCoverflow({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        scale: 1,\n        modifier: 1,\n        slideShadows: true,\n        transformEl: null\n      }\n    });\n\n    const setTranslate = () => {\n      const {\n        width: swiperWidth,\n        height: swiperHeight,\n        slides,\n        slidesSizesGrid\n      } = swiper;\n      const params = swiper.params.coverflowEffect;\n      const isHorizontal = swiper.isHorizontal();\n      const transform = swiper.translate;\n      const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n      const rotate = isHorizontal ? params.rotate : -params.rotate;\n      const translate = params.depth; // Each slide offset from center\n\n      for (let i = 0, length = slides.length; i < length; i += 1) {\n        const $slideEl = slides.eq(i);\n        const slideSize = slidesSizesGrid[i];\n        const slideOffset = $slideEl[0].swiperSlideOffset;\n        const offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n        let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n        let translateZ = -translate * Math.abs(offsetMultiplier);\n        let stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n        if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n          stretch = parseFloat(params.stretch) / 100 * slideSize;\n        }\n\n        let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n        let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n        let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n        if (Math.abs(translateX) < 0.001) translateX = 0;\n        if (Math.abs(translateY) < 0.001) translateY = 0;\n        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n        if (Math.abs(scale) < 0.001) scale = 0;\n        const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n        const $targetEl = effectTarget(params, $slideEl);\n        $targetEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n        if (params.slideShadows) {\n          // Set shadows\n          let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');\n          }\n\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');\n          }\n\n          if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n          if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n        }\n      }\n    };\n\n    const setTransition = duration => {\n      const {\n        transformEl\n      } = swiper.params.coverflowEffect;\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n      $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    };\n\n    effectInit({\n      effect: 'coverflow',\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      perspective: () => true,\n      overwriteParams: () => ({\n        watchSlidesProgress: true\n      })\n    });\n  }\n\n  function EffectCreative({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      creativeEffect: {\n        transformEl: null,\n        limitProgress: 1,\n        shadowPerProgress: false,\n        progressMultiplier: 1,\n        perspective: true,\n        prev: {\n          translate: [0, 0, 0],\n          rotate: [0, 0, 0],\n          opacity: 1,\n          scale: 1\n        },\n        next: {\n          translate: [0, 0, 0],\n          rotate: [0, 0, 0],\n          opacity: 1,\n          scale: 1\n        }\n      }\n    });\n\n    const getTranslateValue = value => {\n      if (typeof value === 'string') return value;\n      return `${value}px`;\n    };\n\n    const setTranslate = () => {\n      const {\n        slides,\n        $wrapperEl,\n        slidesSizesGrid\n      } = swiper;\n      const params = swiper.params.creativeEffect;\n      const {\n        progressMultiplier: multiplier\n      } = params;\n      const isCenteredSlides = swiper.params.centeredSlides;\n\n      if (isCenteredSlides) {\n        const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n        $wrapperEl.transform(`translateX(calc(50% - ${margin}px))`);\n      }\n\n      for (let i = 0; i < slides.length; i += 1) {\n        const $slideEl = slides.eq(i);\n        const slideProgress = $slideEl[0].progress;\n        const progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);\n        let originalProgress = progress;\n\n        if (!isCenteredSlides) {\n          originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);\n        }\n\n        const offset = $slideEl[0].swiperSlideOffset;\n        const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n        const r = [0, 0, 0];\n        let custom = false;\n\n        if (!swiper.isHorizontal()) {\n          t[1] = t[0];\n          t[0] = 0;\n        }\n\n        let data = {\n          translate: [0, 0, 0],\n          rotate: [0, 0, 0],\n          scale: 1,\n          opacity: 1\n        };\n\n        if (progress < 0) {\n          data = params.next;\n          custom = true;\n        } else if (progress > 0) {\n          data = params.prev;\n          custom = true;\n        } // set translate\n\n\n        t.forEach((value, index) => {\n          t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n        }); // set rotates\n\n        r.forEach((value, index) => {\n          r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n        });\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n        const translateString = t.join(', ');\n        const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n        const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n        const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n        const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`; // Set shadows\n\n        if (custom && data.shadow || !custom) {\n          let $shadowEl = $slideEl.children('.swiper-slide-shadow');\n\n          if ($shadowEl.length === 0 && data.shadow) {\n            $shadowEl = createShadow(params, $slideEl);\n          }\n\n          if ($shadowEl.length) {\n            const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n            $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n          }\n        }\n\n        const $targetEl = effectTarget(params, $slideEl);\n        $targetEl.transform(transform).css({\n          opacity: opacityString\n        });\n\n        if (data.origin) {\n          $targetEl.css('transform-origin', data.origin);\n        }\n      }\n    };\n\n    const setTransition = duration => {\n      const {\n        transformEl\n      } = swiper.params.creativeEffect;\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n      $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n      effectVirtualTransitionEnd({\n        swiper,\n        duration,\n        transformEl,\n        allSlides: true\n      });\n    };\n\n    effectInit({\n      effect: 'creative',\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      perspective: () => swiper.params.creativeEffect.perspective,\n      overwriteParams: () => ({\n        watchSlidesProgress: true,\n        virtualTranslate: !swiper.params.cssMode\n      })\n    });\n  }\n\n  function EffectCards({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      cardsEffect: {\n        slideShadows: true,\n        transformEl: null\n      }\n    });\n\n    const setTranslate = () => {\n      const {\n        slides,\n        activeIndex\n      } = swiper;\n      const params = swiper.params.cardsEffect;\n      const {\n        startTranslate,\n        isTouched\n      } = swiper.touchEventsData;\n      const currentTranslate = swiper.translate;\n\n      for (let i = 0; i < slides.length; i += 1) {\n        const $slideEl = slides.eq(i);\n        const slideProgress = $slideEl[0].progress;\n        const progress = Math.min(Math.max(slideProgress, -4), 4);\n        let offset = $slideEl[0].swiperSlideOffset;\n\n        if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n          swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\n        }\n\n        if (swiper.params.centeredSlides && swiper.params.cssMode) {\n          offset -= slides[0].swiperSlideOffset;\n        }\n\n        let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n        let tY = 0;\n        const tZ = -100 * Math.abs(progress);\n        let scale = 1;\n        let rotate = -2 * progress;\n        let tXAdd = 8 - Math.abs(progress) * 0.75;\n        const isSwipeToNext = (i === activeIndex || i === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n        const isSwipeToPrev = (i === activeIndex || i === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n        if (isSwipeToNext || isSwipeToPrev) {\n          const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n          rotate += -28 * progress * subProgress;\n          scale += -0.5 * subProgress;\n          tXAdd += 96 * subProgress;\n          tY = `${-25 * subProgress * Math.abs(progress)}%`;\n        }\n\n        if (progress < 0) {\n          // next\n          tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n        } else if (progress > 0) {\n          // prev\n          tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n        } else {\n          tX = `${tX}px`;\n        }\n\n        if (!swiper.isHorizontal()) {\n          const prevY = tY;\n          tY = tX;\n          tX = prevY;\n        }\n\n        const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n        const transform = `\n      translate3d(${tX}, ${tY}, ${tZ}px)\n      rotateZ(${rotate}deg)\n      scale(${scaleString})\n    `;\n\n        if (params.slideShadows) {\n          // Set shadows\n          let $shadowEl = $slideEl.find('.swiper-slide-shadow');\n\n          if ($shadowEl.length === 0) {\n            $shadowEl = createShadow(params, $slideEl);\n          }\n\n          if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n        const $targetEl = effectTarget(params, $slideEl);\n        $targetEl.transform(transform);\n      }\n    };\n\n    const setTransition = duration => {\n      const {\n        transformEl\n      } = swiper.params.cardsEffect;\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n      $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n      effectVirtualTransitionEnd({\n        swiper,\n        duration,\n        transformEl\n      });\n    };\n\n    effectInit({\n      effect: 'cards',\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      perspective: () => true,\n      overwriteParams: () => ({\n        watchSlidesProgress: true,\n        virtualTranslate: !swiper.params.cssMode\n      })\n    });\n  }\n\n  // Swiper Class\n  const modules = [Virtual, Keyboard, Mousewheel, Navigation, Pagination, Scrollbar, Parallax, Zoom, Lazy, Controller, A11y, History, HashNavigation, Autoplay, Thumb, freeMode, Grid, Manipulation, EffectFade, EffectCube, EffectFlip, EffectCoverflow, EffectCreative, EffectCards];\n  Swiper.use(modules);\n\n  return Swiper;\n\n})));\n//# sourceMappingURL=swiper-bundle.js.map\n};\n\nexport default swiper();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// import rater from \"rater-js.js\";\r\n\r\n// Подключение библиотек\r\nimport './vendor/swiper.js';\r\nimport './vendor/rater.js';\r\n// import './vendor/rater-js.js';\r\n\r\nimport './price-slider.js';\r\nimport './vendor/imask.js';\r\n\r\n// import './util.js'\r\n\r\nimport './accordions.js';\r\nimport './sliders.js';\r\nimport './select.js';\r\nimport './burger.js';\r\nimport './catalog-filter.js';\r\nimport './sort-popup.js';\r\n\r\n// import Raty from 'raty-js';\r\n\r\nimport './vendor/jquery.rateyo.js';\r\n\r\n\r\n\r\n\r\n// import {Starry} from './vendor/starry.js';\r\n\r\n// import Starry from 'starry-rating';\r\n\r\n// Рейтинг\r\n\r\nconst goodRating = document.querySelector('[data-good-rating]');\r\n\r\n$(function () {\r\n\r\n  $(goodRating).rateYo({\r\n    starWidth: \"30px\",\r\n    // Расстояние между звездами\r\n    spacing: \"5px\",\r\n    // Рейтинг по умолчанию\r\n    // rating: 4,\r\n    // Цвет не выбранных звёзд\r\n    normalFill: \"#A0A0A0\",\r\n    // Цвет выбранных звёзд\r\n    ratedFill: \"#1C62CD\",\r\n    /* Установите значение readOnly: true, если вы хотите, чтобы рейтинг был недоступен для редактирования */\r\n    // readOnly: true,\r\n  });\r\n\r\n});\r\n\r\n// const starRating = new Starry(goodRating, {\r\n//   name: goodRating,\r\n//   stars: 5,\r\n//   // multiRating: false,\r\n// });\r\n\r\n// var starRatingId = 'ExampleRating'; // Html DOM id + star rating element name\r\n// const goodRating = document.querySelector('[data-good-rating]');\r\n// var starRating = new Starry(goodRating, {\r\n// \tname: starRatingId, // Use a name to determine tooltips for only this Starry element\r\n// \tlabels: [\r\n// \t\t'Low',\r\n// \t\t'Nice to have',\r\n// \t\t'Very nice',\r\n// \t\t'Perfect',\r\n// \t\t'Excellent'\r\n// \t],\r\n// \tonClear: function () {\r\n// \t\t$('[data-name=\"' + starRatingId + '\"] [data-tooltip]').tooltip('dispose');\r\n// \t},\r\n// \tonRender: function () {\r\n// \t\t$('[data-name=\"' + starRatingId + '\"] [data-tooltip]').tooltip({\r\n// \t\t\ttrigger: 'hover',\r\n// \t\t\tplacement: 'top'\r\n// \t\t});\r\n// \t},\r\n// \tonRate: function (rating) {\r\n// \t\tconsole.log(rating)\r\n// \t},\r\n// \ticons: {\r\n// \t\t// File path, uri or base64 string for `src` attribute\r\n// \t\tblank: './dist/icons/blank.svg',\r\n// \t\thover: './dist/icons/hover.svg',\r\n// \t\tactive: './dist/icons/active.svg'\r\n// \t}\r\n// });\r\n\r\n// const raty = new Raty(document.querySelector('[data-good-rating]'));\r\n\r\n// // Options\r\n// var options = {\r\n//   max_value: 10,\r\n//   step_size: 0.5,\r\n//   initial_value: 10,\r\n//   // selected_symbol_type: 'utf8_star', // Must be a key from symbols\r\n//   cursor: 'default',\r\n//   readonly: false,\r\n//   change_once: false, // Determines if the rating can only be set once\r\n//   ajax_method: 'POST',\r\n//   url: 'http://localhost/test.php',\r\n//   additional_data: {} // Additional data to send to the server\r\n// }\r\n\r\n// $('[data-good-rating]').rate(options);\r\n\r\n// var myRater = rater({element: document.querySelector('[data-good-rating]'), rateCallback: function rateCallback(rating, done) {\r\n//   //make async call to server however you want\r\n//   //in this example we have a 'service' that rate and returns the average rating\r\n//   myDataService.rate(rate).then(function(avgRating) {\r\n//       //update the avarage rating with the one we get from the server\r\n//       myRater.setRating(avgRating);\r\n//        //we could disable the rater to prevent another rating\r\n//        //if we dont want the user to be able to change their mind\r\n//       myRater.disable();\r\n//       //dont forget to call done\r\n//       done();\r\n//   }, function(error) {\r\n//           //handle the error\r\n//           //dont forget to call done\r\n//           done();\r\n//   });\r\n// }});\r\n\r\n\r\n\r\n// Табы - поиск по сайту\r\n\r\nconst search = document.querySelector('[data-search]');\r\n\r\nif (search) {\r\n\r\n  // Из Node List делаем массив с помощью Array.from, чтобы работал метод indexOf()\r\n  const tabs = Array.from(search.querySelectorAll('[data-tab-btn]'));\r\n  const tabContents = search.querySelectorAll('[data-tab-content]');\r\n\r\n  // Инициализация активных эл-ов\r\n  tabs[0].classList.add('is-active');\r\n  tabContents[0].classList.add('is-active');\r\n\r\n  search.addEventListener('click', (evt) => {\r\n    if (evt.target.matches('[data-tab-btn]')) {\r\n      const activeTab = evt.target;\r\n      const indexActiveTab = tabs.indexOf(activeTab);\r\n\r\n\r\n      tabs.forEach((tab) => {\r\n        tab.classList.remove('is-active');\r\n      })\r\n      activeTab.classList.add('is-active');\r\n\r\n\r\n      tabContents.forEach((content) => {\r\n        content.classList.remove('is-active');\r\n      })\r\n      tabContents[indexActiveTab].classList.add('is-active');\r\n    }\r\n  })\r\n}\r\n\r\n// Табы - фильтр товаров\r\n\r\nconst filterСatalog = document.querySelector('[data-filter-catalog]');\r\n\r\nif (filterСatalog) {\r\n\r\n  // Из Node List делаем массив с помощью Array.from, чтобы работал метод indexOf()\r\n  const tabs = Array.from(filterСatalog.querySelectorAll('[data-tab-btn]'));\r\n  const tabContents = filterСatalog.querySelectorAll('[data-tab-content]');\r\n\r\n  // Инициализация активных эл-ов\r\n  tabs[0].classList.add('is-active');\r\n  tabContents[0].classList.add('is-active');\r\n\r\n  filterСatalog.addEventListener('click', (evt) => {\r\n    if (evt.target.matches('[data-tab-btn]')) {\r\n      const activeTab = evt.target;\r\n      const indexActiveTab = tabs.indexOf(activeTab);\r\n\r\n\r\n      tabs.forEach((tab) => {\r\n        tab.classList.remove('is-active');\r\n      })\r\n      activeTab.classList.add('is-active');\r\n\r\n\r\n      tabContents.forEach((content) => {\r\n        content.classList.remove('is-active');\r\n      })\r\n      tabContents[indexActiveTab].classList.add('is-active');\r\n    }\r\n  })\r\n}\r\n\r\n\r\n// Популярные товары\r\n\r\nconst popularGoods = document.querySelector('[data-popular-goods]');\r\n\r\n// Табы - популярные товары\r\n// Изменение цвета сердечка - добавление в избранное\r\n\r\nif (popularGoods) {\r\n\r\n  // Из Node List делаем массив с помощью Array.from, чтобы работал метод indexOf()\r\n  const tabs = Array.from(popularGoods.querySelectorAll('[data-tab-btn]'));\r\n  const tabContents = popularGoods.querySelectorAll('[data-tab-content]');\r\n\r\n  // Инициализация активных эл-ов\r\n  tabs[0].classList.add('is-active');\r\n  tabContents[0].classList.add('is-active');\r\n\r\n\r\n  popularGoods.addEventListener('click', (evt) => {\r\n\r\n    // Изменение цвета сердечка - добавление в избранное\r\n    if (evt.target.matches('[data-product-to-favourites]')) {\r\n      const favouritesBtn = evt.target;\r\n      console.log(favouritesBtn);\r\n      favouritesBtn.classList.toggle('is-favourite');\r\n    }\r\n\r\n    // Табы - популярные товары\r\n    if (evt.target.matches('[data-tab-btn]')) {\r\n      const activeTab = evt.target;\r\n      const indexActiveTab = tabs.indexOf(activeTab);\r\n\r\n\r\n      tabs.forEach((tab) => {\r\n        tab.classList.remove('is-active');\r\n      })\r\n      activeTab.classList.add('is-active');\r\n\r\n\r\n      tabContents.forEach((content) => {\r\n        content.classList.remove('is-active');\r\n      })\r\n      tabContents[indexActiveTab].classList.add('is-active');\r\n    }\r\n  })\r\n}\r\n\r\n// Популярные товары\r\n\r\nconst similarGoods = document.querySelector('[data-similar-goods]');\r\n\r\n// Табы - популярные товары\r\n// Изменение цвета сердечка - добавление в избранное\r\n\r\nif (similarGoods) {\r\n\r\n  // Из Node List делаем массив с помощью Array.from, чтобы работал метод indexOf()\r\n  const tabs = Array.from(similarGoods.querySelectorAll('[data-tab-btn]'));\r\n  const tabContents = similarGoods.querySelectorAll('[data-tab-content]');\r\n\r\n  // Инициализация активных эл-ов\r\n  tabs[0].classList.add('is-active');\r\n  tabContents[0].classList.add('is-active');\r\n\r\n\r\n  similarGoods.addEventListener('click', (evt) => {\r\n\r\n    // Изменение цвета сердечка - добавление в избранное\r\n    if (evt.target.matches('[data-product-to-favourites]')) {\r\n      const favouritesBtn = evt.target;\r\n      console.log(favouritesBtn);\r\n      favouritesBtn.classList.toggle('is-favourite');\r\n    }\r\n\r\n    // Табы - популярные товары\r\n    if (evt.target.matches('[data-tab-btn]')) {\r\n      const activeTab = evt.target;\r\n      const indexActiveTab = tabs.indexOf(activeTab);\r\n\r\n\r\n      tabs.forEach((tab) => {\r\n        tab.classList.remove('is-active');\r\n      })\r\n      activeTab.classList.add('is-active');\r\n\r\n\r\n      tabContents.forEach((content) => {\r\n        content.classList.remove('is-active');\r\n      })\r\n      tabContents[indexActiveTab].classList.add('is-active');\r\n    }\r\n  })\r\n}\r\n\r\n\r\n// Каталог\r\n\r\nconst pageCatalog = document.querySelector('[data-page-catalog]');\r\n\r\nif (pageCatalog) {\r\n  // Блок с раскладкой товаров\r\n  const sortLayoutBlock = pageCatalog.querySelector('[data-sort-layout]');\r\n\r\n  pageCatalog.addEventListener('click', (evt) => {\r\n\r\n    // Раскрытие списков фильтра\r\n    if (evt.target.matches('[data-filter-title]')) {\r\n      const filterTitleBtn = evt.target;\r\n      const filterGroup = evt.target.closest('[data-filter-group]');\r\n      const filterGroupWrapper = filterGroup.querySelector('[data-filter-group-wrapper]');\r\n\r\n\r\n      filterGroup.classList.toggle('is-open');\r\n      filterTitleBtn.classList.toggle('is-open');\r\n      filterGroupWrapper.classList.toggle('is-open');\r\n\r\n      if (filterGroup.classList.contains('is-open')) {\r\n        filterGroupWrapper.style.maxHeight = filterGroupWrapper.scrollHeight + 'px';\r\n      } else {\r\n        filterGroupWrapper.style.maxHeight = 0;\r\n      }\r\n    }\r\n\r\n    // Если на странице есть варианты раскладки товаров\r\n    if (sortLayoutBlock) {\r\n      // Список товаров\r\n      const goodsList = pageCatalog.querySelector('[data-popular-goods-list]');\r\n      // Все кнопки вариантов раскладки\r\n      const catalogLayoutBtns = sortLayoutBlock.querySelectorAll('[data-catalog-layout]');\r\n\r\n      // Измнение раскладки товаров\r\n      if (evt.target.matches('[data-catalog-layout]')) {\r\n        // Кнопка изменения раскладки\r\n        const layoutTypeBtn = evt.target;\r\n        // Тип раскладки\r\n        const layoutType = evt.target.dataset.catalogLayout;\r\n\r\n        switch (layoutType) {\r\n          case 'grid':\r\n            catalogLayoutBtns.forEach((btn) => {\r\n              btn.classList.remove('is-active');\r\n            })\r\n            layoutTypeBtn.classList.add('is-active');\r\n\r\n            if (goodsList.classList.contains('is-block')) {\r\n              goodsList.classList.remove('is-block');\r\n            }\r\n\r\n            break\r\n\r\n          case 'block':\r\n            catalogLayoutBtns.forEach((btn) => {\r\n              btn.classList.remove('is-active');\r\n            })\r\n            layoutTypeBtn.classList.add('is-active');\r\n\r\n            goodsList.classList.add('is-block');\r\n            break\r\n        }\r\n\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n\r\n// Появление крестика при наборе текста и удаление текста\r\nconst presearch = document.querySelector('[data-presearch]');\r\n\r\nif (presearch) {\r\n\r\n  const presearchInputField = presearch.querySelector('[data-presearch-input]');\r\n  const presearchResetBtn = presearch.querySelector('[data-presearch-reset]');\r\n\r\n  // удаление текста\r\n  presearch.addEventListener('click', (evt) => {\r\n    if (evt.target.matches('[data-presearch-reset]')) {\r\n      if (presearchInputField.value !== \"\") {\r\n        presearchInputField.value = \"\";\r\n        presearchResetBtn.classList.remove('is-active');\r\n      }\r\n    }\r\n  })\r\n\r\n  // Появление кнопки сброса набранного текста\r\n  presearchInputField.addEventListener('input', () => {\r\n    if (presearchInputField.value !== \"\") {\r\n      presearchResetBtn.classList.add('is-active');\r\n    } else {\r\n      presearchResetBtn.classList.remove('is-active');\r\n    }\r\n  })\r\n}\r\n\r\n// Табы - карточка товара\r\n\r\nconst productData = document.querySelector('[data-product-data]');\r\n\r\n// const productInfoMax = document.querySelector('[data-first-paragraph]').scrollHeight;\r\n// console.log(productInfoMax.offsetHeight)\r\n// console.log(document.querySelector('[data-first-paragraph]').scrollHeight)\r\n\r\n\r\nif (productData) {\r\n\r\n  // const productInfoWrapper = productData.querySelector('[data-product-info]');\r\n  // const productInfoContent = productInfoWrapper.querySelector('[data-product-info-content]');\r\n\r\n  // Минимальная высота описания товара\r\n  // const productInfoMaxHeight = productInfoContent.querySelector('[data-first-paragraph]');\r\n\r\n  // console.log(productInfoMaxHeight.scrollHeight)\r\n  // console.log(productInfoMaxHeight.offsetHeight)\r\n\r\n  // Задаем скрытие эл-та в зависимости от кол-ва вариантов сортировки используя переменную - высоты блока\r\n  // productInfoContent.style.setProperty('--product-info-max-height', `${productInfoMaxHeight.scrollHeight}px`);\r\n\r\n\r\n  // Из Node List делаем массив с помощью Array.from, чтобы работал метод indexOf()\r\n  const tabs = Array.from(productData.querySelectorAll('[data-tab-btn]'));\r\n  const tabContents = productData.querySelectorAll('[data-tab-content]');\r\n\r\n  // Инициализация активных эл-ов\r\n  tabs[0].classList.add('is-active');\r\n  tabContents[0].classList.add('is-active');\r\n\r\n  productData.addEventListener('click', (evt) => {\r\n    if (evt.target.matches('[data-tab-btn]')) {\r\n      const activeTab = evt.target;\r\n      const indexActiveTab = tabs.indexOf(activeTab);\r\n\r\n\r\n      tabs.forEach((tab) => {\r\n        tab.classList.remove('is-active');\r\n      })\r\n      activeTab.classList.add('is-active');\r\n\r\n\r\n      tabContents.forEach((content) => {\r\n        content.classList.remove('is-active');\r\n      })\r\n      tabContents[indexActiveTab].classList.add('is-active');\r\n    }\r\n\r\n    // Развернуть/Свернуть описание товара\r\n    if (window.matchMedia('screen and (max-width: 767px)').matches) {\r\n\r\n      if (evt.target.matches('[data-product-info-btn]')) {\r\n        const productInfoBtn = evt.target;\r\n        const productInfoBlock = evt.target.closest('[data-tab-content]');\r\n        const productInfoWrapper = productInfoBlock.querySelector('[data-product-info]');\r\n        const productInfoContent = productInfoWrapper.querySelector('[data-product-info-content]');\r\n        const productInfoMaxHeight = productInfoContent.querySelector('[data-first-paragraph]').scrollHeight;\r\n        // console.log(productInfoMaxHeight)\r\n\r\n        productInfoWrapper.classList.toggle('is-show');\r\n\r\n        if (productInfoWrapper.classList.contains('is-show')) {\r\n          productInfoContent.style.maxHeight = `${productInfoContent.scrollHeight}px`;\r\n          productInfoBtn.textContent = 'Свернуть';\r\n        } else {\r\n          productInfoContent.style.maxHeight = `${productInfoMaxHeight}px`;\r\n          productInfoBtn.textContent = 'Развернуть описание';\r\n        }\r\n\r\n        // console.log('ok')\r\n      }\r\n    }\r\n\r\n  })\r\n}\r\n\r\n\r\n// Аккордеон в комментариях\r\n\r\nconst userReviewBlock = document.querySelector('[data-reviews]');\r\n\r\nif (userReviewBlock) {\r\n\r\n  // Ответ на отзыв\r\n  userReviewBlock.addEventListener('click', (evt) => {\r\n    if (evt.target.matches('[data-user-comments]')) {\r\n      const userCommentsShowBtn = evt.target;\r\n      const currentUserReviewBlock = userCommentsShowBtn.closest('[data-user-review]');\r\n      const commentsWrapper = currentUserReviewBlock.querySelector('[data-comments-wrapper]');\r\n\r\n      commentsWrapper.classList.toggle('is-open');\r\n      userCommentsShowBtn.classList.toggle('is-open');\r\n\r\n\r\n      if (commentsWrapper.classList.contains('is-open')) {\r\n        commentsWrapper.style.maxHeight = commentsWrapper.scrollHeight + 'px';\r\n      } else {\r\n        commentsWrapper.classList.remove('is-open');\r\n        userCommentsShowBtn.classList.remove('is-open');\r\n        commentsWrapper.style.maxHeight = 0;\r\n\r\n      }\r\n    }\r\n\r\n    // Ответ на коммент\r\n    if (evt.target.matches('[data-comment-answer-btn]')) {\r\n      const answerCommentBtn = evt.target;\r\n\r\n      const currentUserReviewBlock = answerCommentBtn.closest('[data-user-review]');\r\n      const commentsWrapper = currentUserReviewBlock.querySelector('[data-comments-wrapper]');\r\n\r\n      const commentItem = answerCommentBtn.closest('[data-user-comment]');\r\n      const commentFooter = commentItem.querySelector('[data-comment-footer]');\r\n      const commentsAnswerForm = commentItem.querySelector('[data-answer-form]');\r\n\r\n      commentsAnswerForm.classList.toggle('is-open');\r\n      commentFooter.classList.toggle('is-open');\r\n\r\n      if (commentsAnswerForm.classList.contains('is-open')) {\r\n        commentsAnswerForm.style.maxHeight = commentsAnswerForm.scrollHeight + 'px';\r\n        commentsWrapper.style.maxHeight = '100%';\r\n        console.log(commentsWrapper)\r\n      } else {\r\n        commentsAnswerForm.classList.remove('is-open');\r\n        commentFooter.classList.remove('is-open');\r\n        commentsAnswerForm.style.maxHeight = 0;\r\n\r\n      }\r\n    }\r\n\r\n    if (evt.target.matches('[data-comment-answer-btn]')) {\r\n\r\n    }\r\n\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// =====================\r\n\r\n// Ищем в фильтре товаров, чтобы не сбить работу сортировки товаров\r\nconst filterCatalog = document.querySelector('[data-filter-catalog]');\r\n\r\nif (filterCatalog) {\r\n\r\n  /**\r\n  * Код клавиши Tab\r\n  */\r\n  const KEYCODE_TAB = 9;\r\n\r\n  const selectInputFields = filterCatalog.querySelectorAll('[data-select-input-field]');\r\n  const filterSelects = filterCatalog.querySelectorAll('[data-select]');\r\n\r\n\r\n  selectInputFields.forEach((selectInput) => {\r\n    selectInput.checked = false;\r\n  })\r\n\r\n\r\n  selectInputFields.forEach((selectInput) => {\r\n    selectInput.addEventListener('change', (evt) => {\r\n      evt.stopPropagation();\r\n\r\n      const selectInputField = evt.target;\r\n      const currentSelect = evt.target.closest('[data-select]');\r\n      const selectedOption = currentSelect.querySelector('[data-select-btn]');\r\n      const selectOptions = currentSelect.querySelectorAll('[data-select-item]');\r\n      const filterSelectList = currentSelect.querySelector('[data-select-list]');\r\n\r\n\r\n      /**\r\n      * @description Ловушка фокуса\r\n      */\r\n      const onTrapFocus = (evt) => {\r\n        // Элементы списка можно изменять и это может быть не только button\r\n        const focusableEls = filterSelectList.querySelectorAll('button');\r\n        const firstFocusableEl = focusableEls[0];\r\n        const lastFocusableEl = focusableEls[focusableEls.length - 1];\r\n        const isTabPressed = (evt.key === 'Tab' || evt.key === KEYCODE_TAB)\r\n\r\n        if (!isTabPressed) {\r\n          return\r\n        }\r\n\r\n        /* shift + tab */\r\n        if (evt.shiftKey) {\r\n          if (document.activeElement === firstFocusableEl) {\r\n            lastFocusableEl.focus();\r\n            evt.preventDefault();\r\n          }\r\n          /* tab */\r\n        } else {\r\n          if (document.activeElement === lastFocusableEl) {\r\n            firstFocusableEl.focus()\r\n            evt.preventDefault();\r\n          }\r\n        }\r\n      }\r\n\r\n      const onClickOverlay = (evt) => {\r\n\r\n        const overlayClick = !evt.composedPath().includes(currentSelect)\r\n\r\n        if (overlayClick) {\r\n          currentSelect.classList.remove('is-show');\r\n          filterSelectList.style.maxHeight = 0;\r\n          selectInputField.checked = false;\r\n\r\n          selectOptions.forEach((option) => {\r\n            option.disabled = true;\r\n          })\r\n\r\n          filterSelectList.removeEventListener('click', onChangeSelectValue);\r\n          document.removeEventListener('click', onClickOverlay);\r\n          filterSelectList.removeEventListener('keydown', onTrapFocus);\r\n        }\r\n      }\r\n\r\n\r\n      const onChangeSelectValue = (evt) => {\r\n        if (evt.target.matches('[data-select-item]')) {\r\n\r\n          const selectItem = evt.target;\r\n          const selectItemValue = selectItem.textContent;\r\n\r\n          if (selectItemValue !== selectedOption.textContent) {\r\n            selectInputField.value = selectItemValue;\r\n            selectedOption.textContent = selectItemValue;\r\n\r\n            currentSelect.classList.remove('is-show');\r\n            filterSelectList.style.maxHeight = 0;\r\n            selectInputField.checked = false;\r\n\r\n            filterSelectList.removeEventListener('click', onChangeSelectValue);\r\n            filterSelectList.removeEventListener('keydown', onTrapFocus);\r\n            document.removeEventListener('click', onClickOverlay);\r\n\r\n          } else {\r\n            currentSelect.classList.remove('is-show');\r\n            filterSelectList.style.maxHeight = 0;\r\n            selectInputField.checked = false;\r\n\r\n            filterSelectList.removeEventListener('click', onChangeSelectValue);\r\n            filterSelectList.removeEventListener('keydown', onTrapFocus);\r\n            document.removeEventListener('click', onClickOverlay);\r\n\r\n          }\r\n        }\r\n      }\r\n\r\n      if (evt.target.checked === true) {\r\n\r\n        filterSelects.forEach((select) => {\r\n          select.classList.remove('is-show');\r\n        })\r\n\r\n        currentSelect.classList.add('is-show');\r\n        filterSelectList.style.maxHeight = `${filterSelectList.scrollHeight}px`;\r\n\r\n        selectOptions.forEach((option) => {\r\n          option.disabled = false;\r\n        })\r\n\r\n        filterSelectList.addEventListener('click', onChangeSelectValue);\r\n        filterSelectList.addEventListener('keydown', onTrapFocus);\r\n        document.addEventListener('click', onClickOverlay);\r\n\r\n\r\n      } else {\r\n        currentSelect.classList.remove('is-show');\r\n        filterSelectList.style.maxHeight = 0;\r\n        selectInputField.checked = false;\r\n\r\n        selectOptions.forEach((option) => {\r\n          option.disabled = true;\r\n        })\r\n\r\n        filterSelectList.removeEventListener('click', onChangeSelectValue);\r\n        filterSelectList.removeEventListener('keydown', onTrapFocus);\r\n        document.removeEventListener('click', onClickOverlay);\r\n\r\n      }\r\n    })\r\n  })\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"sourceRoot":""}